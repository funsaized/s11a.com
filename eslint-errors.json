
Error while parsing /Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ui/toast.tsx
Line 64, column 4: Expression expected.
`parseForESLint` from parser `@typescript-eslint/parser` is invalid and will just be ignored

Error while parsing /Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ui/toast.tsx
Line 64, column 4: Expression expected.
`parseForESLint` from parser `@typescript-eslint/parser` is invalid and will just be ignored

Error while parsing /Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ui/toast.tsx
Line 64, column 4: Expression expected.
`parseForESLint` from parser `@typescript-eslint/parser` is invalid and will just be ignored

Error while parsing /Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ui/toast.tsx
Line 64, column 4: Expression expected.
`parseForESLint` from parser `@typescript-eslint/parser` is invalid and will just be ignored

Error while parsing /Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ui/toast.tsx
Line 64, column 4: Expression expected.
`parseForESLint` from parser `@typescript-eslint/parser` is invalid and will just be ignored

Error while parsing /Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ui/toast.tsx
Line 64, column 4: Expression expected.
`parseForESLint` from parser `@typescript-eslint/parser` is invalid and will just be ignored

Error while parsing /Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ui/toast.tsx
Line 64, column 4: Expression expected.
`parseForESLint` from parser `@typescript-eslint/parser` is invalid and will just be ignored

Error while parsing /Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ui/toast.tsx
Line 64, column 4: Expression expected.
`parseForESLint` from parser `@typescript-eslint/parser` is invalid and will just be ignored

Error while parsing /Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ui/toast.tsx
Line 64, column 4: Expression expected.
`parseForESLint` from parser `@typescript-eslint/parser` is invalid and will just be ignored

Error while parsing /Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ui/toast.tsx
Line 64, column 4: Expression expected.
`parseForESLint` from parser `@typescript-eslint/parser` is invalid and will just be ignored
[{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/data/SiteConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/data/books.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/data/projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/declarations.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/gatsby-browser.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":17,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":17,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[635,728],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":36,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":36,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1312,1376],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":55,"column":18,"nodeType":"CallExpression","messageId":"unexpected","endLine":57,"endColumn":4},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","line":64,"column":49,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSingleBlock","endLine":70,"endColumn":2,"fix":{"range":[2129,2227],"text":"(\n    <ThemeProvider defaultTheme=\"system\">\n      {element}\n    </ThemeProvider>\n  )"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { onCLS, onINP, onLCP, onFCP, onTTFB } from 'web-vitals';\nimport React from 'react';\nimport { ThemeProvider } from './src/context/ThemeContext';\n\n// Lazy load images that are not in viewport & Initialize Web Vitals\nexport const onClientEntry = () => {\n  // IntersectionObserver polyfill for older browsers\n  if (typeof window !== \"undefined\" && !window.IntersectionObserver) {\n    import(\"intersection-observer\");\n  }\n  \n  // Web Vitals monitoring\n  if (typeof window !== \"undefined\") {\n    const sendToAnalytics = (metric) => {\n      // Log to console in development\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(`[Web Vitals] ${metric.name}:`, metric.value.toFixed(2), metric.rating || 'N/A');\n      }\n      \n      // You can send to your analytics service here\n      // Example: window.gtag('event', metric.name, { value: metric.value, rating: metric.rating });\n    };\n    \n    onCLS(sendToAnalytics);\n    onINP(sendToAnalytics); // INP replaced FID in web-vitals v5\n    onLCP(sendToAnalytics);\n    onFCP(sendToAnalytics);\n    onTTFB(sendToAnalytics);\n  }\n};\n\n// Log web vitals on route changes\nexport const onRouteUpdate = ({ location, prevLocation }) => {\n  if (process.env.NODE_ENV === \"production\" && typeof window !== \"undefined\") {\n    // Track page views if needed\n    console.log(\"Route changed from\", prevLocation, \"to\", location);\n  }\n};\n\n// Optimize prefetching\nexport const disableCorePrefetching = () => true;\n\n// Custom prefetch logic - only prefetch when user is likely to click\nexport const onPrefetchPathname = ({ pathname }) => {\n  // Only prefetch blog posts when hovering\n  if (pathname.includes(\"/blog/\") || pathname.includes(\"/tags/\")) {\n    return true;\n  }\n  // Don't prefetch other pages automatically\n  return false;\n};\n\n// Service worker updates\nexport const onServiceWorkerUpdateReady = () => {\n  const answer = window.confirm(\n    \"This application has been updated. Reload to display the latest version?\",\n  );\n  if (answer === true) {\n    window.location.reload();\n  }\n};\n\n// Wrap root element with theme provider\nexport const wrapRootElement = ({ element }) => {\n  return (\n    <ThemeProvider defaultTheme=\"system\">\n      {element}\n    </ThemeProvider>\n  );\n};\n","usedDeprecatedRules":[{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/gatsby-config.ts","messages":[{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":163,"column":17,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":173,"endColumn":37},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":165,"column":21,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":173,"endColumn":37},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":167,"column":23,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":173,"endColumn":37},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":169,"column":25,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":173,"endColumn":37},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":176,"column":17,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":188,"endColumn":34},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":178,"column":21,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":188,"endColumn":34},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":180,"column":23,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":188,"endColumn":34},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":182,"column":25,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":188,"endColumn":34},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":184,"column":27,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":188,"endColumn":34},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; parenthesize the returned value and move it immediately after the `=>`.","line":192,"column":35,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedObjectBlock","endLine":199,"endColumn":10,"fix":{"range":[5669,5853],"text":"({\n            url: page.path,\n            lastmod: page.lastmod,\n            changefreq: page.changefreq,\n            priority: page.priority,\n          })"}}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import type { GatsbyConfig } from \"gatsby\";\nimport urljoin from \"url-join\";\nimport config from \"./data/SiteConfig\";\n\nconst gatsbyConfig: GatsbyConfig = {\n  pathPrefix: config.pathPrefix === \"\" ? \"/\" : config.pathPrefix,\n  siteMetadata: {\n    siteUrl: urljoin(config.siteUrl, config.pathPrefix),\n    rssMetadata: {\n      site_url: urljoin(config.siteUrl, config.pathPrefix),\n      feed_url: urljoin(config.siteUrl, config.pathPrefix, config.siteRss),\n      title: config.siteTitle,\n      description: config.siteDescription,\n      image_url: `${urljoin(\n        config.siteUrl,\n        config.pathPrefix,\n      )}/logos/logo-512.png`,\n      copyright: config.copyright,\n    },\n  },\n  // Enhanced performance optimizations\n  flags: {\n    DEV_SSR: false,\n  },\n  headers: [\n    {\n      source: `/static/*`,\n      headers: [\n        {\n          key: `Cache-Control`,\n          value: `public, max-age=31536000, immutable`,\n        },\n        {\n          key: `X-Frame-Options`,\n          value: `SAMEORIGIN`,\n        },\n        {\n          key: `X-Content-Type-Options`,\n          value: `nosniff`,\n        },\n        {\n          key: `X-XSS-Protection`,\n          value: `1; mode=block`,\n        },\n      ],\n    },\n    {\n      source: `**/*.{js,jsx,ts,tsx,css,woff,woff2,ttf,otf}`,\n      headers: [\n        {\n          key: `Cache-Control`,\n          value: `public, max-age=31536000, immutable`,\n        },\n      ],\n    },\n    {\n      source: `**/*.{jpg,jpeg,png,gif,ico,svg,webp,avif}`,\n      headers: [\n        {\n          key: `Cache-Control`,\n          value: `public, max-age=31536000, immutable`,\n        },\n      ],\n    },\n  ],\n  plugins: [\n    // Bundle analyzer for development insights\n    ...(process.env.ANALYZE\n      ? [\n          {\n            resolve: \"gatsby-plugin-webpack-bundle-analyser-v2\",\n            options: {\n              analyzerMode: \"server\",\n              analyzerPort: 8080,\n              openAnalyzer: true,\n            },\n          },\n        ]\n      : []),\n    {\n      resolve: \"gatsby-plugin-sitemap\",\n      options: {\n        excludes: [\n          \"/dev-404-page/\",\n          \"/404/\",\n          \"/404.html\",\n          \"/offline-plugin-app-shell-fallback/\",\n        ],\n        query: `\n          {\n            site {\n              siteMetadata {\n                siteUrl\n              }\n            }\n            allSitePage {\n              nodes {\n                path\n                pageContext\n              }\n            }\n            allMarkdownRemark {\n              nodes {\n                fields {\n                  slug\n                  date\n                }\n                frontmatter {\n                  date\n                  title\n                }\n                parent {\n                  ... on File {\n                    modifiedTime(formatString: \"YYYY-MM-DD\")\n                  }\n                }\n              }\n            }\n          }\n        `,\n        resolveSiteUrl: () => config.siteUrl,\n        resolvePages: ({\n          allSitePage: { nodes: allPages },\n          allMarkdownRemark: { nodes: allPosts },\n        }: any) => {\n          // Create a map of blog post data by slug for quick lookup\n          const postDataMap = allPosts.reduce((acc: any, post: any) => {\n            if (post.fields?.slug) {\n              // Ensure the slug matches the URL path format\n              const slug = post.fields.slug.endsWith(\"/\")\n                ? post.fields.slug\n                : `${post.fields.slug}/`;\n              acc[slug] = {\n                modifiedTime: post.parent?.modifiedTime,\n                date: post.frontmatter?.date || post.fields?.date,\n              };\n            }\n            return acc;\n          }, {});\n\n          // Map all pages with their metadata\n          return allPages.map((page: any) => {\n            // Get the blog post data if this is a blog post page\n            const postData = postDataMap[page.path];\n\n            // Determine if this is a blog post (not a tag, category, or static page)\n            const isBlogPost =\n              postData &&\n              !page.path.includes(\"/tags/\") &&\n              !page.path.includes(\"/categories/\") &&\n              page.path !== \"/\" &&\n              page.path !== \"/blog/\" &&\n              page.path !== \"/about/\";\n\n            return {\n              path: page.path,\n              // Use modified time if available, otherwise use post date for blog posts\n              lastmod: isBlogPost\n                ? postData.modifiedTime || postData.date\n                : undefined,\n              // Set changefreq based on page type\n              changefreq:\n                page.path === \"/\"\n                  ? \"daily\"\n                  : page.path === \"/blog/\"\n                    ? \"weekly\"\n                    : page.path.includes(\"/tags/\")\n                      ? \"monthly\"\n                      : page.path.includes(\"/categories/\")\n                        ? \"monthly\"\n                        : isBlogPost\n                          ? \"monthly\"\n                          : \"weekly\",\n              // Set priority based on page importance\n              priority:\n                page.path === \"/\"\n                  ? 1.0\n                  : page.path === \"/blog/\"\n                    ? 0.9\n                    : page.path === \"/about/\"\n                      ? 0.8\n                      : isBlogPost\n                        ? 0.7\n                        : page.path.includes(\"/tags/\")\n                          ? 0.5\n                          : page.path.includes(\"/categories/\")\n                            ? 0.5\n                            : 0.6,\n            };\n          });\n        },\n        serialize: (page: any) => {\n          return {\n            url: page.path,\n            lastmod: page.lastmod,\n            changefreq: page.changefreq,\n            priority: page.priority,\n          };\n        },\n      },\n    },\n    {\n      resolve: \"gatsby-plugin-robots-txt\",\n      options: {\n        host: config.siteUrl,\n        sitemap: `${config.siteUrl}/sitemap.xml`,\n        policy: [\n          {\n            userAgent: \"*\",\n            allow: \"/\",\n            disallow: [\n              \"/dev-404-page/\",\n              \"/404/\",\n              \"/404.html\",\n              \"/offline-plugin-app-shell-fallback/\",\n            ],\n            crawlDelay: 2,\n          },\n        ],\n      },\n    },\n    \"gatsby-disable-404\",\n    \"gatsby-plugin-postcss\", // Add PostCSS plugin for Tailwind\n    \"gatsby-plugin-react-helmet\",\n    {\n      resolve: \"gatsby-source-filesystem\",\n      options: {\n        name: \"assets\",\n        path: `${__dirname}/static/`,\n      },\n    },\n    {\n      resolve: \"gatsby-source-filesystem\",\n      options: {\n        name: \"posts\",\n        path: `${__dirname}/content/`,\n      },\n    },\n    {\n      resolve: \"gatsby-transformer-remark\",\n      options: {\n        plugins: [\n          {\n            resolve: \"gatsby-remark-images\",\n            options: {\n              maxWidth: 1200,\n              quality: 85,\n              withWebp: true,\n              withAvif: true,\n              loading: \"lazy\",\n              linkImagesToOriginal: false,\n              showCaptions: false,\n              backgroundColor: \"transparent\",\n              srcSetBreakpoints: [200, 340, 520, 890, 1200],\n            },\n          },\n          {\n            resolve: \"gatsby-remark-responsive-iframe\",\n          },\n          \"gatsby-remark-copy-linked-files\",\n          \"gatsby-remark-autolink-headers\",\n          {\n            resolve: `gatsby-remark-prismjs`,\n            options: {\n              classPrefix: \"language-\",\n              aliases: {},\n              showLineNumbers: false,\n              noInlineHighlight: false,\n              inlineCodeMarker: \">\",\n              languageExtensions: [\n                {\n                  language: \"superscript\",\n                  extend: \"javascript\",\n                  definition: {\n                    superscript_types: /(SuperType)/,\n                  },\n                  insertBefore: {\n                    function: {\n                      superscript_keywords: /(superif|superelse)/,\n                    },\n                  },\n                },\n              ],\n              prompt: {\n                user: \"root\",\n                host: \"localhost\",\n                global: false,\n              },\n              escapeEntities: {},\n            },\n          },\n        ],\n      },\n    },\n    {\n      resolve: \"gatsby-plugin-nprogress\",\n      options: {\n        color: config.themeColor,\n      },\n    },\n    {\n      resolve: \"gatsby-plugin-image\",\n      options: {\n        defaults: {\n          formats: [\"auto\", \"webp\", \"avif\"],\n          quality: 85,\n          loading: \"lazy\",\n          placeholder: \"blurred\",\n          breakpoints: [750, 1080, 1366, 1920],\n        },\n      },\n    },\n    {\n      resolve: \"gatsby-plugin-sharp\",\n      options: {\n        defaults: {\n          formats: [\"auto\", \"webp\", \"avif\"],\n          quality: 85,\n          placeholder: \"blurred\",\n          breakpoints: [750, 1080, 1366, 1920],\n        },\n        // Enhanced AVIF encoding\n        avifOptions: {\n          quality: 75,\n          lossless: false,\n          effort: 4,\n        },\n        // Optimized WebP encoding\n        webpOptions: {\n          quality: 85,\n          lossless: false,\n        },\n        // JPEG optimization\n        jpgOptions: {\n          quality: 85,\n          progressive: true,\n        },\n        // PNG optimization\n        pngOptions: {\n          quality: 90,\n          compressionSpeed: 4,\n        },\n      },\n    },\n    \"gatsby-transformer-sharp\",\n    \"gatsby-plugin-catch-links\",\n    {\n      resolve: \"gatsby-plugin-manifest\",\n      options: {\n        name: config.siteTitle,\n        short_name: config.siteTitleShort,\n        description: config.siteDescription,\n        start_url: config.pathPrefix,\n        background_color: config.backgroundColor,\n        theme_color: config.themeColor,\n        display: \"minimal-ui\",\n        icon: \"src/favicon.png\",\n        icon_options: {\n          purpose: \"any maskable\",\n        },\n        cache_busting_mode: \"none\",\n      },\n    },\n    {\n      resolve: \"gatsby-plugin-offline\",\n      options: {\n        precachePages: [\"/\", \"/blog/*\", \"/about/\"],\n        workboxConfig: {\n          globPatterns: [\n            \"**/*.{js,jpg,png,gif,html,css,webp,avif,woff,woff2,ttf,svg,ico}\",\n          ],\n          maximumFileSizeToCacheInBytes: 8 * 1024 * 1024, // 8MB for modern formats\n          runtimeCaching: [\n            {\n              urlPattern: /^https?:.*\\/page-data\\/.*\\.json$/,\n              handler: \"CacheFirst\",\n            },\n            {\n              urlPattern: /^https?:.*\\.(png|jpg|jpeg|webp|avif|svg|gif|tiff)$/i,\n              handler: \"CacheFirst\",\n            },\n            {\n              urlPattern: /^https?:.*\\.(woff|woff2|ttf|otf)$/i,\n              handler: \"CacheFirst\",\n            },\n          ],\n        },\n      },\n    },\n    {\n      resolve: \"gatsby-plugin-feed\",\n      options: {\n        setup(ref) {\n          const ret = ref.query.site.siteMetadata.rssMetadata;\n          ret.allMarkdownRemark = ref.query.allMarkdownRemark;\n          ret.generator = \"s11a Programming Blog\";\n          return ret;\n        },\n        query: `\n        {\n          site {\n            siteMetadata {\n              rssMetadata {\n                site_url\n                feed_url\n                title\n                description\n                image_url\n                copyright\n              }\n            }\n          }\n        }\n      `,\n        feeds: [\n          {\n            serialize(ctx) {\n              const { rssMetadata } = ctx.query.site.siteMetadata;\n              return ctx.query.allMarkdownRemark.edges.map((edge) => ({\n                categories: edge.node.frontmatter.tags,\n                date: edge.node.fields.date,\n                title: edge.node.frontmatter.title,\n                description: edge.node.excerpt,\n                url: rssMetadata.site_url + edge.node.fields.slug,\n                guid: rssMetadata.site_url + edge.node.fields.slug,\n                custom_elements: [\n                  { \"content:encoded\": edge.node.html },\n                  { author: config.userEmail },\n                ],\n              }));\n            },\n            query: `{\n  allMarkdownRemark(limit: 1000, sort: {fields: {date: DESC}}) {\n    edges {\n      node {\n        excerpt\n        html\n        timeToRead\n        fields {\n          slug\n          date\n        }\n        frontmatter {\n          title\n          cover\n          date\n          category\n          tags\n        }\n      }\n    }\n  }\n}`,\n            output: config.siteRss,\n            title: \"Sai Nimmagadda's Programming Blog\",\n          },\n        ],\n      },\n    },\n  ],\n};\n\nexport default gatsbyConfig;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/gatsby-node.ts","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'webpack' should be listed in the project's dependencies. Run 'npm i -S webpack' to add it","line":3,"column":1,"nodeType":"ImportDeclaration","endLine":3,"endColumn":31}],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":84,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":84,"endColumn":23,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[2728,2785],"text":""},"desc":"Remove the console.warn()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":129,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":129,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3716,3758],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/* eslint-disable no-console */\nimport path from \"path\";\nimport webpack from \"webpack\";\nimport kebabCase from \"lodash.kebabcase\";\nimport type { GatsbyNode } from \"gatsby\";\nimport siteConfig from \"./data/SiteConfig\";\n\n// Native Date parsing function to replace moment\nconst parseDate = (dateString: string, format: string): Date => {\n  // Handle MM-DD-YYYY format\n  if (format === \"MM-DD-YYYY\" && dateString.includes(\"-\")) {\n    const [month, day, year] = dateString.split(\"-\");\n    return new Date(Date.UTC(year, month - 1, day));\n  }\n  // Handle MM/DD/YYYY format (common in frontmatter)\n  if (dateString.includes(\"/\")) {\n    const [month, day, year] = dateString.split(\"/\");\n    return new Date(Date.UTC(year, month - 1, day));\n  }\n  // Default to native Date parsing\n  return new Date(dateString);\n};\n\nexport const onCreateWebpackConfig: GatsbyNode[\"onCreateWebpackConfig\"] = ({\n  actions,\n}) => {\n  actions.setWebpackConfig({\n    plugins: [\n      new webpack.ProvidePlugin({\n        Buffer: [\"buffer/\", \"Buffer\"],\n      }),\n    ],\n    resolve: {\n      alias: {\n        \"@/components\": path.resolve(__dirname, \"src/components\"),\n        \"@/lib\": path.resolve(__dirname, \"src/lib\"),\n        \"@/styles\": path.resolve(__dirname, \"src/styles\"),\n      },\n      fallback: {\n        crypto: false,\n        assert: false,\n        util: false,\n        http: false,\n        https: false,\n        os: false,\n      },\n    },\n  });\n};\n\n// Modifies markdownRemark nodes to include a date & slug field\nexport const onCreateNode: GatsbyNode[\"onCreateNode\"] = ({\n  node,\n  actions,\n  getNode,\n}) => {\n  const { createNodeField } = actions;\n  let slug;\n  if (node.internal.type === \"MarkdownRemark\") {\n    const fileNode = getNode(node.parent);\n    const parsedFilePath = path.parse(fileNode.relativePath);\n    if (\n      Object.prototype.hasOwnProperty.call(node, \"frontmatter\") &&\n      Object.prototype.hasOwnProperty.call(node.frontmatter, \"title\")\n    ) {\n      slug = `/${kebabCase(node.frontmatter.title)}`;\n    } else if (parsedFilePath.name !== \"index\" && parsedFilePath.dir !== \"\") {\n      slug = `/${parsedFilePath.dir}/${parsedFilePath.name}/`;\n    } else if (parsedFilePath.dir === \"\") {\n      slug = `/${parsedFilePath.name}/`;\n    } else {\n      slug = `/${parsedFilePath.dir}/`;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(node, \"frontmatter\")) {\n      if (Object.prototype.hasOwnProperty.call(node.frontmatter, \"slug\"))\n        slug = `/${kebabCase(node.frontmatter.slug)}`;\n      if (Object.prototype.hasOwnProperty.call(node.frontmatter, \"date\")) {\n        const date = parseDate(\n          node.frontmatter.date,\n          siteConfig.dateFromFormat,\n        );\n        if (Number.isNaN(date.getTime())) {\n          console.warn(`WARNING: Invalid date.`, node.frontmatter);\n        }\n\n        createNodeField({\n          node,\n          name: \"date\",\n          value: date.toISOString(),\n        });\n      }\n    }\n    createNodeField({ node, name: \"slug\", value: slug });\n  }\n};\n\n// Programmatic page creation via node APIs\nexport const createPages: GatsbyNode[\"createPages\"] = async ({\n  graphql,\n  actions,\n}) => {\n  const { createPage } = actions;\n  const postPage = path.resolve(\"src/templates/post.tsx\");\n  const tagPage = path.resolve(\"src/templates/tag.tsx\");\n  const categoryPage = path.resolve(\"src/templates/category.tsx\");\n\n  const markdownQueryResult = await graphql(`\n    {\n      allMarkdownRemark {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              tags\n              category\n              date\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  if (markdownQueryResult.errors) {\n    console.error(markdownQueryResult.errors);\n    throw markdownQueryResult.errors;\n  }\n\n  const tagSet = new Set();\n  const categorySet = new Set();\n\n  const postsEdges = markdownQueryResult.data.allMarkdownRemark.edges;\n\n  postsEdges.sort((postA, postB) => {\n    const dateA = parseDate(\n      postA.node.frontmatter.date,\n      siteConfig.dateFromFormat,\n    );\n\n    const dateB = parseDate(\n      postB.node.frontmatter.date,\n      siteConfig.dateFromFormat,\n    );\n\n    // Sort in descending order (newer dates first)\n    return dateB.getTime() - dateA.getTime();\n  });\n\n  postsEdges.forEach((edge, index) => {\n    if (edge.node.frontmatter.tags) {\n      edge.node.frontmatter.tags.forEach((tag) => {\n        tagSet.add(tag);\n      });\n    }\n\n    if (edge.node.frontmatter.category) {\n      categorySet.add(edge.node.frontmatter.category);\n    }\n\n    const nextID = index + 1 < postsEdges.length ? index + 1 : 0;\n    const prevID = index - 1 >= 0 ? index - 1 : postsEdges.length - 1;\n    const nextEdge = postsEdges[nextID];\n    const prevEdge = postsEdges[prevID];\n\n    createPage({\n      path: edge.node.fields.slug,\n      component: postPage,\n      context: {\n        slug: edge.node.fields.slug,\n        nexttitle: nextEdge.node.frontmatter.title,\n        nextslug: nextEdge.node.fields.slug,\n        prevtitle: prevEdge.node.frontmatter.title,\n        prevslug: prevEdge.node.fields.slug,\n      },\n    });\n  });\n\n  tagSet.forEach((tag) => {\n    createPage({\n      path: `/tags/${kebabCase(tag)}/`,\n      component: tagPage,\n      context: {\n        tag,\n      },\n    });\n  });\n\n  categorySet.forEach((category) => {\n    createPage({\n      path: `/categories/${kebabCase(category)}/`,\n      component: categoryPage,\n      context: {\n        category,\n      },\n    });\n  });\n};\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/gatsby-ssr.js","messages":[{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","line":5,"column":49,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSingleBlock","endLine":11,"endColumn":2,"fix":{"range":[185,283],"text":"(\n    <ThemeProvider defaultTheme=\"system\">\n      {element}\n    </ThemeProvider>\n  )"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React from 'react';\nimport { ThemeProvider } from './src/context/ThemeContext';\n\n// Wrap root element with theme provider for SSR\nexport const wrapRootElement = ({ element }) => {\n  return (\n    <ThemeProvider defaultTheme=\"system\">\n      {element}\n    </ThemeProvider>\n  );\n};\n\n// Inject initial theme script to prevent FOUC (Flash of Unstyled Content)\nexport const onRenderBody = ({ setHeadComponents }) => {\n  const script = `\n    (function() {\n      try {\n        // Get saved theme preference\n        const savedTheme = localStorage.getItem('theme-preference');\n        \n        // Determine initial theme\n        let theme = 'system';\n        if (savedTheme && ['light', 'dark', 'system'].includes(savedTheme)) {\n          theme = savedTheme;\n        }\n        \n        // Apply theme before page load\n        if (theme === 'system') {\n          // Remove explicit classes and let CSS media query handle system preference\n          document.documentElement.classList.remove('dark', 'light');\n          document.documentElement.setAttribute('data-theme', 'system');\n        } else {\n          // Set explicit theme class\n          document.documentElement.classList.remove('dark', 'light');\n          document.documentElement.classList.add(theme);\n          document.documentElement.setAttribute('data-theme', theme);\n        }\n      } catch (e) {\n        // Fallback to system preference\n        console.warn('Theme initialization failed:', e);\n      }\n    })();\n  `;\n\n  setHeadComponents([\n    <script\n      key=\"theme-init\"\n      dangerouslySetInnerHTML={{ __html: script }}\n    />\n  ]);\n};","usedDeprecatedRules":[{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/postcss.config.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: ESLint was configured to run on `<tsconfigRootDir>/postcss.config.js` using `parserOptions.project`: /users/saiguy/documents/programming/snimmagadda1/s11a.com/tsconfig.json\nHowever, that TSConfig does not include this file. Either:\n- Change ESLint's list of included files to not include this file\n- Change that TSConfig to include this file\n- Create a new TSConfig that includes this file and include it in your parserOptions.project\nSee the typescript-eslint docs for more info: https://typescript-eslint.io/linting/troubleshooting#i-get-errors-telling-me-eslint-was-configured-to-run--however-that-tsconfig-does-not--none-of-those-tsconfigs-include-this-file","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}","usedDeprecatedRules":[{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/scripts/content-audit.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: ESLint was configured to run on `<tsconfigRootDir>/scripts/content-audit.js` using `parserOptions.project`: /users/saiguy/documents/programming/snimmagadda1/s11a.com/tsconfig.json\nHowever, that TSConfig does not include this file. Either:\n- Change ESLint's list of included files to not include this file\n- Change that TSConfig to include this file\n- Create a new TSConfig that includes this file and include it in your parserOptions.project\nSee the typescript-eslint docs for more info: https://typescript-eslint.io/linting/troubleshooting#i-get-errors-telling-me-eslint-was-configured-to-run--however-that-tsconfig-does-not--none-of-those-tsconfigs-include-this-file","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"#!/usr/bin/env node\n\n/**\n * Content Audit Script for Gatsby Blog\n * Analyzes markdown content for SEO completeness\n */\n\nconst fs = require('fs');\nconst path = require('path');\nconst matter = require('gray-matter');\n\nconst CONTENT_DIR = path.join(__dirname, '../content');\nconst REQUIRED_FIELDS = ['title', 'slug', 'date', 'category', 'tags', 'type'];\nconst RECOMMENDED_FIELDS = ['description', 'thumbnail', 'time'];\n\nclass ContentAuditor {\n  constructor() {\n    this.issues = [];\n    this.stats = {\n      total: 0,\n      missingDescription: 0,\n      missingThumbnail: 0,\n      invalidCategory: 0,\n      missingTags: 0,\n      categoryInconsistencies: new Set()\n    };\n  }\n\n  auditFile(filePath) {\n    const content = fs.readFileSync(filePath, 'utf8');\n    const { data: frontmatter } = matter(content);\n    const relativePath = path.relative(CONTENT_DIR, filePath);\n    \n    const fileIssues = [];\n    this.stats.total++;\n\n    // Check required fields\n    REQUIRED_FIELDS.forEach(field => {\n      if (!frontmatter[field]) {\n        fileIssues.push(`Missing required field: ${field}`);\n      }\n    });\n\n    // Check recommended fields\n    if (!frontmatter.description) {\n      fileIssues.push('Missing meta description - important for SEO');\n      this.stats.missingDescription++;\n    }\n\n    if (!frontmatter.thumbnail) {\n      fileIssues.push('Missing thumbnail image - important for social sharing');\n      this.stats.missingThumbnail++;\n    }\n\n    // Check category consistency\n    if (frontmatter.category === 'test3') {\n      fileIssues.push('Using placeholder category \"test3\" - should be updated');\n      this.stats.invalidCategory++;\n      this.stats.categoryInconsistencies.add(relativePath);\n    }\n\n    // Check tags\n    if (!frontmatter.tags || !Array.isArray(frontmatter.tags) || frontmatter.tags.length === 0) {\n      fileIssues.push('Missing or empty tags array - important for content discovery');\n      this.stats.missingTags++;\n    }\n\n    // Check title length for SEO\n    if (frontmatter.title && frontmatter.title.length > 60) {\n      fileIssues.push(`Title too long (${frontmatter.title.length} chars) - should be under 60 for SEO`);\n    }\n\n    // Check description length\n    if (frontmatter.description && frontmatter.description.length > 160) {\n      fileIssues.push(`Description too long (${frontmatter.description.length} chars) - should be under 160 for SEO`);\n    }\n\n    if (fileIssues.length > 0) {\n      this.issues.push({\n        file: relativePath,\n        issues: fileIssues,\n        frontmatter\n      });\n    }\n\n    return fileIssues.length === 0;\n  }\n\n  scanDirectory(dir = CONTENT_DIR) {\n    const items = fs.readdirSync(dir);\n    \n    items.forEach(item => {\n      const fullPath = path.join(dir, item);\n      const stat = fs.statSync(fullPath);\n      \n      if (stat.isDirectory()) {\n        this.scanDirectory(fullPath);\n      } else if (item === 'index.md') {\n        this.auditFile(fullPath);\n      }\n    });\n  }\n\n  generateReport() {\n    console.log('\\n🔍 CONTENT AUDIT REPORT');\n    console.log('========================\\n');\n    \n    console.log(`📊 Statistics:`);\n    console.log(`   Total posts: ${this.stats.total}`);\n    console.log(`   Posts with issues: ${this.issues.length}`);\n    console.log(`   Health score: ${Math.round((1 - this.issues.length / this.stats.total) * 100)}%\\n`);\n    \n    console.log(`🚨 Critical Issues:`);\n    console.log(`   Missing descriptions: ${this.stats.missingDescription}`);\n    console.log(`   Missing thumbnails: ${this.stats.missingThumbnail}`);\n    console.log(`   Invalid categories: ${this.stats.invalidCategory}`);\n    console.log(`   Missing tags: ${this.stats.missingTags}\\n`);\n\n    if (this.stats.categoryInconsistencies.size > 0) {\n      console.log(`📝 Files with \"test3\" category (need updating):`);\n      this.stats.categoryInconsistencies.forEach(file => {\n        console.log(`   - ${file}`);\n      });\n      console.log();\n    }\n\n    if (this.issues.length > 0) {\n      console.log(`📋 Detailed Issues:\\n`);\n      this.issues.forEach(({ file, issues, frontmatter }) => {\n        console.log(`📄 ${file}`);\n        console.log(`   Title: \"${frontmatter.title}\"`);\n        issues.forEach(issue => {\n          console.log(`   ❌ ${issue}`);\n        });\n        console.log();\n      });\n    }\n\n    this.generateRecommendations();\n  }\n\n  generateRecommendations() {\n    console.log(`💡 RECOMMENDATIONS:\\n`);\n    \n    if (this.stats.missingDescription > 0) {\n      console.log(`1. Add meta descriptions to ${this.stats.missingDescription} posts`);\n      console.log(`   - Keep under 160 characters`);\n      console.log(`   - Include target keywords naturally`);\n      console.log(`   - Make them compelling for click-through\\n`);\n    }\n\n    if (this.stats.invalidCategory > 0) {\n      console.log(`2. Update category \"test3\" to meaningful categories:`);\n      console.log(`   - Suggested categories: \"Development\", \"Cloud\", \"Tutorial\", \"Tools\"`);\n      console.log(`   - Use consistent naming convention\\n`);\n    }\n\n    if (this.stats.missingThumbnail > 0) {\n      console.log(`3. Add thumbnail images to ${this.stats.missingThumbnail} posts`);\n      console.log(`   - Recommended size: 1200x630px`);\n      console.log(`   - Optimize for web (WebP format preferred)`);\n      console.log(`   - Use descriptive alt text\\n`);\n    }\n\n    console.log(`4. SEO Best Practices:`);\n    console.log(`   - Use consistent category names`);\n    console.log(`   - Add 3-5 relevant tags per post`);\n    console.log(`   - Keep titles under 60 characters`);\n    console.log(`   - Include reading time estimates\\n`);\n  }\n}\n\n// Run audit\nif (require.main === module) {\n  const auditor = new ContentAuditor();\n  \n  try {\n    auditor.scanDirectory();\n    auditor.generateReport();\n    \n    // Exit with error code if issues found for CI/CD\n    process.exit(auditor.issues.length > 0 ? 1 : 0);\n  } catch (error) {\n    console.error('❌ Audit failed:', error.message);\n    process.exit(1);\n  }\n}\n\nmodule.exports = ContentAuditor;","usedDeprecatedRules":[{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/scripts/performance-audit.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: ESLint was configured to run on `<tsconfigRootDir>/scripts/performance-audit.js` using `parserOptions.project`: /users/saiguy/documents/programming/snimmagadda1/s11a.com/tsconfig.json\nHowever, that TSConfig does not include this file. Either:\n- Change ESLint's list of included files to not include this file\n- Change that TSConfig to include this file\n- Create a new TSConfig that includes this file and include it in your parserOptions.project\nSee the typescript-eslint docs for more info: https://typescript-eslint.io/linting/troubleshooting#i-get-errors-telling-me-eslint-was-configured-to-run--however-that-tsconfig-does-not--none-of-those-tsconfigs-include-this-file","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"#!/usr/bin/env node\n\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n * Performance Audit Script\n * Analyzes the built site for performance optimizations and provides recommendations\n */\n\nconst PERFORMANCE_BUDGETS = {\n  // Core Web Vitals targets\n  LCP: 2500, // Largest Contentful Paint (ms)\n  FID: 100,  // First Input Delay (ms)\n  CLS: 0.1,  // Cumulative Layout Shift\n\n  // Bundle size budgets\n  INITIAL_JS: 500 * 1024,      // 500KB\n  TOTAL_JS: 2 * 1024 * 1024,   // 2MB\n  CSS: 100 * 1024,             // 100KB\n  FONTS: 300 * 1024,           // 300KB\n  IMAGES_PER_PAGE: 1024 * 1024, // 1MB per page\n};\n\nfunction checkFileExists(filePath) {\n  return fs.existsSync(path.join(__dirname, '..', filePath));\n}\n\nfunction getFileSize(filePath) {\n  try {\n    const fullPath = path.join(__dirname, '..', filePath);\n    const stats = fs.statSync(fullPath);\n    return stats.size;\n  } catch (error) {\n    return 0;\n  }\n}\n\nfunction formatBytes(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction checkBundleSizes() {\n  console.log('📦 Checking Bundle Sizes...\\n');\n  \n  const publicDir = path.join(__dirname, '..', 'public');\n  \n  if (!fs.existsSync(publicDir)) {\n    console.log('❌ Public directory not found. Run `npm run build` first.');\n    return;\n  }\n\n  // Check JavaScript bundles\n  const jsFiles = fs.readdirSync(publicDir)\n    .filter(file => file.endsWith('.js'))\n    .map(file => ({\n      name: file,\n      size: getFileSize(`public/${file}`),\n      path: `public/${file}`\n    }))\n    .sort((a, b) => b.size - a.size);\n\n  let totalJS = 0;\n  console.log('JavaScript Files:');\n  jsFiles.forEach(file => {\n    totalJS += file.size;\n    const status = file.size > PERFORMANCE_BUDGETS.INITIAL_JS ? '⚠️' : '✅';\n    console.log(`  ${status} ${file.name}: ${formatBytes(file.size)}`);\n  });\n\n  console.log(`\\nTotal JavaScript: ${formatBytes(totalJS)}`);\n  console.log(`Budget: ${formatBytes(PERFORMANCE_BUDGETS.TOTAL_JS)}`);\n  console.log(totalJS <= PERFORMANCE_BUDGETS.TOTAL_JS ? '✅ Within budget' : '⚠️ Over budget');\n\n  // Check CSS files\n  const cssFiles = fs.readdirSync(publicDir)\n    .filter(file => file.endsWith('.css'))\n    .map(file => ({\n      name: file,\n      size: getFileSize(`public/${file}`)\n    }))\n    .sort((a, b) => b.size - a.size);\n\n  let totalCSS = 0;\n  console.log('\\nCSS Files:');\n  cssFiles.forEach(file => {\n    totalCSS += file.size;\n    console.log(`  ${file.name}: ${formatBytes(file.size)}`);\n  });\n\n  console.log(`\\nTotal CSS: ${formatBytes(totalCSS)}`);\n  console.log(`Budget: ${formatBytes(PERFORMANCE_BUDGETS.CSS)}`);\n  console.log(totalCSS <= PERFORMANCE_BUDGETS.CSS ? '✅ Within budget' : '⚠️ Over budget');\n}\n\nfunction checkImageOptimization() {\n  console.log('\\n🖼️ Checking Image Optimization...\\n');\n\n  const staticDir = path.join(__dirname, '..', 'static');\n  const contentDir = path.join(__dirname, '..', 'content');\n  \n  let totalImages = 0;\n  let optimizedImages = 0;\n\n  function scanDirectory(dir, dirName) {\n    if (!fs.existsSync(dir)) return;\n\n    const files = fs.readdirSync(dir, { withFileTypes: true });\n    files.forEach(file => {\n      if (file.isDirectory()) {\n        scanDirectory(path.join(dir, file.name), `${dirName}/${file.name}`);\n      } else if (/\\.(jpg|jpeg|png|gif|webp|avif)$/i.test(file.name)) {\n        totalImages++;\n        const size = getFileSize(path.join(dir, file.name).replace(path.join(__dirname, '..'), ''));\n        \n        if (file.name.includes('.webp') || file.name.includes('.avif')) {\n          optimizedImages++;\n          console.log(`✅ ${dirName}/${file.name}: ${formatBytes(size)} (modern format)`);\n        } else if (size > 500 * 1024) {\n          console.log(`⚠️ ${dirName}/${file.name}: ${formatBytes(size)} (consider optimization)`);\n        } else {\n          console.log(`✅ ${dirName}/${file.name}: ${formatBytes(size)}`);\n        }\n      }\n    });\n  }\n\n  scanDirectory(staticDir, 'static');\n  scanDirectory(contentDir, 'content');\n\n  console.log(`\\nImage Summary:`);\n  console.log(`Total images: ${totalImages}`);\n  console.log(`Modern formats (WebP/AVIF): ${optimizedImages} (${Math.round((optimizedImages/totalImages) * 100)}%)`);\n  \n  if (optimizedImages / totalImages < 0.5) {\n    console.log('⚠️ Consider converting more images to modern formats (WebP/AVIF)');\n  } else {\n    console.log('✅ Good use of modern image formats');\n  }\n}\n\nfunction checkPerformanceFeatures() {\n  console.log('\\n⚡ Checking Performance Features...\\n');\n\n  const features = [\n    {\n      name: 'Web Vitals monitoring',\n      file: 'src/components/PerformanceMonitor/PerformanceMonitor.tsx',\n      implemented: checkFileExists('src/components/PerformanceMonitor/PerformanceMonitor.tsx')\n    },\n    {\n      name: 'Service Worker (gatsby-plugin-offline)',\n      file: 'gatsby-config.ts',\n      implemented: checkFileExists('gatsby-config.ts') && \n                   fs.readFileSync(path.join(__dirname, '..', 'gatsby-config.ts'), 'utf8')\n                     .includes('gatsby-plugin-offline')\n    },\n    {\n      name: 'Image optimization (gatsby-plugin-image)',\n      file: 'gatsby-config.ts',\n      implemented: checkFileExists('gatsby-config.ts') && \n                   fs.readFileSync(path.join(__dirname, '..', 'gatsby-config.ts'), 'utf8')\n                     .includes('gatsby-plugin-image')\n    },\n    {\n      name: 'Bundle analyzer',\n      file: 'gatsby-config.ts',\n      implemented: checkFileExists('gatsby-config.ts') && \n                   fs.readFileSync(path.join(__dirname, '..', 'gatsby-config.ts'), 'utf8')\n                     .includes('gatsby-plugin-webpack-bundle-analyser-v2')\n    },\n    {\n      name: 'Critical CSS inlining',\n      file: 'src/layout/index.tsx',\n      implemented: checkFileExists('src/layout/index.tsx') && \n                   fs.readFileSync(path.join(__dirname, '..', 'src/layout/index.tsx'), 'utf8')\n                     .includes('criticalCSS')\n    },\n    {\n      name: 'Font preloading',\n      file: 'src/layout/index.tsx',\n      implemented: checkFileExists('src/layout/index.tsx') && \n                   fs.readFileSync(path.join(__dirname, '..', 'src/layout/index.tsx'), 'utf8')\n                     .includes('rel=\"preload\"')\n    }\n  ];\n\n  features.forEach(feature => {\n    const status = feature.implemented ? '✅' : '❌';\n    console.log(`  ${status} ${feature.name}`);\n  });\n\n  const implementedCount = features.filter(f => f.implemented).length;\n  console.log(`\\nImplemented: ${implementedCount}/${features.length} features`);\n  \n  if (implementedCount === features.length) {\n    console.log('🎉 All performance features implemented!');\n  } else {\n    console.log('⚠️ Some performance features are missing');\n  }\n}\n\nfunction generateRecommendations() {\n  console.log('\\n💡 Performance Recommendations:\\n');\n\n  const recommendations = [\n    '1. Use `npm run build:analyze` to analyze bundle sizes',\n    '2. Monitor Core Web Vitals in production using the PerformanceMonitor component',\n    '3. Regularly audit images and convert to WebP/AVIF formats',\n    '4. Test performance on slow networks and devices',\n    '5. Use Lighthouse CI for automated performance testing',\n    '6. Consider implementing resource hints for third-party domains',\n    '7. Monitor bundle size growth over time',\n    '8. Use proper image sizing with gatsby-plugin-image',\n    '9. Implement proper caching headers in your hosting provider',\n    '10. Consider code splitting for large components'\n  ];\n\n  recommendations.forEach(rec => console.log(rec));\n\n  console.log('\\n📊 Performance Budget Summary:');\n  console.log(`• LCP target: <${PERFORMANCE_BUDGETS.LCP}ms`);\n  console.log(`• FID target: <${PERFORMANCE_BUDGETS.FID}ms`);\n  console.log(`• CLS target: <${PERFORMANCE_BUDGETS.CLS}`);\n  console.log(`• Initial JS budget: ${formatBytes(PERFORMANCE_BUDGETS.INITIAL_JS)}`);\n  console.log(`• Total JS budget: ${formatBytes(PERFORMANCE_BUDGETS.TOTAL_JS)}`);\n  console.log(`• CSS budget: ${formatBytes(PERFORMANCE_BUDGETS.CSS)}`);\n}\n\nfunction main() {\n  console.log('🚀 Performance Audit Report\\n');\n  console.log('='.repeat(50));\n  \n  checkPerformanceFeatures();\n  checkBundleSizes();\n  checkImageOptimization();\n  generateRecommendations();\n  \n  console.log('\\n' + '='.repeat(50));\n  console.log('✨ Audit complete! Review the recommendations above.\\n');\n}\n\nif (require.main === module) {\n  main();\n}\n\nmodule.exports = {\n  PERFORMANCE_BUDGETS,\n  checkBundleSizes,\n  checkImageOptimization,\n  checkPerformanceFeatures,\n  generateRecommendations\n};","usedDeprecatedRules":[{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/About/About.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/AdvancedFeaturesDemo/AdvancedFeaturesDemo.tsx","messages":[{"ruleId":"import/no-named-as-default","severity":2,"message":"Using exported name 'ReadingExperience' as identifier for default import.","line":15,"column":8,"nodeType":"ImportDefaultSpecifier","endLine":15,"endColumn":25},{"ruleId":"import/no-named-as-default","severity":2,"message":"Using exported name 'CategoryTagFilter' as identifier for default import.","line":22,"column":8,"nodeType":"ImportDefaultSpecifier","endLine":22,"endColumn":25},{"ruleId":"import/no-named-as-default","severity":2,"message":"Using exported name 'TimelineView' as identifier for default import.","line":23,"column":8,"nodeType":"ImportDefaultSpecifier","endLine":23,"endColumn":20},{"ruleId":"import/no-named-as-default","severity":2,"message":"Using exported name 'RelatedContentSidebar' as identifier for default import.","line":24,"column":8,"nodeType":"ImportDefaultSpecifier","endLine":24,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'RelatedContentSidebar' is defined but never used.","line":24,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":24,"endColumn":29},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/card\"","line":25,"column":58,"nodeType":"Literal","endLine":25,"endColumn":80},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/badge\"","line":26,"column":23,"nodeType":"Literal","endLine":26,"endColumn":46},{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":27,"column":1,"nodeType":"ImportDeclaration","endLine":27,"endColumn":77},{"ruleId":"import/order","severity":2,"message":"`lucide-react` import should occur before import of `../CodeBlock/CodeBlock`","line":27,"column":1,"nodeType":"ImportDeclaration","endLine":27,"endColumn":77,"fix":{"range":[27,1006],"text":"import { Code, Lightbulb, Eye, Share, Zap, Navigation } from \"lucide-react\";\nimport { CodeBlock, InlineCodeBlock, CollapsibleCodeBlock } from \"../CodeBlock/CodeBlock\";\nimport { \n  Callout, \n  InfoCallout, \n  WarningCallout, \n  TipCallout, \n  SuccessCallout \n} from \"../Callout/Callout\";\nimport { \n  ExpandableSection, \n  FAQSection, \n  Accordion \n} from \"../ExpandableSection/ExpandableSection\";\nimport ReadingExperience from \"../ReadingExperience/ReadingExperience\";\nimport { \n  SocialShare, \n  ReactionSystem, \n  NewsletterSignup \n} from \"../SocialEngagement/SocialEngagement\";\nimport { PWAFeatures } from \"../PWAFeatures/PWAFeatures\";\nimport CategoryTagFilter from \"../CategoryTagFilter/CategoryTagFilter\";\nimport TimelineView from \"../TimelineView/TimelineView\";\nimport RelatedContentSidebar from \"../RelatedContentSidebar/RelatedContentSidebar\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\n"}}],"suppressedMessages":[],"errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { CodeBlock, InlineCodeBlock, CollapsibleCodeBlock } from \"../CodeBlock/CodeBlock\";\nimport { \n  Callout, \n  InfoCallout, \n  WarningCallout, \n  TipCallout, \n  SuccessCallout \n} from \"../Callout/Callout\";\nimport { \n  ExpandableSection, \n  FAQSection, \n  Accordion \n} from \"../ExpandableSection/ExpandableSection\";\nimport ReadingExperience from \"../ReadingExperience/ReadingExperience\";\nimport { \n  SocialShare, \n  ReactionSystem, \n  NewsletterSignup \n} from \"../SocialEngagement/SocialEngagement\";\nimport { PWAFeatures } from \"../PWAFeatures/PWAFeatures\";\nimport CategoryTagFilter from \"../CategoryTagFilter/CategoryTagFilter\";\nimport TimelineView from \"../TimelineView/TimelineView\";\nimport RelatedContentSidebar from \"../RelatedContentSidebar/RelatedContentSidebar\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Code, Lightbulb, Eye, Share, Zap, Navigation } from \"lucide-react\";\n\nexport function AdvancedFeaturesDemo(): React.ReactElement {\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 space-y-12\">\n      <div className=\"text-center space-y-4\">\n        <h1 className=\"text-4xl font-bold\">Advanced Blog Features</h1>\n        <p className=\"text-xl text-muted-foreground\">\n          A comprehensive demonstration of modern blog components and functionality\n        </p>\n        <div className=\"flex justify-center gap-2 flex-wrap\">\n          <Badge variant=\"secondary\">TypeScript</Badge>\n          <Badge variant=\"secondary\">React</Badge>\n          <Badge variant=\"secondary\">Gatsby</Badge>\n          <Badge variant=\"secondary\">shadcn/ui</Badge>\n        </div>\n      </div>\n\n      {/* Code Block Examples */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Code className=\"h-5 w-5\" />\n            Enhanced Code Blocks\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">Standard Code Block with Copy</h3>\n            <CodeBlock language=\"tsx\" title=\"React Component Example\">\n{`import React, { useState } from 'react';\n\nexport function Counter(): React.ReactElement {\n  const [count, setCount] = useState(0);\n\n  const increment = () => setCount(prev => prev + 1);\n  const decrement = () => setCount(prev => prev - 1);\n\n  return (\n    <div className=\"flex items-center gap-4\">\n      <button onClick={decrement}>-</button>\n      <span>{count}</span>\n      <button onClick={increment}>+</button>\n    </div>\n  );\n}`}\n            </CodeBlock>\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">Collapsible Code Block</h3>\n            <CollapsibleCodeBlock \n              language=\"json\" \n              title=\"Package.json Configuration\"\n            >\n{`{\n  \"name\": \"my-blog\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"@radix-ui/react-dialog\": \"^1.1.15\",\n    \"@radix-ui/react-navigation-menu\": \"^1.2.14\",\n    \"@radix-ui/react-progress\": \"^1.1.7\",\n    \"@radix-ui/react-separator\": \"^1.1.7\",\n    \"@radix-ui/react-tooltip\": \"^1.2.8\",\n    \"@tailwindcss/typography\": \"^0.5.16\",\n    \"gatsby\": \"^5.14.6\",\n    \"react\": \"^18.3.1\",\n    \"typescript\": \"^5.5.3\"\n  },\n  \"scripts\": {\n    \"develop\": \"gatsby develop\",\n    \"build\": \"gatsby build\",\n    \"serve\": \"gatsby serve\"\n  }\n}`}\n            </CollapsibleCodeBlock>\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">Inline Code</h3>\n            <p>\n              You can use <InlineCodeBlock>useState</InlineCodeBlock> hook to manage state\n              or install packages with <InlineCodeBlock>npm install package-name</InlineCodeBlock>.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Callout Examples */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Lightbulb className=\"h-5 w-5\" />\n            Callout Components\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <InfoCallout title=\"Information\">\n            This is an informational callout that provides helpful context or explanations \n            for your readers.\n          </InfoCallout>\n\n          <WarningCallout title=\"Important Warning\">\n            This callout highlights important warnings that users should be aware of before \n            proceeding with certain actions.\n          </WarningCallout>\n\n          <TipCallout>\n            Pro tip: You can customize the appearance and behavior of these callouts to match \n            your design system perfectly.\n          </TipCallout>\n\n          <SuccessCallout title=\"Success!\">\n            This callout celebrates successful operations or provides positive feedback \n            to your users.\n          </SuccessCallout>\n\n          <Callout type=\"code\" title=\"Code Snippet\">\n            <p>Use this type when explaining code concepts:</p>\n            <InlineCodeBlock>const result = await fetchData();</InlineCodeBlock>\n          </Callout>\n        </CardContent>\n      </Card>\n\n      {/* Expandable Sections */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Eye className=\"h-5 w-5\" />\n            Expandable Content\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">Standard Expandable Section</h3>\n            <ExpandableSection title=\"Advanced Configuration Options\">\n              <p>\n                Here you can include detailed configuration instructions, code examples,\n                or any other content that might be too lengthy for the main flow but\n                valuable for interested readers.\n              </p>\n              <CodeBlock language=\"yaml\" title=\"config.yml\">\n{`# Advanced configuration\nadvanced:\n  caching: true\n  compression: gzip\n  timeout: 30s\n  retries: 3`}\n              </CodeBlock>\n            </ExpandableSection>\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">FAQ Section</h3>\n            <Accordion>\n              <FAQSection\n                question=\"How do I install these components?\"\n                answer=\"You can install the components by copying the source code into your project \n                        and ensuring you have the required dependencies installed.\"\n              />\n              <FAQSection\n                question=\"Are these components accessible?\"\n                answer=\"Yes! All components follow WCAG guidelines and include proper ARIA labels,\n                        keyboard navigation, and screen reader support.\"\n              />\n              <FAQSection\n                question=\"Can I customize the styling?\"\n                answer=\"Absolutely! All components use Tailwind CSS classes and can be easily\n                        customized by modifying the className props or the underlying CSS.\"\n              />\n            </Accordion>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Reading Experience */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Eye className=\"h-5 w-5\" />\n            Reading Experience\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Enhanced Reading Tools</h3>\n              <p className=\"text-muted-foreground\">\n                Reading mode, text-to-speech, print options, and font customization\n              </p>\n            </div>\n            <ReadingExperience articleId=\"demo-content\" />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Social Engagement */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Share className=\"h-5 w-5\" />\n            Social Engagement\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">Social Sharing</h3>\n            <SocialShare\n              title=\"Advanced Blog Features Demo\"\n              description=\"Check out these amazing blog features!\"\n              author=\"yourusername\"\n            />\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">Reaction System</h3>\n            <ReactionSystem \n              postId=\"demo-post\" \n              initialCounts={{ like: 12, love: 8, happy: 3, wow: 1 }}\n            />\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">Newsletter Signup</h3>\n            <NewsletterSignup />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Navigation Features */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Navigation className=\"h-5 w-5\" />\n            Advanced Navigation\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">Category & Tag Filter</h3>\n            <CategoryTagFilter />\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">Timeline View</h3>\n            <div className=\"max-h-96 overflow-y-auto border rounded-lg p-4\">\n              <TimelineView />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* PWA Features */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Zap className=\"h-5 w-5\" />\n            Progressive Web App Features\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-muted-foreground mb-4\">\n            PWA features include install prompts, offline indicators, notification management,\n            and service worker updates. These features enhance the user experience by providing\n            app-like functionality.\n          </p>\n          <InfoCallout>\n            PWA features are automatically active in the background. Try going offline or\n            visiting on a mobile device to see the install prompt!\n          </InfoCallout>\n        </CardContent>\n      </Card>\n\n      <PWAFeatures />\n    </div>\n  );\n}\n\nexport default AdvancedFeaturesDemo;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/AppSidebar/AppSidebar.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":3,"column":1,"nodeType":"ImportDeclaration","endLine":13,"endColumn":22},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":116,"column":35,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":116,"endColumn":45}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport {\n  Github,\n  MessageCircle,\n  Rss,\n  StickyNote,\n  Briefcase,\n  ChefHat,\n  Dumbbell,\n  Plane,\n  Music,\n} from \"lucide-react\"\n\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarRail,\n  SidebarSeparator,\n} from \"../ui/sidebar\"\nimport SearchTrigger from \"../SearchTrigger/SearchTrigger\"\nimport SearchDialog from \"../SearchDialog/SearchDialog\"\n\n// Sample data structure\nconst data = {\n  about: {\n    title: \"About Me\",\n    description: \"I'm Sai, software engineer and open-source creator. Software is my hobby 🎮\",\n    emoji: \"🎮\"\n  },\n  navMain: [\n    {\n      title: \"Stay Connected\",\n      items: [\n        {\n          title: \"GitHub\",\n          url: \"https://github.com/funsaized\",\n          icon: Github,\n          isExternal: true,\n        },\n        {\n          title: \"Threads\", \n          url: \"https://www.threads.com/@funsaized\",\n          icon: MessageCircle,\n          isExternal: true,\n        },\n        {\n          title: \"RSS Feed\",\n          url: \"/rss.xml\",\n          icon: Rss,\n          isExternal: false,\n        },\n      ],\n    },\n    {\n      title: \"Notes (coming soon...)\",\n      items: [\n        {\n          title: \"Notes\",\n          url: \"/notes\",\n          icon: StickyNote,\n          isExternal: false,\n        },\n      ],\n    },\n    {\n      title: \"Lifestyle (coming soon...)\",\n      items: [\n        {\n          title: \"Productivity & Workflows\",\n          url: \"/lifestyle/productivity\",\n          icon: Briefcase,\n          isExternal: false,\n        },\n        {\n          title: \"Cooking Experiments\",\n          url: \"/lifestyle/cooking\", \n          icon: ChefHat,\n          isExternal: false,\n        },\n        {\n          title: \"Fitness Journey\",\n          url: \"/lifestyle/fitness\",\n          icon: Dumbbell,\n          isExternal: false,\n        },\n        {\n          title: \"Travel Adventures\",\n          url: \"/lifestyle/travel\",\n          icon: Plane,\n          isExternal: false,\n        },\n        {\n          title: \"Music & Playlists\",\n          url: \"/lifestyle/music\",\n          icon: Music,\n          isExternal: false,\n        },\n      ],\n    },\n  ],\n}\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  const [searchOpen, setSearchOpen] = React.useState(false)\n\n  return (\n    <>\n      <Sidebar collapsible=\"icon\" {...props}>\n        <SidebarHeader>\n          <SidebarGroup>\n            <SidebarGroupContent>\n              <SearchTrigger\n                onClick={() => setSearchOpen(true)}\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n              />\n            </SidebarGroupContent>\n          </SidebarGroup>\n        </SidebarHeader>\n        \n        <SidebarContent>\n          {/* About Me Section */}\n          <SidebarGroup>\n            <SidebarGroupLabel>{data.about.title}</SidebarGroupLabel>\n            <SidebarGroupContent>\n              <div className=\"px-2 py-1\">\n                <p className=\"text-xs text-muted-foreground leading-relaxed group-data-[collapsible=icon]:hidden\">\n                  {data.about.description}\n                </p>\n                <div className=\"hidden group-data-[collapsible=icon]:flex items-center justify-center text-lg\">\n                  {data.about.emoji}\n                </div>\n              </div>\n            </SidebarGroupContent>\n          </SidebarGroup>\n\n          <SidebarSeparator />\n\n          {/* Navigation Sections */}\n          {data.navMain.map((section) => (\n            <SidebarGroup key={section.title}>\n              <SidebarGroupLabel>{section.title}</SidebarGroupLabel>\n              <SidebarGroupContent>\n                <SidebarMenu>\n                  {section.items.map((item) => (\n                    <SidebarMenuItem key={item.title}>\n                      <SidebarMenuButton asChild tooltip={item.title}>\n                        {item.isExternal ? (\n                          <a\n                            href={item.url}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <item.icon />\n                            <span>{item.title}</span>\n                          </a>\n                        ) : (\n                          <Link to={item.url}>\n                            <item.icon />\n                            <span>{item.title}</span>\n                          </Link>\n                        )}\n                      </SidebarMenuButton>\n                    </SidebarMenuItem>\n                  ))}\n                </SidebarMenu>\n              </SidebarGroupContent>\n            </SidebarGroup>\n          ))}\n        </SidebarContent>\n        \n        <SidebarRail />\n      </Sidebar>\n\n      {/* Search Dialog */}\n      <SearchDialog open={searchOpen} onOpenChange={setSearchOpen} />\n    </>\n  )\n}\n\nexport default AppSidebar","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/BackToTop/BackToTop.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/Breadcrumb/Breadcrumb.tsx","messages":[{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/breadcrumb\"","line":10,"column":8,"nodeType":"Literal","endLine":10,"endColumn":36},{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":11,"column":1,"nodeType":"ImportDeclaration","endLine":11,"endColumn":37},{"ruleId":"import/order","severity":2,"message":"`lucide-react` import should occur before import of `@/components/ui/breadcrumb`","line":11,"column":1,"nodeType":"ImportDeclaration","endLine":11,"endColumn":37,"fix":{"range":[58,250],"text":"import { Home } from \"lucide-react\";\nimport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbSeparator,\n  BreadcrumbPage,\n} from \"@/components/ui/breadcrumb\";\n"}},{"ruleId":"@typescript-eslint/no-redeclare","severity":2,"message":"'BreadcrumbItem' is already defined.","line":13,"column":11,"nodeType":"Identifier","messageId":"redeclared","endLine":13,"endColumn":25},{"ruleId":"react/no-array-index-key","severity":2,"message":"Do not use Array index in keys","line":43,"column":34,"nodeType":"Identifier","messageId":"noArrayIndex","endLine":43,"endColumn":39},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":45,"column":18,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":53,"endColumn":18}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Link } from \"gatsby\";\nimport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbSeparator,\n  BreadcrumbPage,\n} from \"@/components/ui/breadcrumb\";\nimport { Home } from \"lucide-react\";\n\ninterface BreadcrumbItem {\n  label: string;\n  href?: string;\n}\n\ninterface DynamicBreadcrumbProps {\n  items: BreadcrumbItem[];\n  className?: string;\n}\n\nfunction DynamicBreadcrumb({ items, className }: DynamicBreadcrumbProps): React.ReactElement {\n  return (\n    <Breadcrumb className={className}>\n      <BreadcrumbList>\n        {/* Home link */}\n        <BreadcrumbItem>\n          <BreadcrumbLink asChild>\n            <Link to=\"/\" className=\"flex items-center gap-1\">\n              <Home className=\"h-4 w-4\" />\n              <span className=\"sr-only sm:not-sr-only\">Home</span>\n            </Link>\n          </BreadcrumbLink>\n        </BreadcrumbItem>\n        \n        {items.length > 0 && <BreadcrumbSeparator />}\n        \n        {items.map((item, index) => {\n          const isLast = index === items.length - 1;\n          \n          return (\n            <React.Fragment key={index}>\n              <BreadcrumbItem>\n                {isLast ? (\n                  <BreadcrumbPage>{item.label}</BreadcrumbPage>\n                ) : item.href ? (\n                  <BreadcrumbLink asChild>\n                    <Link to={item.href}>{item.label}</Link>\n                  </BreadcrumbLink>\n                ) : (\n                  <span className=\"text-muted-foreground\">{item.label}</span>\n                )}\n              </BreadcrumbItem>\n              \n              {!isLast && <BreadcrumbSeparator />}\n            </React.Fragment>\n          );\n        })}\n      </BreadcrumbList>\n    </Breadcrumb>\n  );\n}\n\nexport default DynamicBreadcrumb;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/BreadcrumbSEO/BreadcrumbSEO.tsx","messages":[{"ruleId":"react/no-unused-prop-types","severity":2,"message":"'className' PropType is defined but prop is never used","line":11,"column":3,"nodeType":"Identifier","messageId":"unusedPropType","endLine":11,"endColumn":12}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\ninterface BreadcrumbSEOItem {\n  name: string;\n  item: string;\n}\n\ninterface BreadcrumbSEOProps {\n  items: BreadcrumbSEOItem[];\n  className?: string;\n}\n\nfunction BreadcrumbSEO({ items }: BreadcrumbSEOProps): React.ReactElement {\n  const breadcrumbList = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": items.map((item, index) => ({\n      \"@type\": \"ListItem\",\n      \"position\": index + 1,\n      \"name\": item.name,\n      \"item\": item.item,\n    })),\n  };\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">\n        {JSON.stringify(breadcrumbList)}\n      </script>\n    </Helmet>\n  );\n}\n\nexport default BreadcrumbSEO;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/Callout/Callout.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":17,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Zap' is defined but never used.","line":9,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":6},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Heart' is defined but never used.","line":11,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":8},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/alert\"","line":18,"column":53,"nodeType":"Literal","endLine":18,"endColumn":76},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":19,"column":20,"nodeType":"Literal","endLine":19,"endColumn":33},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'dismissible' is assigned a value but never used.","line":176,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":176,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'onDismiss' is defined but never used.","line":177,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":177,"endColumn":12},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":204,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":206,"endColumn":2,"fix":{"range":[7043,7143],"text":"function InfoCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"info\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":205,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":205,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":208,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":210,"endColumn":2,"fix":{"range":[7152,7258],"text":"function WarningCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"warning\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":209,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":209,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":212,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":214,"endColumn":2,"fix":{"range":[7267,7369],"text":"function ErrorCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"error\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":213,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":213,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":216,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":218,"endColumn":2,"fix":{"range":[7378,7484],"text":"function SuccessCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"success\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":217,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":217,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":220,"column":27,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":222,"endColumn":2,"fix":{"range":[7493,7591],"text":"function TipCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"tip\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":221,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":221,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":224,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":226,"endColumn":2,"fix":{"range":[7600,7700],"text":"function NoteCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"note\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":225,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":225,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":228,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":230,"endColumn":2,"fix":{"range":[7709,7819],"text":"function ImportantCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"important\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":229,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":229,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":232,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":234,"endColumn":2,"fix":{"range":[7828,7934],"text":"function CautionCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"caution\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":233,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":233,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":236,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":238,"endColumn":2,"fix":{"range":[7943,8049],"text":"function ExampleCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"example\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":237,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":237,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":240,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":242,"endColumn":2,"fix":{"range":[8058,8160],"text":"function QuoteCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"quote\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":241,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":241,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":244,"column":34,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":246,"endColumn":2,"fix":{"range":[8169,8281],"text":"function DefinitionCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"definition\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":245,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":245,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":248,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":250,"endColumn":2,"fix":{"range":[8290,8390],"text":"function CodeCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"code\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":249,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":249,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":252,"column":30,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":254,"endColumn":2,"fix":{"range":[8399,8503],"text":"function ConfigCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"config\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":253,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":253,"endColumn":22},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":256,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":258,"endColumn":2,"fix":{"range":[8512,8622],"text":"function CommunityCallout(props: Omit<CalloutProps, \"type\">) {\n  return <Callout {...props} type=\"community\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":257,"column":12,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":257,"endColumn":22}],"suppressedMessages":[],"errorCount":35,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":14,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { \n  Info,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Lightbulb,\n  AlertCircle,\n  Zap,\n  Star,\n  Heart,\n  MessageSquare,\n  BookOpen,\n  Code,\n  Settings,\n  Users\n} from \"lucide-react\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { cn } from \"@/lib/utils\";\n\ntype CalloutType = \n  | \"info\" \n  | \"warning\" \n  | \"error\" \n  | \"success\" \n  | \"tip\" \n  | \"note\"\n  | \"important\"\n  | \"caution\"\n  | \"example\"\n  | \"quote\"\n  | \"definition\"\n  | \"code\"\n  | \"config\"\n  | \"community\";\n\ninterface CalloutProps {\n  type?: CalloutType;\n  title?: string;\n  children: React.ReactNode;\n  icon?: React.ReactNode;\n  dismissible?: boolean;\n  onDismiss?: () => void;\n  className?: string;\n}\n\nconst calloutConfig: Record<CalloutType, {\n  icon: React.ReactNode;\n  className: string;\n  bgColor: string;\n  borderColor: string;\n  titleColor: string;\n}> = {\n  info: {\n    icon: <Info className=\"h-4 w-4\" />,\n    className: \"border-blue-200 bg-blue-50 text-blue-900 dark:border-blue-800/30 dark:bg-blue-950/30 dark:text-blue-100\",\n    bgColor: \"bg-blue-50 dark:bg-blue-950/30\",\n    borderColor: \"border-blue-200 dark:border-blue-800/30\",\n    titleColor: \"text-blue-900 dark:text-blue-100\",\n  },\n  warning: {\n    icon: <AlertTriangle className=\"h-4 w-4\" />,\n    className: \"border-yellow-200 bg-yellow-50 text-yellow-900 dark:border-yellow-800/30 dark:bg-yellow-950/30 dark:text-yellow-100\",\n    bgColor: \"bg-yellow-50 dark:bg-yellow-950/30\",\n    borderColor: \"border-yellow-200 dark:border-yellow-800/30\",\n    titleColor: \"text-yellow-900 dark:text-yellow-100\",\n  },\n  error: {\n    icon: <XCircle className=\"h-4 w-4\" />,\n    className: \"border-red-200 bg-red-50 text-red-900 dark:border-red-800/30 dark:bg-red-950/30 dark:text-red-100\",\n    bgColor: \"bg-red-50 dark:bg-red-950/30\",\n    borderColor: \"border-red-200 dark:border-red-800/30\",\n    titleColor: \"text-red-900 dark:text-red-100\",\n  },\n  success: {\n    icon: <CheckCircle className=\"h-4 w-4\" />,\n    className: \"border-green-200 bg-green-50 text-green-900 dark:border-green-800/30 dark:bg-green-950/30 dark:text-green-100\",\n    bgColor: \"bg-green-50 dark:bg-green-950/30\",\n    borderColor: \"border-green-200 dark:border-green-800/30\",\n    titleColor: \"text-green-900 dark:text-green-100\",\n  },\n  tip: {\n    icon: <Lightbulb className=\"h-4 w-4\" />,\n    className: \"border-purple-200 bg-purple-50 text-purple-900 dark:border-purple-800/30 dark:bg-purple-950/30 dark:text-purple-100\",\n    bgColor: \"bg-purple-50 dark:bg-purple-950/30\",\n    borderColor: \"border-purple-200 dark:border-purple-800/30\",\n    titleColor: \"text-purple-900 dark:text-purple-100\",\n  },\n  note: {\n    icon: <BookOpen className=\"h-4 w-4\" />,\n    className: \"border-slate-200 bg-slate-50 text-slate-900 dark:border-slate-800/30 dark:bg-slate-950/30 dark:text-slate-100\",\n    bgColor: \"bg-slate-50 dark:bg-slate-950/30\",\n    borderColor: \"border-slate-200 dark:border-slate-800/30\",\n    titleColor: \"text-slate-900 dark:text-slate-100\",\n  },\n  important: {\n    icon: <Star className=\"h-4 w-4\" />,\n    className: \"border-orange-200 bg-orange-50 text-orange-900 dark:border-orange-800/30 dark:bg-orange-950/30 dark:text-orange-100\",\n    bgColor: \"bg-orange-50 dark:bg-orange-950/30\",\n    borderColor: \"border-orange-200 dark:border-orange-800/30\",\n    titleColor: \"text-orange-900 dark:text-orange-100\",\n  },\n  caution: {\n    icon: <AlertCircle className=\"h-4 w-4\" />,\n    className: \"border-red-200 bg-red-50 text-red-900 dark:border-red-800/30 dark:bg-red-950/30 dark:text-red-100\",\n    bgColor: \"bg-red-50 dark:bg-red-950/30\",\n    borderColor: \"border-red-200 dark:border-red-800/30\",\n    titleColor: \"text-red-900 dark:text-red-100\",\n  },\n  example: {\n    icon: <Code className=\"h-4 w-4\" />,\n    className: \"border-emerald-200 bg-emerald-50 text-emerald-900 dark:border-emerald-800/30 dark:bg-emerald-950/30 dark:text-emerald-100\",\n    bgColor: \"bg-emerald-50 dark:bg-emerald-950/30\",\n    borderColor: \"border-emerald-200 dark:border-emerald-800/30\",\n    titleColor: \"text-emerald-900 dark:text-emerald-100\",\n  },\n  quote: {\n    icon: <MessageSquare className=\"h-4 w-4\" />,\n    className: \"border-indigo-200 bg-indigo-50 text-indigo-900 dark:border-indigo-800/30 dark:bg-indigo-950/30 dark:text-indigo-100\",\n    bgColor: \"bg-indigo-50 dark:bg-indigo-950/30\",\n    borderColor: \"border-indigo-200 dark:border-indigo-800/30\",\n    titleColor: \"text-indigo-900 dark:text-indigo-100\",\n  },\n  definition: {\n    icon: <BookOpen className=\"h-4 w-4\" />,\n    className: \"border-teal-200 bg-teal-50 text-teal-900 dark:border-teal-800/30 dark:bg-teal-950/30 dark:text-teal-100\",\n    bgColor: \"bg-teal-50 dark:bg-teal-950/30\",\n    borderColor: \"border-teal-200 dark:border-teal-800/30\",\n    titleColor: \"text-teal-900 dark:text-teal-100\",\n  },\n  code: {\n    icon: <Code className=\"h-4 w-4\" />,\n    className: \"border-violet-200 bg-violet-50 text-violet-900 dark:border-violet-800/30 dark:bg-violet-950/30 dark:text-violet-100\",\n    bgColor: \"bg-violet-50 dark:bg-violet-950/30\",\n    borderColor: \"border-violet-200 dark:border-violet-800/30\",\n    titleColor: \"text-violet-900 dark:text-violet-100\",\n  },\n  config: {\n    icon: <Settings className=\"h-4 w-4\" />,\n    className: \"border-cyan-200 bg-cyan-50 text-cyan-900 dark:border-cyan-800/30 dark:bg-cyan-950/30 dark:text-cyan-100\",\n    bgColor: \"bg-cyan-50 dark:bg-cyan-950/30\",\n    borderColor: \"border-cyan-200 dark:border-cyan-800/30\",\n    titleColor: \"text-cyan-900 dark:text-cyan-100\",\n  },\n  community: {\n    icon: <Users className=\"h-4 w-4\" />,\n    className: \"border-pink-200 bg-pink-50 text-pink-900 dark:border-pink-800/30 dark:bg-pink-950/30 dark:text-pink-100\",\n    bgColor: \"bg-pink-50 dark:bg-pink-950/30\",\n    borderColor: \"border-pink-200 dark:border-pink-800/30\",\n    titleColor: \"text-pink-900 dark:text-pink-100\",\n  },\n};\n\nconst defaultTitles: Record<CalloutType, string> = {\n  info: \"Info\",\n  warning: \"Warning\",\n  error: \"Error\",\n  success: \"Success\",\n  tip: \"Tip\",\n  note: \"Note\",\n  important: \"Important\",\n  caution: \"Caution\",\n  example: \"Example\",\n  quote: \"Quote\",\n  definition: \"Definition\",\n  code: \"Code\",\n  config: \"Configuration\",\n  community: \"Community\",\n};\n\nexport function Callout({\n  type = \"info\",\n  title,\n  children,\n  icon,\n  dismissible = false,\n  onDismiss,\n  className,\n}: CalloutProps): React.ReactElement {\n  const config = calloutConfig[type];\n  const displayTitle = title || defaultTitles[type];\n  const displayIcon = icon || config.icon;\n\n  return (\n    <Alert \n      className={cn(\n        \"my-6 shadow-sm transition-all duration-200 hover:shadow-md\",\n        config.className,\n        className\n      )}\n    >\n      {displayIcon}\n      <AlertTitle className=\"font-semibold mb-2\">\n        {displayTitle}\n      </AlertTitle>\n      <AlertDescription className=\"text-sm leading-relaxed [&>*:last-child]:mb-0 [&>p]:mb-3 [&>ul]:mb-3 [&>ol]:mb-3 [&>blockquote]:mb-3\">\n        {children}\n      </AlertDescription>\n    </Alert>\n  );\n}\n\n// Convenience components for specific callout types\nexport const InfoCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"info\" />\n);\n\nexport const WarningCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"warning\" />\n);\n\nexport const ErrorCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"error\" />\n);\n\nexport const SuccessCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"success\" />\n);\n\nexport const TipCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"tip\" />\n);\n\nexport const NoteCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"note\" />\n);\n\nexport const ImportantCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"important\" />\n);\n\nexport const CautionCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"caution\" />\n);\n\nexport const ExampleCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"example\" />\n);\n\nexport const QuoteCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"quote\" />\n);\n\nexport const DefinitionCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"definition\" />\n);\n\nexport const CodeCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"code\" />\n);\n\nexport const ConfigCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"config\" />\n);\n\nexport const CommunityCallout = (props: Omit<CalloutProps, \"type\">) => (\n  <Callout {...props} type=\"community\" />\n);\n\nexport default Callout;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/CategoryTagFilter/CategoryTagFilter.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":8,"endColumn":23},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/button\"","line":9,"column":24,"nodeType":"Literal","endLine":9,"endColumn":48},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/badge\"","line":10,"column":23,"nodeType":"Literal","endLine":10,"endColumn":46},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/sheet\"","line":17,"column":8,"nodeType":"Literal","endLine":17,"endColumn":31},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":18,"column":20,"nodeType":"Literal","endLine":18,"endColumn":33},{"ruleId":"import/order","severity":2,"message":"`gatsby` import should occur before import of `@/components/ui/button`","line":19,"column":1,"nodeType":"ImportDeclaration","endLine":19,"endColumn":50,"fix":{"range":[119,409],"text":"import { useStaticQuery, graphql } from \"gatsby\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger\n} from \"@/components/ui/sheet\";\nimport { cn } from \"@/lib/utils\";\n"}},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":144,"column":15,"nodeType":"JSXOpeningElement","endLine":144,"endColumn":65},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":159,"column":15,"nodeType":"JSXOpeningElement","endLine":159,"endColumn":89},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":189,"column":15,"nodeType":"JSXOpeningElement","endLine":189,"endColumn":89}],"suppressedMessages":[],"errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\nimport { \n  Filter,\n  Search,\n  FolderOpen,\n  Tag,\n  X\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger\n} from \"@/components/ui/sheet\";\nimport { cn } from \"@/lib/utils\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ninterface FilterState {\n  categories: string[];\n  tags: string[];\n  dateRange?: string;\n  searchTerm: string;\n}\n\ninterface CategoryTagFilterProps {\n  className?: string;\n  onFilterChange?: (filters: FilterState) => void;\n}\n\nexport function CategoryTagFilter({ \n  className,\n  onFilterChange\n}: CategoryTagFilterProps): React.ReactElement {\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n  const [filters, setFilters] = useState<FilterState>({\n    categories: [],\n    tags: [],\n    searchTerm: \"\",\n  });\n\n  const data = useStaticQuery(graphql`\n    query CategoryTagFilterQuery {\n      posts: allMarkdownRemark(\n        sort: { fields: { date: DESC } }\n        filter: { frontmatter: { type: { eq: \"post\" } } }\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n              date\n            }\n            frontmatter {\n              title\n              category\n              tags\n            }\n            excerpt(pruneLength: 150)\n            timeToRead\n          }\n        }\n      }\n      categories: allMarkdownRemark {\n        group(field: { frontmatter: { category: SELECT } }) {\n          fieldValue\n          totalCount\n        }\n      }\n      tags: allMarkdownRemark {\n        group(field: { frontmatter: { tags: SELECT } }) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n\n  // Get unique categories and tags with counts\n  const categories = data.categories.group\n    .filter((group: any) => group.fieldValue)\n    .sort((a: any, b: any) => b.totalCount - a.totalCount);\n\n  const tags = data.tags.group\n    .filter((group: any) => group.fieldValue)\n    .sort((a: any, b: any) => b.totalCount - a.totalCount);\n\n  const updateFilters = (newFilters: Partial<FilterState>) => {\n    const updated = { ...filters, ...newFilters };\n    setFilters(updated);\n    onFilterChange?.(updated);\n  };\n\n  const toggleCategory = (category: string) => {\n    const updated = filters.categories.includes(category)\n      ? filters.categories.filter(c => c !== category)\n      : [...filters.categories, category];\n    updateFilters({ categories: updated });\n  };\n\n  const toggleTag = (tag: string) => {\n    const updated = filters.tags.includes(tag)\n      ? filters.tags.filter(t => t !== tag)\n      : [...filters.tags, tag];\n    updateFilters({ tags: updated });\n  };\n\n  const clearFilters = () => {\n    updateFilters({ categories: [], tags: [], searchTerm: \"\" });\n  };\n\n  const activeFilterCount = filters.categories.length + filters.tags.length;\n\n  return (\n    <div className={cn(\"flex items-center gap-2\", className)}>\n      <Sheet open={isFilterOpen} onOpenChange={setIsFilterOpen}>\n        <SheetTrigger asChild>\n          <Button variant=\"outline\" size=\"sm\" className=\"relative\">\n            <Filter className=\"h-4 w-4 mr-2\" />\n            Filter\n            {activeFilterCount > 0 && (\n              <Badge \n                variant=\"secondary\" \n                className=\"ml-2 h-5 w-5 p-0 text-xs flex items-center justify-center\"\n              >\n                {activeFilterCount}\n              </Badge>\n            )}\n          </Button>\n        </SheetTrigger>\n        <SheetContent>\n          <SheetHeader>\n            <SheetTitle className=\"flex items-center gap-2\">\n              <Filter className=\"h-5 w-5\" />\n              Filter Posts\n            </SheetTitle>\n          </SheetHeader>\n          \n          <div className=\"mt-6 space-y-6\">\n            {/* Search */}\n            <div>\n              <label className=\"text-sm font-medium mb-3 block\">Search</label>\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                <input\n                  type=\"text\"\n                  value={filters.searchTerm}\n                  onChange={(e) => updateFilters({ searchTerm: e.target.value })}\n                  placeholder=\"Search posts...\"\n                  className=\"w-full pl-10 pr-4 py-2 bg-background border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-ring\"\n                />\n              </div>\n            </div>\n\n            {/* Categories */}\n            <div>\n              <label className=\"text-sm font-medium mb-3 block flex items-center gap-2\">\n                <FolderOpen className=\"h-4 w-4\" />\n                Categories\n              </label>\n              <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n                {categories.map((category: any) => (\n                  <div key={category.fieldValue} className=\"flex items-center gap-2\">\n                    <input\n                      type=\"checkbox\"\n                      id={`category-${category.fieldValue}`}\n                      checked={filters.categories.includes(category.fieldValue)}\n                      onChange={() => toggleCategory(category.fieldValue)}\n                      className=\"rounded border-border\"\n                    />\n                    <label \n                      htmlFor={`category-${category.fieldValue}`}\n                      className=\"flex-1 text-sm cursor-pointer\"\n                    >\n                      {category.fieldValue}\n                    </label>\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {category.totalCount}\n                    </Badge>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Tags */}\n            <div>\n              <label className=\"text-sm font-medium mb-3 block flex items-center gap-2\">\n                <Tag className=\"h-4 w-4\" />\n                Tags\n              </label>\n              <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n                {tags.map((tag: any) => (\n                  <div key={tag.fieldValue} className=\"flex items-center gap-2\">\n                    <input\n                      type=\"checkbox\"\n                      id={`tag-${tag.fieldValue}`}\n                      checked={filters.tags.includes(tag.fieldValue)}\n                      onChange={() => toggleTag(tag.fieldValue)}\n                      className=\"rounded border-border\"\n                    />\n                    <label \n                      htmlFor={`tag-${tag.fieldValue}`}\n                      className=\"flex-1 text-sm cursor-pointer\"\n                    >\n                      {tag.fieldValue}\n                    </label>\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {tag.totalCount}\n                    </Badge>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Actions */}\n            <div className=\"pt-4 border-t space-y-2\">\n              <Button onClick={clearFilters} variant=\"outline\" className=\"w-full\">\n                <X className=\"h-4 w-4 mr-2\" />\n                Clear All Filters\n              </Button>\n            </div>\n          </div>\n        </SheetContent>\n      </Sheet>\n\n      {/* Active Filters Display */}\n      {activeFilterCount > 0 && (\n        <div className=\"flex flex-wrap items-center gap-1\">\n          {filters.categories.map(category => (\n            <Badge \n              key={category} \n              variant=\"secondary\" \n              className=\"text-xs cursor-pointer hover:bg-destructive hover:text-destructive-foreground\"\n              onClick={() => toggleCategory(category)}\n            >\n              {category}\n              <X className=\"h-3 w-3 ml-1\" />\n            </Badge>\n          ))}\n          {filters.tags.map(tag => (\n            <Badge \n              key={tag} \n              variant=\"outline\" \n              className=\"text-xs cursor-pointer hover:bg-destructive hover:text-destructive-foreground\"\n              onClick={() => toggleTag(tag)}\n            >\n              {tag}\n              <X className=\"h-3 w-3 ml-1\" />\n            </Badge>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CategoryTagFilter;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/CodeBlock/CodeBlock.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":2,"endColumn":78},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/button\"","line":3,"column":24,"nodeType":"Literal","endLine":3,"endColumn":48},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/tooltip\"","line":8,"column":8,"nodeType":"Literal","endLine":8,"endColumn":33},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":9,"column":20,"nodeType":"Literal","endLine":9,"endColumn":33},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":42,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":42,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1066,1111],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"react/no-array-index-key","severity":2,"message":"Do not use Array index in keys","line":192,"column":27,"nodeType":"Identifier","messageId":"noArrayIndex","endLine":192,"endColumn":32},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":223,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":239,"endColumn":2,"fix":{"range":[6370,6687],"text":"function InlineCodeBlock({ \n  children, \n  className \n}: { \n  children: string; \n  className?: string;\n}) {\n  return <code \n    className={cn(\n      \"relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold\",\n      \"border border-border/50\",\n      className\n    )}\n  >\n    {children}\n  </code>\n}"}},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":241,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":257,"endColumn":2,"fix":{"range":[6696,6967],"text":"function SimpleCodeBlock({ \n  children, \n  language,\n  className \n}: { \n  children: string; \n  language?: string;\n  className?: string;\n}) {\n  return <CodeBlock\n    className={className}\n    showLineNumbers={false}\n    collapsible={false}\n  >\n    {children}\n  </CodeBlock>\n}"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'language' is defined but never used.","line":243,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":243,"endColumn":11},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":259,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":278,"endColumn":2,"fix":{"range":[6976,7291],"text":"function CollapsibleCodeBlock({ \n  children,\n  language,\n  title,\n  className \n}: { \n  children: string; \n  language?: string;\n  title?: string;\n  className?: string;\n}) {\n  return <CodeBlock\n    className={className}\n    language={language}\n    title={title}\n    collapsible={true}\n  >\n    {children}\n  </CodeBlock>\n}"}},{"ruleId":"react/jsx-boolean-value","severity":2,"message":"Value must be omitted for boolean attribute `collapsible`","line":274,"column":5,"nodeType":"JSXAttribute","messageId":"omitBoolean","endLine":274,"endColumn":23,"fix":{"range":[7247,7254],"text":""}}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import React, { useState, useRef } from \"react\";\nimport { Check, Copy, ChevronDown, ChevronUp, Terminal } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { cn } from \"@/lib/utils\";\n\ninterface CodeBlockProps {\n  children: string;\n  language?: string;\n  title?: string;\n  fileName?: string;\n  showLineNumbers?: boolean;\n  maxHeight?: string;\n  collapsible?: boolean;\n  className?: string;\n}\n\nexport function CodeBlock({\n  children,\n  language = \"text\",\n  title,\n  fileName,\n  showLineNumbers = true,\n  maxHeight = \"400px\",\n  collapsible = false,\n  className,\n}: CodeBlockProps): React.ReactElement {\n  const [copied, setCopied] = useState(false);\n  const [expanded, setExpanded] = useState(!collapsible);\n  const codeRef = useRef<HTMLElement>(null);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(children);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (error) {\n      console.error(\"Failed to copy code:\", error);\n    }\n  };\n\n  const getLanguageLabel = (lang: string): string => {\n    const languageMap: Record<string, string> = {\n      js: \"JavaScript\",\n      ts: \"TypeScript\",\n      jsx: \"React\",\n      tsx: \"React TypeScript\",\n      py: \"Python\",\n      java: \"Java\",\n      cpp: \"C++\",\n      c: \"C\",\n      cs: \"C#\",\n      php: \"PHP\",\n      rb: \"Ruby\",\n      go: \"Go\",\n      rs: \"Rust\",\n      kt: \"Kotlin\",\n      swift: \"Swift\",\n      dart: \"Dart\",\n      scala: \"Scala\",\n      sh: \"Shell\",\n      bash: \"Bash\",\n      zsh: \"Zsh\",\n      fish: \"Fish\",\n      powershell: \"PowerShell\",\n      sql: \"SQL\",\n      html: \"HTML\",\n      css: \"CSS\",\n      scss: \"SCSS\",\n      sass: \"Sass\",\n      less: \"Less\",\n      json: \"JSON\",\n      xml: \"XML\",\n      yaml: \"YAML\",\n      yml: \"YAML\",\n      toml: \"TOML\",\n      ini: \"INI\",\n      conf: \"Config\",\n      md: \"Markdown\",\n      mdx: \"MDX\",\n      vue: \"Vue\",\n      svelte: \"Svelte\",\n      dockerfile: \"Dockerfile\",\n      nginx: \"Nginx\",\n      apache: \"Apache\",\n      text: \"Plain Text\",\n    };\n    return languageMap[lang.toLowerCase()] || lang.toUpperCase();\n  };\n\n  const lines = children.split(\"\\n\");\n  const shouldShowToggle = collapsible && lines.length > 10;\n\n  return (\n    <div \n      className={cn(\n        \"relative group rounded-lg border bg-muted/30 overflow-hidden\",\n        \"shadow-sm hover:shadow-md transition-shadow duration-200\",\n        className\n      )}\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between px-4 py-2 bg-muted/50 border-b\">\n        <div className=\"flex items-center gap-2\">\n          <Terminal className=\"h-4 w-4 text-muted-foreground\" />\n          <span className=\"text-sm font-medium text-foreground\">\n            {title || fileName || getLanguageLabel(language)}\n          </span>\n          {fileName && (\n            <span className=\"text-xs text-muted-foreground px-2 py-1 bg-background/50 rounded\">\n              {fileName}\n            </span>\n          )}\n        </div>\n        \n        <div className=\"flex items-center gap-1\">\n          {shouldShowToggle && (\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setExpanded(!expanded)}\n                  className=\"h-7 w-7 p-0 hover:bg-background/50\"\n                  aria-label={expanded ? \"Collapse code\" : \"Expand code\"}\n                >\n                  {expanded ? (\n                    <ChevronUp className=\"h-4 w-4\" />\n                  ) : (\n                    <ChevronDown className=\"h-4 w-4\" />\n                  )}\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent side=\"bottom\">\n                {expanded ? \"Collapse\" : \"Expand\"}\n              </TooltipContent>\n            </Tooltip>\n          )}\n          \n          <Tooltip>\n            <TooltipTrigger asChild>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={handleCopy}\n                className=\"h-7 w-7 p-0 hover:bg-background/50\"\n                aria-label=\"Copy code\"\n              >\n                {copied ? (\n                  <Check className=\"h-4 w-4 text-green-500\" />\n                ) : (\n                  <Copy className=\"h-4 w-4\" />\n                )}\n              </Button>\n            </TooltipTrigger>\n            <TooltipContent side=\"bottom\">\n              {copied ? \"Copied!\" : \"Copy code\"}\n            </TooltipContent>\n          </Tooltip>\n        </div>\n      </div>\n\n      {/* Code Content */}\n      <div \n        className={cn(\n          \"relative transition-all duration-300 ease-in-out\",\n          !expanded && shouldShowToggle && \"max-h-60 overflow-hidden\"\n        )}\n      >\n        <pre \n          className={cn(\n            \"overflow-auto p-4 text-sm font-mono leading-relaxed\",\n            !expanded && \"scrollbar-thin scrollbar-thumb-muted scrollbar-track-transparent\"\n          )}\n          style={{ \n            maxHeight: expanded ? maxHeight : undefined \n          }}\n        >\n          <code \n            ref={codeRef}\n            className={cn(\n              `language-${language}`,\n              \"block whitespace-pre\"\n            )}\n          >\n            {showLineNumbers ? (\n              lines.map((line, index) => (\n                <div key={index} className=\"table-row\">\n                  <span \n                    className=\"table-cell select-none text-right pr-4 text-muted-foreground w-10 sticky left-0 bg-muted/30\"\n                    style={{ minWidth: '2.5rem' }}\n                  >\n                    {index + 1}\n                  </span>\n                  <span className=\"table-cell\">\n                    {line}\n                  </span>\n                </div>\n              ))\n            ) : (\n              children\n            )}\n          </code>\n        </pre>\n        \n        {/* Fade overlay when collapsed */}\n        {!expanded && shouldShowToggle && (\n          <div \n            className=\"absolute bottom-0 left-0 right-0 h-12 bg-gradient-to-t from-muted/30 to-transparent pointer-events-none\"\n            aria-hidden=\"true\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Export component variants for different use cases\nexport const InlineCodeBlock = ({ \n  children, \n  className \n}: { \n  children: string; \n  className?: string;\n}) => (\n  <code \n    className={cn(\n      \"relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold\",\n      \"border border-border/50\",\n      className\n    )}\n  >\n    {children}\n  </code>\n);\n\nexport const SimpleCodeBlock = ({ \n  children, \n  language,\n  className \n}: { \n  children: string; \n  language?: string;\n  className?: string;\n}) => (\n  <CodeBlock\n    className={className}\n    showLineNumbers={false}\n    collapsible={false}\n  >\n    {children}\n  </CodeBlock>\n);\n\nexport const CollapsibleCodeBlock = ({ \n  children,\n  language,\n  title,\n  className \n}: { \n  children: string; \n  language?: string;\n  title?: string;\n  className?: string;\n}) => (\n  <CodeBlock\n    className={className}\n    language={language}\n    title={title}\n    collapsible={true}\n  >\n    {children}\n  </CodeBlock>\n);\n\nexport default CodeBlock;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ExpandableSection/ExpandableSection.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":2,"endColumn":58},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/button\"","line":3,"column":24,"nodeType":"Literal","endLine":3,"endColumn":48},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":4,"column":20,"nodeType":"Literal","endLine":4,"endColumn":33},{"ruleId":"consistent-return","severity":2,"message":"Arrow function expected no return value.","line":52,"column":5,"nodeType":"ReturnStatement","messageId":"unexpectedReturnValue","endLine":52,"endColumn":46},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":153,"column":11,"nodeType":"Property","messageId":"expectedPropertyShorthand","endLine":153,"endColumn":25,"fix":{"range":[4053,4067],"text":"height"}},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":178,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":180,"endColumn":2,"fix":{"range":[4710,4854],"text":"function BorderedExpandableSection(props: Omit<ExpandableSectionProps, \"variant\">) {\n  return <ExpandableSection {...props} variant=\"bordered\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":179,"column":22,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":179,"endColumn":32},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":182,"column":41,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":184,"endColumn":2,"fix":{"range":[4863,5005],"text":"function MinimalExpandableSection(props: Omit<ExpandableSectionProps, \"variant\">) {\n  return <ExpandableSection {...props} variant=\"minimal\" />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":183,"column":22,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":183,"endColumn":32},{"ruleId":"react/no-array-index-key","severity":2,"message":"Do not use Array index in keys","line":244,"column":18,"nodeType":"Identifier","messageId":"noArrayIndex","endLine":244,"endColumn":23}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import React, { useState, useRef, useEffect } from \"react\";\nimport { ChevronDown, ChevronRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ExpandableSectionProps {\n  title: string;\n  children: React.ReactNode;\n  defaultExpanded?: boolean;\n  icon?: React.ReactNode;\n  variant?: \"default\" | \"bordered\" | \"minimal\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  animationDuration?: number;\n  className?: string;\n  headerClassName?: string;\n  contentClassName?: string;\n  onToggle?: (expanded: boolean) => void;\n}\n\nexport function ExpandableSection({\n  title,\n  children,\n  defaultExpanded = false,\n  icon,\n  variant = \"default\",\n  size = \"md\",\n  animationDuration = 200,\n  className,\n  headerClassName,\n  contentClassName,\n  onToggle,\n}: ExpandableSectionProps): React.ReactElement {\n  const [isExpanded, setIsExpanded] = useState(defaultExpanded);\n  const [height, setHeight] = useState<number | undefined>(defaultExpanded ? undefined : 0);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const measureRef = useRef<HTMLDivElement>(null);\n\n  // Measure content height when expanded state changes\n  useEffect(() => {\n    if (!contentRef.current) return;\n\n    const resizeObserver = new ResizeObserver(() => {\n      if (measureRef.current && isExpanded) {\n        setHeight(measureRef.current.scrollHeight);\n      }\n    });\n\n    if (measureRef.current) {\n      resizeObserver.observe(measureRef.current);\n    }\n\n    return () => resizeObserver.disconnect();\n  }, [isExpanded]);\n\n  const handleToggle = () => {\n    const newExpanded = !isExpanded;\n    \n    if (newExpanded && measureRef.current) {\n      setHeight(measureRef.current.scrollHeight);\n    } else {\n      setHeight(0);\n    }\n\n    setIsExpanded(newExpanded);\n    onToggle?.(newExpanded);\n  };\n\n  const variantStyles = {\n    default: \"bg-card border border-border rounded-lg shadow-sm\",\n    bordered: \"border-2 border-border rounded-md\",\n    minimal: \"border-b border-border/50\",\n  };\n\n  const sizeStyles = {\n    sm: {\n      padding: \"p-3\",\n      titleSize: \"text-sm font-medium\",\n      iconSize: \"h-4 w-4\",\n      spacing: \"space-y-2\",\n    },\n    md: {\n      padding: \"p-4\",\n      titleSize: \"text-base font-semibold\",\n      iconSize: \"h-5 w-5\",\n      spacing: \"space-y-3\",\n    },\n    lg: {\n      padding: \"p-6\",\n      titleSize: \"text-lg font-bold\",\n      iconSize: \"h-6 w-6\",\n      spacing: \"space-y-4\",\n    },\n  };\n\n  const styles = sizeStyles[size];\n\n  return (\n    <div \n      className={cn(\n        \"transition-all duration-200 hover:shadow-md\",\n        variantStyles[variant],\n        className\n      )}\n    >\n      {/* Header */}\n      <Button\n        variant=\"ghost\"\n        onClick={handleToggle}\n        className={cn(\n          \"w-full justify-between h-auto hover:bg-transparent focus:bg-transparent\",\n          styles.padding,\n          \"p-0 font-normal text-left\",\n          headerClassName\n        )}\n        aria-expanded={isExpanded}\n        aria-controls={`expandable-content-${title.replace(/\\s+/g, '-').toLowerCase()}`}\n      >\n        <div className=\"flex items-center gap-3\">\n          {icon && (\n            <div className={cn(\"flex-shrink-0\", styles.iconSize)}>\n              {icon}\n            </div>\n          )}\n          <span className={cn(styles.titleSize, \"truncate\")}>\n            {title}\n          </span>\n        </div>\n        \n        <div className=\"flex-shrink-0 ml-3\">\n          {isExpanded ? (\n            <ChevronDown \n              className={cn(\n                styles.iconSize,\n                \"transition-transform duration-200 text-muted-foreground\"\n              )} \n            />\n          ) : (\n            <ChevronRight \n              className={cn(\n                styles.iconSize,\n                \"transition-transform duration-200 text-muted-foreground\"\n              )} \n            />\n          )}\n        </div>\n      </Button>\n\n      {/* Content */}\n      <div \n        ref={contentRef}\n        className=\"overflow-hidden transition-all ease-in-out\"\n        style={{\n          height: height,\n          transitionDuration: `${animationDuration}ms`,\n        }}\n        id={`expandable-content-${title.replace(/\\s+/g, '-').toLowerCase()}`}\n        aria-hidden={!isExpanded}\n      >\n        <div \n          ref={measureRef}\n          className={cn(\n            styles.padding,\n            \"pt-0\",\n            styles.spacing,\n            contentClassName\n          )}\n        >\n          <div className=\"prose prose-sm dark:prose-invert max-w-none [&>*:first-child]:mt-0 [&>*:last-child]:mb-0\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Convenience components for different variants\nexport const BorderedExpandableSection = (props: Omit<ExpandableSectionProps, \"variant\">) => (\n  <ExpandableSection {...props} variant=\"bordered\" />\n);\n\nexport const MinimalExpandableSection = (props: Omit<ExpandableSectionProps, \"variant\">) => (\n  <ExpandableSection {...props} variant=\"minimal\" />\n);\n\n// FAQ-specific expandable section with enhanced styling\nexport function FAQSection({\n  question,\n  answer,\n  defaultExpanded = false,\n  className,\n}: {\n  question: string;\n  answer: React.ReactNode;\n  defaultExpanded?: boolean;\n  className?: string;\n}) {\n  return (\n    <ExpandableSection\n      title={question}\n      defaultExpanded={defaultExpanded}\n      variant=\"bordered\"\n      className={cn(\"hover:border-primary/50 transition-colors\", className)}\n      headerClassName=\"hover:text-primary\"\n    >\n      {answer}\n    </ExpandableSection>\n  );\n}\n\n// Accordion group for multiple expandable sections\ninterface AccordionProps {\n  children: React.ReactNode;\n  allowMultiple?: boolean;\n  className?: string;\n}\n\nexport function Accordion({ \n  children, \n  allowMultiple = false, \n  className \n}: AccordionProps): React.ReactElement {\n  const [expandedItems, setExpandedItems] = useState<Set<number>>(new Set());\n\n  const handleToggle = (index: number, expanded: boolean) => {\n    if (allowMultiple) {\n      const newSet = new Set(expandedItems);\n      if (expanded) {\n        newSet.add(index);\n      } else {\n        newSet.delete(index);\n      }\n      setExpandedItems(newSet);\n    } else {\n      setExpandedItems(expanded ? new Set([index]) : new Set());\n    }\n  };\n\n  return (\n    <div className={cn(\"space-y-2\", className)}>\n      {React.Children.map(children, (child, index) => {\n        if (React.isValidElement(child) && child.type === ExpandableSection) {\n          return React.cloneElement(child, {\n            key: index,\n            defaultExpanded: expandedItems.has(index),\n            onToggle: (expanded: boolean) => {\n              handleToggle(index, expanded);\n              child.props.onToggle?.(expanded);\n            },\n          });\n        }\n        return child;\n      })}\n    </div>\n  );\n}\n\nexport default ExpandableSection;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/Footer/Footer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/GitHubButton/GitHubButton.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":2,"endColumn":39}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Github } from \"lucide-react\";\nimport { Button } from \"../ui/button\";\n\ninterface GitHubButtonProps {\n  href: string;\n  children: React.ReactNode;\n  className?: string;\n  variant?: \"default\" | \"secondary\" | \"outline\" | \"ghost\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n}\n\nfunction GitHubButton({ \n  href, \n  children, \n  className = \"\",\n  variant = \"outline\",\n  size = \"default\"\n}: GitHubButtonProps): React.ReactElement {\n  return (\n    <Button\n      variant={variant}\n      size={size}\n      className={className}\n      asChild\n    >\n      <a\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        aria-label={`View ${children} on GitHub`}\n      >\n        <Github className=\"w-4 h-4 mr-2\" />\n        {children}\n      </a>\n    </Button>\n  );\n}\n\nexport default GitHubButton;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/Navbar/Navbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/OptimizedImage/OptimizedImage.tsx","messages":[{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":21,"column":55,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":157,"endColumn":2},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":128,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":128,"endColumn":25},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","line":162,"column":90,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSingleBlock","endLine":164,"endColumn":2,"fix":{"range":[4600,4709],"text":"breakpoints.map(bp => `(max-width: ${bp}px) ${Math.round(bp * 0.9)}px`).join(', ') + ', 1200px'"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":163,"column":10,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":163,"endColumn":105,"fix":{"range":[4611,4706],"text":"`${breakpoints.map(bp => `(max-width: ${bp}px) ${Math.round(bp * 0.9)}px`).join(', ')  }, 1200px`"}}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\ninterface OptimizedImageProps {\n  image: any;\n  alt: string;\n  className?: string;\n  loading?: 'lazy' | 'eager';\n  aspectRatio?: number;\n  width?: number;\n  height?: number;\n  placeholder?: 'blurred' | 'none';\n  quality?: number;\n  formats?: ('auto' | 'webp' | 'avif' | 'png' | 'jpg')[];\n}\n\n/**\n * OptimizedImage component with CLS prevention and performance optimizations\n * Wraps gatsby-plugin-image with additional performance enhancements\n */\nconst OptimizedImage: React.FC<OptimizedImageProps> = ({\n  image,\n  alt,\n  className = '',\n  loading = 'lazy',\n  aspectRatio,\n  width,\n  height,\n  placeholder = 'blurred',\n  quality = 85,\n  formats = ['auto', 'webp', 'avif'],\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  // Get optimized image data\n  const optimizedImage = getImage(image);\n\n  if (!optimizedImage) {\n    return (\n      <div \n        className={`bg-muted flex items-center justify-center ${className}`}\n        style={{\n          aspectRatio: aspectRatio ? aspectRatio.toString() : undefined,\n          width: width ? `${width}px` : undefined,\n          height: height ? `${height}px` : undefined,\n        }}\n        role=\"img\"\n        aria-label={alt}\n      >\n        <span className=\"text-muted-foreground text-sm\">Image not found</span>\n      </div>\n    );\n  }\n\n  // Container styles for CLS prevention\n  const containerStyles: React.CSSProperties = {\n    position: 'relative',\n    overflow: 'hidden',\n    ...(aspectRatio && { aspectRatio: aspectRatio.toString() }),\n    ...(width && { width: `${width}px` }),\n    ...(height && { height: `${height}px` }),\n  };\n\n  // Loading skeleton styles\n  const skeletonStyles: React.CSSProperties = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: 'linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 37%, #f0f0f0 63%)',\n    backgroundSize: '400% 100%',\n    animation: 'loading 1.4s ease infinite',\n    zIndex: 1,\n    opacity: isLoaded ? 0 : 1,\n    transition: 'opacity 0.3s ease-out',\n  };\n\n  return (\n    <div \n      className={`prevent-cls ${className}`}\n      style={containerStyles}\n      data-dynamic=\"true\"\n    >\n      {/* Loading skeleton */}\n      {!isLoaded && !hasError && (\n        <div style={skeletonStyles} aria-hidden=\"true\" />\n      )}\n\n      {/* Error fallback */}\n      {hasError && (\n        <div \n          className=\"bg-muted flex items-center justify-center w-full h-full\"\n          role=\"img\"\n          aria-label={alt}\n        >\n          <span className=\"text-muted-foreground text-sm\">\n            Failed to load image\n          </span>\n        </div>\n      )}\n\n      {/* Optimized image */}\n      <GatsbyImage\n        image={optimizedImage}\n        alt={alt}\n        loading={loading}\n        placeholder={placeholder}\n        quality={quality}\n        formats={formats}\n        style={{\n          opacity: hasError ? 0 : 1,\n          transition: 'opacity 0.3s ease-out',\n        }}\n        onLoad={() => setIsLoaded(true)}\n        onError={() => setHasError(true)}\n        imgStyle={{\n          objectFit: 'cover',\n          width: '100%',\n          height: '100%',\n        }}\n      />\n\n      {/* Intersection Observer for lazy loading analytics */}\n      {loading === 'lazy' && (\n        <div\n          ref={(node) => {\n            if (node && 'IntersectionObserver' in window) {\n              const observer = new IntersectionObserver(\n                (entries) => {\n                  entries.forEach((entry) => {\n                    if (entry.isIntersecting) {\n                      // Track lazy loading performance\n                      if (window.gtag) {\n                        window.gtag('event', 'lazy_image_load', {\n                          event_category: 'Performance',\n                          custom_parameter_1: alt,\n                        });\n                      }\n                      observer.unobserve(entry.target);\n                    }\n                  });\n                },\n                { rootMargin: '50px' }\n              );\n              observer.observe(node);\n              return () => observer.unobserve(node);\n            }\n          }}\n          style={{ position: 'absolute', top: 0, left: 0, width: 1, height: 1 }}\n          aria-hidden=\"true\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default OptimizedImage;\n\n// Utility functions for image optimization\nexport const getOptimalImageSizes = (breakpoints: number[] = [768, 1024, 1366, 1920]) => {\n  return breakpoints.map(bp => `(max-width: ${bp}px) ${Math.round(bp * 0.9)}px`).join(', ') + ', 1200px';\n};\n\nexport const getResponsiveImageData = (\n  image: any,\n  options: {\n    maxWidth?: number;\n    quality?: number;\n    formats?: string[];\n    breakpoints?: number[];\n  } = {}\n) => {\n  const {\n    maxWidth = 1200,\n    quality = 85,\n    formats = ['auto', 'webp', 'avif'],\n    breakpoints = [480, 768, 1024, 1200],\n  } = options;\n\n  return {\n    ...image,\n    childImageSharp: {\n      ...image?.childImageSharp,\n      gatsbyImageData: {\n        ...image?.childImageSharp?.gatsbyImageData,\n        width: Math.min(image?.childImageSharp?.gatsbyImageData?.width || maxWidth, maxWidth),\n        height: Math.round(\n          (image?.childImageSharp?.gatsbyImageData?.height || maxWidth) * \n          (maxWidth / (image?.childImageSharp?.gatsbyImageData?.width || maxWidth))\n        ),\n        quality,\n        formats,\n        breakpoints,\n      },\n    },\n  };\n};","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/PWAFeatures/PWAFeatures.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":14,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Wifi' is defined but never used.","line":4,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":7},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/button\"","line":15,"column":24,"nodeType":"Literal","endLine":15,"endColumn":48},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/card\"","line":16,"column":75,"nodeType":"Literal","endLine":16,"endColumn":97},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/tooltip\"","line":21,"column":8,"nodeType":"Literal","endLine":21,"endColumn":33},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":22,"column":20,"nodeType":"Literal","endLine":22,"endColumn":33},{"ruleId":"import/order","severity":2,"message":"`sonner` import should occur before import of `@/components/ui/button`","line":23,"column":1,"nodeType":"ImportDeclaration","endLine":23,"endColumn":32,"fix":{"range":[214,517],"text":"import { toast } from \"sonner\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { cn } from \"@/lib/utils\";\n"}},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":76,"column":29,"nodeType":"CallExpression","messageId":"missingRadix","endLine":76,"endColumn":52,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[2181,2181],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":113,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":113,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3271,3318],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":206,"column":18,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&apos;"},"fix":{"range":[6174,6213],"text":"You&apos;re offline - viewing cached content"},"desc":"Replace with `&apos;`."},{"messageId":"replaceWithAlt","data":{"alt":"&lsquo;"},"fix":{"range":[6174,6213],"text":"You&lsquo;re offline - viewing cached content"},"desc":"Replace with `&lsquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#39;"},"fix":{"range":[6174,6213],"text":"You&#39;re offline - viewing cached content"},"desc":"Replace with `&#39;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rsquo;"},"fix":{"range":[6174,6213],"text":"You&rsquo;re offline - viewing cached content"},"desc":"Replace with `&rsquo;`."}]},{"ruleId":"@typescript-eslint/no-shadow","severity":2,"message":"'permission' is already declared in the upper scope on line 217 column 10.","line":238,"column":13,"nodeType":"Identifier","messageId":"noShadow","endLine":238,"endColumn":23},{"ruleId":"no-new","severity":2,"message":"Do not use 'new' for side effects.","line":247,"column":9,"nodeType":"ExpressionStatement","messageId":"noNewStatement","endLine":250,"endColumn":12},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":255,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":255,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[7709,7775],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":321,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":321,"endColumn":19,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[9652,9713],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":352,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":352,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[10693,10750],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":466,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":466,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[14328,14374],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback } from \"react\";\nimport { \n  Download,\n  Wifi,\n  WifiOff,\n  Bell,\n  BellOff,\n  Bookmark,\n  BookmarkCheck,\n  Smartphone,\n  X,\n  Reload,\n  Check\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { cn } from \"@/lib/utils\";\nimport { toast } from \"sonner\";\n\ninterface PWAFeaturesProps {\n  className?: string;\n}\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  readonly userChoice: Promise<{\n    outcome: 'accepted' | 'dismissed';\n    platform: string;\n  }>;\n  prompt(): Promise<void>;\n}\n\ninterface OfflinePost {\n  slug: string;\n  title: string;\n  content: string;\n  dateAdded: string;\n  estimatedReadTime: number;\n}\n\nexport function PWAInstallPrompt({ \n  className \n}: { \n  className?: string;\n}): React.ReactElement | null {\n  const [deferredPrompt, setDeferredPrompt] = useState<BeforeInstallPromptEvent | null>(null);\n  const [showInstallPrompt, setShowInstallPrompt] = useState(false);\n  const [isInstalled, setIsInstalled] = useState(false);\n  const [isStandalone, setIsStandalone] = useState(false);\n\n  useEffect(() => {\n    // Check if app is already installed/running in standalone mode\n    const checkStandalone = () => {\n      const isStandaloneMode = window.matchMedia('(display-mode: standalone)').matches ||\n                             (window.navigator as any).standalone ||\n                             document.referrer.includes('android-app://');\n      setIsStandalone(isStandaloneMode);\n    };\n\n    checkStandalone();\n\n    // Listen for beforeinstallprompt event\n    const handleBeforeInstallPrompt = (e: Event) => {\n      e.preventDefault();\n      setDeferredPrompt(e as BeforeInstallPromptEvent);\n      \n      // Show install prompt after a delay if not dismissed recently\n      const lastDismissed = localStorage.getItem('pwa-install-dismissed');\n      const oneDayAgo = Date.now() - 24 * 60 * 60 * 1000;\n      \n      if (!lastDismissed || parseInt(lastDismissed) < oneDayAgo) {\n        setTimeout(() => setShowInstallPrompt(true), 5000);\n      }\n    };\n\n    // Listen for app installed event\n    const handleAppInstalled = () => {\n      setIsInstalled(true);\n      setShowInstallPrompt(false);\n      setDeferredPrompt(null);\n      toast.success(\"App installed successfully!\");\n    };\n\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n    window.addEventListener('appinstalled', handleAppInstalled);\n\n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n      window.removeEventListener('appinstalled', handleAppInstalled);\n    };\n  }, []);\n\n  const handleInstallClick = async () => {\n    if (!deferredPrompt) return;\n\n    try {\n      await deferredPrompt.prompt();\n      const { outcome } = await deferredPrompt.userChoice;\n      \n      if (outcome === 'accepted') {\n        setShowInstallPrompt(false);\n      } else {\n        localStorage.setItem('pwa-install-dismissed', Date.now().toString());\n      }\n      \n      setDeferredPrompt(null);\n    } catch (error) {\n      console.error('Install prompt failed:', error);\n    }\n  };\n\n  const handleDismiss = () => {\n    setShowInstallPrompt(false);\n    localStorage.setItem('pwa-install-dismissed', Date.now().toString());\n  };\n\n  // Don't show if already installed or in standalone mode\n  if (isInstalled || isStandalone || !showInstallPrompt || !deferredPrompt) {\n    return null;\n  }\n\n  return (\n    <Card className={cn(\"fixed bottom-4 right-4 z-50 max-w-sm shadow-lg\", className)}>\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Smartphone className=\"h-5 w-5 text-primary\" />\n            <CardTitle className=\"text-base\">Install App</CardTitle>\n          </div>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={handleDismiss}\n            className=\"h-6 w-6 p-0\"\n            aria-label=\"Dismiss\"\n          >\n            <X className=\"h-4 w-4\" />\n          </Button>\n        </div>\n        <CardDescription className=\"text-sm\">\n          Install this app on your device for a better experience with offline access and notifications.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"flex gap-2\">\n          <Button onClick={handleInstallClick} className=\"flex-1\" size=\"sm\">\n            <Download className=\"h-4 w-4 mr-2\" />\n            Install\n          </Button>\n          <Button onClick={handleDismiss} variant=\"outline\" size=\"sm\">\n            Not now\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function OfflineIndicator({ \n  className \n}: { \n  className?: string;\n}): React.ReactElement {\n  const [isOnline, setIsOnline] = useState(true);\n  const [showOfflineBanner, setShowOfflineBanner] = useState(false);\n\n  useEffect(() => {\n    const updateOnlineStatus = () => {\n      const online = navigator.onLine;\n      setIsOnline(online);\n      \n      if (!online && !showOfflineBanner) {\n        setShowOfflineBanner(true);\n        toast.error(\"You're offline. Some features may not work properly.\");\n      } else if (online && showOfflineBanner) {\n        setShowOfflineBanner(false);\n        toast.success(\"You're back online!\");\n      }\n    };\n\n    updateOnlineStatus();\n\n    window.addEventListener('online', updateOnlineStatus);\n    window.addEventListener('offline', updateOnlineStatus);\n\n    return () => {\n      window.removeEventListener('online', updateOnlineStatus);\n      window.removeEventListener('offline', updateOnlineStatus);\n    };\n  }, [showOfflineBanner]);\n\n  if (isOnline) return null;\n\n  return (\n    <div className={cn(\n      \"fixed top-0 left-0 right-0 bg-orange-500 text-white text-sm text-center py-2 z-50\",\n      className\n    )}>\n      <div className=\"flex items-center justify-center gap-2\">\n        <WifiOff className=\"h-4 w-4\" />\n        <span>You're offline - viewing cached content</span>\n      </div>\n    </div>\n  );\n}\n\nexport function NotificationManager({ \n  className \n}: { \n  className?: string;\n}): React.ReactElement {\n  const [permission, setPermission] = useState<NotificationPermission>('default');\n  const [subscribed, setSubscribed] = useState(false);\n\n  useEffect(() => {\n    // Check current notification permission\n    if ('Notification' in window) {\n      setPermission(Notification.permission);\n    }\n\n    // Check if already subscribed (simplified - would need service worker integration)\n    const savedSubscription = localStorage.getItem('notification-subscribed');\n    setSubscribed(savedSubscription === 'true');\n  }, []);\n\n  const requestNotificationPermission = async () => {\n    if (!('Notification' in window)) {\n      toast.error('Notifications are not supported in this browser');\n      return;\n    }\n\n    try {\n      const permission = await Notification.requestPermission();\n      setPermission(permission);\n\n      if (permission === 'granted') {\n        setSubscribed(true);\n        localStorage.setItem('notification-subscribed', 'true');\n        toast.success('Notifications enabled! You\\'ll be notified of new posts.');\n        \n        // Show a test notification\n        new Notification('Notifications enabled!', {\n          body: 'You\\'ll now receive notifications about new blog posts.',\n          icon: '/favicon.png',\n        });\n      } else {\n        toast.error('Notification permission denied');\n      }\n    } catch (error) {\n      console.error('Error requesting notification permission:', error);\n      toast.error('Failed to enable notifications');\n    }\n  };\n\n  const unsubscribeNotifications = () => {\n    setSubscribed(false);\n    localStorage.setItem('notification-subscribed', 'false');\n    toast.success('Notifications disabled');\n  };\n\n  if (!('Notification' in window)) return null;\n\n  return (\n    <div className={cn(\"flex items-center gap-2\", className)}>\n      {permission === 'granted' && subscribed ? (\n        <Tooltip>\n          <TooltipTrigger asChild>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={unsubscribeNotifications}\n              className=\"h-8 w-8 p-0\"\n              aria-label=\"Disable notifications\"\n            >\n              <BellOff className=\"h-4 w-4\" />\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent>Disable notifications</TooltipContent>\n        </Tooltip>\n      ) : (\n        <Tooltip>\n          <TooltipTrigger asChild>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={requestNotificationPermission}\n              className=\"h-8 w-8 p-0\"\n              aria-label=\"Enable notifications\"\n            >\n              <Bell className=\"h-4 w-4\" />\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent>Enable notifications for new posts</TooltipContent>\n        </Tooltip>\n      )}\n    </div>\n  );\n}\n\nexport function OfflineReadingQueue({ \n  className \n}: { \n  className?: string;\n}): React.ReactElement {\n  const [offlinePosts, setOfflinePosts] = useState<OfflinePost[]>([]);\n  const [currentPost, setCurrentPost] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Load offline posts from localStorage\n    try {\n      const saved = localStorage.getItem('offline-reading-queue');\n      if (saved) {\n        setOfflinePosts(JSON.parse(saved));\n      }\n    } catch (error) {\n      console.warn('Failed to load offline reading queue:', error);\n    }\n\n    // Get current post slug from URL\n    if (typeof window !== 'undefined') {\n      const path = window.location.pathname;\n      setCurrentPost(path);\n    }\n  }, []);\n\n  const saveToOffline = useCallback(async (slug: string, title: string) => {\n    try {\n      // In a real implementation, you would fetch the full content\n      // For now, we'll simulate this\n      const content = document.querySelector('article')?.innerHTML || '';\n      const estimatedReadTime = Math.ceil(content.length / 1000); // Rough estimate\n      \n      const newPost: OfflinePost = {\n        slug,\n        title,\n        content,\n        dateAdded: new Date().toISOString(),\n        estimatedReadTime,\n      };\n\n      const updated = [...offlinePosts.filter(p => p.slug !== slug), newPost];\n      setOfflinePosts(updated);\n      \n      localStorage.setItem('offline-reading-queue', JSON.stringify(updated));\n      toast.success('Post saved for offline reading!');\n    } catch (error) {\n      console.error('Failed to save post for offline:', error);\n      toast.error('Failed to save post for offline reading');\n    }\n  }, [offlinePosts]);\n\n  const removeFromOffline = useCallback((slug: string) => {\n    const updated = offlinePosts.filter(p => p.slug !== slug);\n    setOfflinePosts(updated);\n    localStorage.setItem('offline-reading-queue', JSON.stringify(updated));\n    toast.success('Removed from offline reading queue');\n  }, [offlinePosts]);\n\n  const isPostSaved = currentPost ? offlinePosts.some(p => p.slug === currentPost) : false;\n\n  // Get current page title (simplified)\n  const currentTitle = typeof document !== 'undefined' ? document.title : '';\n\n  return (\n    <div className={cn(\"flex items-center gap-2\", className)}>\n      {/* Save/Remove Current Post */}\n      {currentPost && (\n        <Tooltip>\n          <TooltipTrigger asChild>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => {\n                if (isPostSaved) {\n                  removeFromOffline(currentPost);\n                } else {\n                  saveToOffline(currentPost, currentTitle);\n                }\n              }}\n              className=\"h-8 w-8 p-0\"\n              aria-label={isPostSaved ? \"Remove from offline queue\" : \"Save for offline reading\"}\n            >\n              {isPostSaved ? (\n                <BookmarkCheck className=\"h-4 w-4 text-primary\" />\n              ) : (\n                <Bookmark className=\"h-4 w-4\" />\n              )}\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent>\n            {isPostSaved ? \"Remove from offline queue\" : \"Save for offline reading\"}\n          </TooltipContent>\n        </Tooltip>\n      )}\n\n      {/* Offline Queue Count */}\n      {offlinePosts.length > 0 && (\n        <Tooltip>\n          <TooltipTrigger asChild>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"h-8 px-2\"\n              onClick={() => {\n                // Navigate to offline reading queue page\n                // This would be implemented as a separate page\n                toast.info(`${offlinePosts.length} posts saved for offline reading`);\n              }}\n            >\n              <Bookmark className=\"h-4 w-4 mr-1\" />\n              {offlinePosts.length}\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent>View offline reading queue</TooltipContent>\n        </Tooltip>\n      )}\n    </div>\n  );\n}\n\nexport function ServiceWorkerUpdater({ \n  className \n}: { \n  className?: string;\n}): React.ReactElement | null {\n  const [showUpdatePrompt, setShowUpdatePrompt] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  useEffect(() => {\n    // Register service worker update listener\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.addEventListener('controllerchange', () => {\n        setShowUpdatePrompt(true);\n      });\n\n      // Check for waiting service worker\n      navigator.serviceWorker.getRegistration().then(registration => {\n        if (registration?.waiting) {\n          setShowUpdatePrompt(true);\n        }\n      });\n    }\n  }, []);\n\n  const handleUpdate = async () => {\n    if (!('serviceWorker' in navigator)) return;\n\n    setIsUpdating(true);\n\n    try {\n      const registration = await navigator.serviceWorker.getRegistration();\n      if (registration?.waiting) {\n        registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n      }\n      \n      // Reload page to get updated content\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    } catch (error) {\n      console.error('Failed to update app:', error);\n      setIsUpdating(false);\n    }\n  };\n\n  const handleDismiss = () => {\n    setShowUpdatePrompt(false);\n  };\n\n  if (!showUpdatePrompt) return null;\n\n  return (\n    <Card className={cn(\"fixed bottom-4 left-4 z-50 max-w-sm shadow-lg\", className)}>\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Reload className=\"h-5 w-5 text-primary\" />\n            <CardTitle className=\"text-base\">Update Available</CardTitle>\n          </div>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={handleDismiss}\n            className=\"h-6 w-6 p-0\"\n            aria-label=\"Dismiss\"\n          >\n            <X className=\"h-4 w-4\" />\n          </Button>\n        </div>\n        <CardDescription className=\"text-sm\">\n          A new version of the app is available with bug fixes and improvements.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"flex gap-2\">\n          <Button \n            onClick={handleUpdate} \n            className=\"flex-1\" \n            size=\"sm\"\n            disabled={isUpdating}\n          >\n            {isUpdating ? (\n              <>\n                <div className=\"h-4 w-4 mr-2 animate-spin rounded-full border-2 border-current border-t-transparent\" />\n                Updating...\n              </>\n            ) : (\n              <>\n                <Check className=\"h-4 w-4 mr-2\" />\n                Update\n              </>\n            )}\n          </Button>\n          <Button onClick={handleDismiss} variant=\"outline\" size=\"sm\">\n            Later\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Combined PWA Features Component\nexport function PWAFeatures({ className }: PWAFeaturesProps): React.ReactElement {\n  return (\n    <div className={cn(className)}>\n      <PWAInstallPrompt />\n      <OfflineIndicator />\n      <ServiceWorkerUpdater />\n    </div>\n  );\n}\n\nexport default {\n  PWAFeatures,\n  PWAInstallPrompt,\n  OfflineIndicator,\n  NotificationManager,\n  OfflineReadingQueue,\n  ServiceWorkerUpdater,\n};","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/PerformanceDashboard/PerformanceDashboard.tsx","messages":[{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":20,"column":67,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":211,"endColumn":2},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":38,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":38,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1247,1308],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"consistent-return","severity":2,"message":"Arrow function expected no return value.","line":50,"column":5,"nodeType":"ReturnStatement","messageId":"unexpectedReturnValue","endLine":50,"endColumn":42},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","line":76,"column":47,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSingleBlock","endLine":78,"endColumn":4,"fix":{"range":[2197,2245],"text":"passed ? '#22c55e' : '#ef4444'"}},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":93,"column":5,"nodeType":"JSXOpeningElement","endLine":108,"endColumn":6},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":93,"column":5,"nodeType":"JSXOpeningElement","endLine":108,"endColumn":6},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":116,"column":27,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":120,"endColumn":28},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'jsx' found","line":203,"column":14,"nodeType":"JSXAttribute","messageId":"unknownProp","endLine":203,"endColumn":17},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":230,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":230,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[7068,7127],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { checkPerformanceBudgets } from '../PerformanceMonitor/PerformanceMonitor';\n\ninterface PerformanceMetrics {\n  lcp: { value: number; budget: number; passed: boolean };\n  inp: { value: number; budget: number; passed: boolean };\n  cls: { value: number; budget: number; passed: boolean };\n}\n\ninterface PerformanceDashboardProps {\n  enabled?: boolean;\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  collapsed?: boolean;\n}\n\n/**\n * Performance Dashboard - Real-time Core Web Vitals monitoring\n * Only visible in development mode by default\n */\nconst PerformanceDashboard: React.FC<PerformanceDashboardProps> = ({\n  enabled = process.env.NODE_ENV === 'development',\n  position = 'bottom-right',\n  collapsed = true,\n}) => {\n  const [metrics, setMetrics] = useState<PerformanceMetrics | null>(null);\n  const [isCollapsed, setIsCollapsed] = useState(collapsed);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!enabled) return;\n\n    const updateMetrics = async () => {\n      setIsLoading(true);\n      try {\n        const budgetResults = await checkPerformanceBudgets();\n        setMetrics(budgetResults);\n      } catch (error) {\n        console.error('Failed to check performance budgets:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Initial load\n    updateMetrics();\n\n    // Update metrics every 10 seconds\n    const interval = setInterval(updateMetrics, 10000);\n\n    return () => clearInterval(interval);\n  }, [enabled]);\n\n  if (!enabled) return null;\n\n  const getPositionStyles = () => {\n    const base = {\n      position: 'fixed' as const,\n      zIndex: 9999,\n      fontSize: '12px',\n      fontFamily: 'monospace',\n    };\n\n    switch (position) {\n      case 'top-left':\n        return { ...base, top: '20px', left: '20px' };\n      case 'top-right':\n        return { ...base, top: '20px', right: '20px' };\n      case 'bottom-left':\n        return { ...base, bottom: '20px', left: '20px' };\n      case 'bottom-right':\n      default:\n        return { ...base, bottom: '20px', right: '20px' };\n    }\n  };\n\n  const getMetricColor = (passed: boolean) => {\n    return passed ? '#22c55e' : '#ef4444';\n  };\n\n  const formatValue = (metric: string, value: number) => {\n    switch (metric) {\n      case 'lcp':\n      case 'inp':\n        return `${Math.round(value)}ms`;\n      case 'cls':\n        return value.toFixed(3);\n      default:\n        return value.toString();\n    }\n  };\n\n  return (\n    <div\n      style={{\n        ...getPositionStyles(),\n        background: 'rgba(0, 0, 0, 0.9)',\n        color: 'white',\n        padding: isCollapsed ? '8px 12px' : '12px 16px',\n        borderRadius: '6px',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.1)',\n        transition: 'all 0.3s ease',\n        cursor: 'pointer',\n        minWidth: isCollapsed ? 'auto' : '200px',\n      }}\n      onClick={() => setIsCollapsed(!isCollapsed)}\n      title={isCollapsed ? 'Click to expand performance metrics' : 'Click to collapse'}\n    >\n      {isCollapsed ? (\n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n          <div\n            style={{\n              width: '8px',\n              height: '8px',\n              borderRadius: '50%',\n              background: metrics\n                ? metrics.lcp.passed && metrics.inp.passed && metrics.cls.passed\n                  ? '#22c55e'\n                  : '#ef4444'\n                : '#6b7280',\n            }}\n          />\n          <span>Perf</span>\n          {isLoading && (\n            <div\n              style={{\n                width: '12px',\n                height: '12px',\n                border: '2px solid transparent',\n                borderTop: '2px solid white',\n                borderRadius: '50%',\n                animation: 'spin 1s linear infinite',\n              }}\n            />\n          )}\n        </div>\n      ) : (\n        <div>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '8px',\n              borderBottom: '1px solid rgba(255, 255, 255, 0.2)',\n              paddingBottom: '4px',\n            }}\n          >\n            <strong>Core Web Vitals</strong>\n            {isLoading && (\n              <div\n                style={{\n                  width: '12px',\n                  height: '12px',\n                  border: '2px solid transparent',\n                  borderTop: '2px solid white',\n                  borderRadius: '50%',\n                  animation: 'spin 1s linear infinite',\n                }}\n              />\n            )}\n          </div>\n\n          {metrics ? (\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <span>LCP:</span>\n                <span style={{ color: getMetricColor(metrics.lcp.passed) }}>\n                  {formatValue('lcp', metrics.lcp.value)}\n                </span>\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <span>INP:</span>\n                <span style={{ color: getMetricColor(metrics.inp.passed) }}>\n                  {formatValue('inp', metrics.inp.value)}\n                </span>\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <span>CLS:</span>\n                <span style={{ color: getMetricColor(metrics.cls.passed) }}>\n                  {formatValue('cls', metrics.cls.value)}\n                </span>\n              </div>\n              <div\n                style={{\n                  marginTop: '8px',\n                  paddingTop: '4px',\n                  borderTop: '1px solid rgba(255, 255, 255, 0.2)',\n                  fontSize: '10px',\n                  color: '#9ca3af',\n                }}\n              >\n                Click to collapse\n              </div>\n            </div>\n          ) : (\n            <div style={{ color: '#9ca3af' }}>Loading metrics...</div>\n          )}\n        </div>\n      )}\n\n      {/* CSS animations */}\n      <style jsx>{`\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default PerformanceDashboard;\n\n// Hook for using performance metrics in other components\nexport const usePerformanceMetrics = (interval: number = 10000) => {\n  const [metrics, setMetrics] = useState<PerformanceMetrics | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    const updateMetrics = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const budgetResults = await checkPerformanceBudgets();\n        setMetrics(budgetResults);\n      } catch (err) {\n        setError(err as Error);\n        console.error('Failed to check performance budgets:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    updateMetrics();\n    const intervalId = setInterval(updateMetrics, interval);\n\n    return () => clearInterval(intervalId);\n  }, [interval]);\n\n  return { metrics, isLoading, error };\n};","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/PerformanceMonitor/PerformanceMonitor.tsx","messages":[{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":18,"column":63,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":153,"endColumn":2},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":23,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":23,"endColumn":18},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":36,"column":23,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":36,"endColumn":116},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":37,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":37,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1145,1296],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":70,"column":9,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":80,"endColumn":10},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":74,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":74,"endColumn":27,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[2457,2651],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":87,"column":9,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":94,"endColumn":10},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":89,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":89,"endColumn":25,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[3004,3129],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":105,"column":9,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":112,"endColumn":10},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":108,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":108,"endColumn":25,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[3625,3744],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":127,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":127,"endColumn":18},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":131,"column":9,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":138,"endColumn":10},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","line":183,"column":7,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSingleBlock","endLine":225,"endColumn":2,"fix":{"range":[5904,6949],"text":"new Promise((resolve) => {\n    const budgets = {\n      lcp: 2500, // 2.5s\n      inp: 200,  // 200ms (INP replaces FID)\n      cls: 0.1,  // 0.1\n    };\n\n    const results = {\n      lcp: { value: 0, budget: budgets.lcp, passed: false },\n      inp: { value: 0, budget: budgets.inp, passed: false },\n      cls: { value: 0, budget: budgets.cls, passed: false },\n    };\n\n    let metricsCollected = 0;\n    const totalMetrics = 3;\n\n    const checkComplete = () => {\n      metricsCollected++;\n      if (metricsCollected === totalMetrics) {\n        resolve(results);\n      }\n    };\n\n    onLCP((metric) => {\n      results.lcp.value = metric.value;\n      results.lcp.passed = metric.value <= budgets.lcp;\n      checkComplete();\n    });\n\n    onINP((metric) => {\n      results.inp.value = metric.value;\n      results.inp.passed = metric.value <= budgets.inp;\n      checkComplete();\n    });\n\n    onCLS((metric) => {\n      results.cls.value = metric.value;\n      results.cls.passed = metric.value <= budgets.cls;\n      checkComplete();\n    });\n  })"}},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":201,"column":7,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":201,"endColumn":25}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useEffect } from 'react';\nimport { onCLS, onFCP, onLCP, onTTFB, onINP } from 'web-vitals';\n\ninterface PerformanceMetric {\n  name: string;\n  value: number;\n  delta: number;\n  rating: 'good' | 'needs-improvement' | 'poor';\n  navigationType: string;\n}\n\ninterface PerformanceMonitorProps {\n  enableAnalytics?: boolean;\n  reportToConsole?: boolean;\n  reportToAnalytics?: (metric: PerformanceMetric) => void;\n}\n\nconst PerformanceMonitor: React.FC<PerformanceMonitorProps> = ({\n  enableAnalytics = false,\n  reportToConsole = process.env.NODE_ENV === 'development',\n  reportToAnalytics,\n}) => {\n  useEffect(() => {\n    // Performance metrics tracking function\n    const handleMetric = (metric: any) => {\n      const performanceMetric: PerformanceMetric = {\n        name: metric.name,\n        value: metric.value,\n        delta: metric.delta,\n        rating: metric.rating,\n        navigationType: metric.navigationType || 'unknown',\n      };\n\n      // Console logging in development\n      if (reportToConsole) {\n        const color = metric.rating === 'good' ? 'green' : metric.rating === 'needs-improvement' ? 'orange' : 'red';\n        console.log(\n          `%c${metric.name}: ${Math.round(metric.value)}ms (${metric.rating})`,\n          `color: ${color}; font-weight: bold;`\n        );\n      }\n\n      // Custom analytics reporting\n      if (enableAnalytics && reportToAnalytics) {\n        reportToAnalytics(performanceMetric);\n      }\n\n      // Send to Google Analytics 4 if available\n      if (typeof window !== 'undefined' && (window as any).gtag && enableAnalytics) {\n        (window as any).gtag('event', metric.name, {\n          event_category: 'Web Vitals',\n          value: Math.round(metric.value),\n          custom_parameter_1: metric.rating,\n        });\n      }\n    };\n\n    // Register all Web Vitals metrics (web-vitals v5)\n    onCLS(handleMetric);\n    onFCP(handleMetric);\n    onLCP(handleMetric);\n    onTTFB(handleMetric);\n    \n    // INP (Interaction to Next Paint) - replacement for FID in v5\n    onINP(handleMetric);\n\n    // Layout shift prevention observer\n    if ('PerformanceObserver' in window) {\n      const clsObserver = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.entryType === 'layout-shift' && !(entry as any).hadRecentInput) {\n            const layoutShiftEntry = entry as any;\n            if (layoutShiftEntry.value > 0.1 && reportToConsole) {\n              console.warn(\n                `⚠️ Layout Shift detected: ${layoutShiftEntry.value.toFixed(4)}`,\n                layoutShiftEntry.sources?.map((source: any) => source.node) || []\n              );\n            }\n          }\n        }\n      });\n\n      clsObserver.observe({ type: 'layout-shift', buffered: true });\n\n      // Long task observer for performance issues\n      const longTaskObserver = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.duration > 50 && reportToConsole) {\n            console.warn(\n              `🐌 Long task detected: ${Math.round(entry.duration)}ms`,\n              entry.name\n            );\n          }\n        }\n      });\n\n      try {\n        longTaskObserver.observe({ type: 'longtask', buffered: true });\n      } catch (e) {\n        // Long task API not supported\n      }\n\n      // Resource timing observer for loading performance\n      const resourceObserver = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          const resource = entry as PerformanceResourceTiming;\n          if (resource.duration > 1000 && reportToConsole) {\n            console.warn(\n              `📦 Slow resource: ${resource.name} took ${Math.round(resource.duration)}ms`\n            );\n          }\n        }\n      });\n\n      resourceObserver.observe({ type: 'resource', buffered: true });\n\n      // Cleanup observers\n      return () => {\n        clsObserver.disconnect();\n        longTaskObserver.disconnect();\n        resourceObserver.disconnect();\n      };\n    }\n  }, [enableAnalytics, reportToConsole, reportToAnalytics]);\n\n  // CLS Prevention: Add stabilization for dynamic content\n  useEffect(() => {\n    // Add resize observer for dynamic content\n    if ('ResizeObserver' in window) {\n      const resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const element = entry.target as HTMLElement;\n          \n          // Add transition to prevent jarring layout shifts\n          if (!element.style.transition.includes('height')) {\n            element.style.transition = `${element.style.transition} height 0.2s ease-out`.trim();\n          }\n        }\n      });\n\n      // Observe common dynamic elements\n      const dynamicElements = document.querySelectorAll('[data-dynamic], .dynamic-content');\n      dynamicElements.forEach((element) => {\n        resizeObserver.observe(element);\n      });\n\n      return () => resizeObserver.disconnect();\n    }\n  }, []);\n\n  // No UI rendered - this is a monitoring component\n  return null;\n};\n\nexport default PerformanceMonitor;\n\n// Utility function for manual performance reporting\nexport const reportWebVitals = (reportToAnalytics?: (metric: PerformanceMetric) => void) => {\n  const handleMetric = (metric: any) => {\n    if (reportToAnalytics) {\n      reportToAnalytics({\n        name: metric.name,\n        value: metric.value,\n        delta: metric.delta,\n        rating: metric.rating,\n        navigationType: metric.navigationType || 'unknown',\n      });\n    }\n  };\n\n  onCLS(handleMetric);\n  onFCP(handleMetric);\n  onLCP(handleMetric);\n  onTTFB(handleMetric);\n  onINP(handleMetric);\n};\n\n// Performance budget checker\nexport const checkPerformanceBudgets = (): Promise<{\n  lcp: { value: number; budget: number; passed: boolean };\n  inp: { value: number; budget: number; passed: boolean };\n  cls: { value: number; budget: number; passed: boolean };\n}> => {\n  return new Promise((resolve) => {\n    const budgets = {\n      lcp: 2500, // 2.5s\n      inp: 200,  // 200ms (INP replaces FID)\n      cls: 0.1,  // 0.1\n    };\n\n    const results = {\n      lcp: { value: 0, budget: budgets.lcp, passed: false },\n      inp: { value: 0, budget: budgets.inp, passed: false },\n      cls: { value: 0, budget: budgets.cls, passed: false },\n    };\n\n    let metricsCollected = 0;\n    const totalMetrics = 3;\n\n    const checkComplete = () => {\n      metricsCollected++;\n      if (metricsCollected === totalMetrics) {\n        resolve(results);\n      }\n    };\n\n    onLCP((metric) => {\n      results.lcp.value = metric.value;\n      results.lcp.passed = metric.value <= budgets.lcp;\n      checkComplete();\n    });\n\n    onINP((metric) => {\n      results.inp.value = metric.value;\n      results.inp.passed = metric.value <= budgets.inp;\n      checkComplete();\n    });\n\n    onCLS((metric) => {\n      results.cls.value = metric.value;\n      results.cls.passed = metric.value <= budgets.cls;\n      checkComplete();\n    });\n  });\n};","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/PostListing/PostListing.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'PostEdge' is defined but never used.","line":7,"column":36,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":44}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useMemo } from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport { cn } from \"../../lib/utils\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"../ui/card\";\nimport { Badge } from \"../ui/badge\";\nimport { EnhancedPostListingProps, PostEdge } from \"../../models\";\nimport { formatReadingTime, formatRelativeDate } from \"../../services/relatedPostsUtils\";\n\ninterface Post {\n  path: string;\n  tags: string[];\n  cover: string;\n  title: string;\n  thumbnail?: any;\n  date: string;\n  excerpt: string;\n  timeToRead: number;\n  isdev: boolean;\n}\n\nfunction PostListing({\n  postEdges,\n  expanded = false,\n  simple = false,\n  showExcerpt = true,\n  showTags = true,\n  showReadingTime = true,\n  className,\n}: EnhancedPostListingProps): React.ReactElement {\n  const postList: Post[] = useMemo(\n    () =>\n      postEdges.map((postEdge) => ({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        thumbnail: postEdge.node.frontmatter.thumbnail,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n        isdev: postEdge.node.frontmatter.isdev,\n      })),\n    [postEdges],\n  );\n\n  if (simple) {\n    // Simple layout for minimal display\n    return (\n      <div className={cn(\"space-y-4\", className)}>\n        {postList.map((post) => {\n          let thumbnail;\n          if (post.thumbnail && post.thumbnail.childImageSharp) {\n            thumbnail = getImage(post.thumbnail.childImageSharp.gatsbyImageData);\n          }\n\n          return (\n            <Link\n              to={post.path}\n              key={post.title}\n              className=\"block hover:opacity-80 transition-opacity\"\n            >\n              <div className=\"flex items-center gap-4 md:gap-6\">\n                <div className=\"flex-shrink-0 w-12 h-12 md:w-16 md:h-16 flex items-center justify-center\">\n                  {thumbnail ? (\n                    <GatsbyImage\n                      image={thumbnail}\n                      alt=\"\"\n                      className=\"w-12 h-12 md:w-16 md:h-16 object-cover rounded-md\"\n                    />\n                  ) : (\n                    <div className=\"w-12 h-12 md:w-16 md:h-16 bg-muted rounded-md flex items-center justify-center\">\n                      <span className=\"text-muted-foreground text-base md:text-lg\">\n                        📄\n                      </span>\n                    </div>\n                  )}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <h2 className=\"text-sm md:text-base font-medium text-foreground hover:text-primary hover:underline transition-all leading-snug line-clamp-2\">\n                    {post.title}\n                  </h2>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    );\n  }\n\n  // Enhanced card layout with metadata\n  return (\n    <div className={cn(\"space-y-6\", className)}>\n      {postList.map((post) => {\n        let thumbnail;\n        if (post.thumbnail && post.thumbnail.childImageSharp) {\n          thumbnail = getImage(post.thumbnail.childImageSharp.gatsbyImageData);\n        }\n\n        return (\n          <Link\n            to={post.path}\n            key={post.title}\n            className=\"block transition-transform hover:scale-[1.01]\"\n          >\n            <Card className=\"hover:shadow-lg transition-shadow\">\n              <div className={cn(\n                \"flex gap-6 p-6\",\n                expanded ? \"flex-col sm:flex-row\" : \"flex-row\"\n              )}>\n                <div className=\"flex-shrink-0\">\n                  {thumbnail ? (\n                    <GatsbyImage\n                      image={thumbnail}\n                      alt=\"\"\n                      className={cn(\n                        \"object-cover rounded-lg\",\n                        expanded ? \"w-full h-48 sm:w-32 sm:h-32\" : \"w-20 h-20\"\n                      )}\n                    />\n                  ) : (\n                    <div className={cn(\n                      \"bg-muted rounded-lg flex items-center justify-center\",\n                      expanded ? \"w-full h-48 sm:w-32 sm:h-32\" : \"w-20 h-20\"\n                    )}>\n                      <span className=\"text-muted-foreground text-2xl\">📄</span>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"flex-1 min-w-0 space-y-3\">\n                  <CardHeader className=\"p-0 space-y-2\">\n                    <CardTitle className=\"text-xl font-bold hover:text-primary transition-colors line-clamp-2\">\n                      {post.title}\n                    </CardTitle>\n                    \n                    <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                      <span>{formatRelativeDate(post.date)}</span>\n                      {showReadingTime && (\n                        <>\n                          <span>•</span>\n                          <span>{formatReadingTime(post.timeToRead)}</span>\n                        </>\n                      )}\n                    </div>\n                  </CardHeader>\n                  \n                  {showExcerpt && (\n                    <CardContent className=\"p-0\">\n                      <CardDescription className={cn(\n                        \"text-sm\",\n                        expanded ? \"line-clamp-4\" : \"line-clamp-2\"\n                      )}>\n                        {post.excerpt}\n                      </CardDescription>\n                    </CardContent>\n                  )}\n                  \n                  {showTags && post.tags.length > 0 && (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {post.tags.slice(0, expanded ? 8 : 4).map((tag) => (\n                        <Badge\n                          key={tag}\n                          variant=\"secondary\"\n                          className=\"text-xs hover:bg-primary/20 transition-colors\"\n                        >\n                          {tag}\n                        </Badge>\n                      ))}\n                      {post.tags.length > (expanded ? 8 : 4) && (\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          +{post.tags.length - (expanded ? 8 : 4)} more\n                        </Badge>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </Card>\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PostListing;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/PostListing/PostListingNew.tsx","messages":[{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/card\"","line":3,"column":75,"nodeType":"Literal","endLine":3,"endColumn":97},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/badge\"","line":4,"column":23,"nodeType":"Literal","endLine":4,"endColumn":46}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useMemo } from \"react\";\nimport { Link } from \"gatsby\";\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface PostEdge {\n  node: {\n    fields: {\n      slug: string;\n      date: string;\n    };\n    frontmatter: {\n      title: string;\n      tags: string[];\n    };\n    excerpt: string;\n    timeToRead: number;\n  };\n}\n\ninterface PostListingProps {\n  postEdges: PostEdge[];\n}\n\nconst PostListingNew = React.memo(({ postEdges }: PostListingProps): React.ReactElement => {\n  const postList = useMemo(\n    () =>\n      postEdges.map((postEdge) => ({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n      })),\n    [postEdges],\n  );\n\n  return (\n    <div className=\"space-y-4\">\n      {postList.map((post) => (\n        <Link to={post.path} key={post.title} className=\"block\">\n          <Card className=\"hover:shadow-lg transition-all duration-300 hover:scale-[1.02]\">\n            <CardHeader>\n              <CardTitle className=\"text-xl\">{post.title}</CardTitle>\n              <CardDescription>{post.excerpt}</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between mb-2 text-sm text-muted-foreground\">\n                <time dateTime={post.date}>\n                  {new Date(post.date).toLocaleDateString()}\n                </time>\n                <span>{post.timeToRead} min read</span>\n              </div>\n              <div className=\"flex flex-wrap gap-2\">\n                {post.tags?.map((tag) => (\n                  <Badge key={tag} variant=\"secondary\">\n                    {tag}\n                  </Badge>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </Link>\n      ))}\n    </div>\n  );\n});\n\nexport default PostListingNew;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/PostNavigation/PostNavigation.tsx","messages":[{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":55,"column":11,"nodeType":"JSXOpeningElement","messageId":"notSelfClosing","endLine":55,"endColumn":16,"fix":{"range":[1989,1996],"text":" />"}},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":95,"column":11,"nodeType":"JSXOpeningElement","messageId":"notSelfClosing","endLine":95,"endColumn":16,"fix":{"range":[3563,3570],"text":" />"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { cn } from \"../../lib/utils\";\nimport { Button } from \"../ui/button\";\nimport { Card, CardContent } from \"../ui/card\";\nimport { PostNavigationProps } from \"../../models\";\n\nfunction PostNavigation({ \n  previous, \n  next, \n  className \n}: PostNavigationProps): React.ReactElement | null {\n  if (!previous && !next) {\n    return null;\n  }\n\n  return (\n    <nav className={cn(\"grid gap-4 md:grid-cols-2\", className)}>\n      <div className=\"flex\">\n        {previous ? (\n          <Link to={previous.slug} className=\"w-full\">\n            <Card className=\"h-full hover:shadow-md transition-shadow\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"flex-shrink-0\">\n                    <Button variant=\"outline\" size=\"icon\" className=\"h-8 w-8\">\n                      <svg\n                        className=\"h-4 w-4\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M15 19l-7-7 7-7\"\n                        />\n                      </svg>\n                    </Button>\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"text-xs text-muted-foreground uppercase tracking-wide font-medium mb-1\">\n                      Previous Post\n                    </div>\n                    <div className=\"text-sm font-medium text-foreground hover:text-primary transition-colors line-clamp-2\">\n                      {previous.title}\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </Link>\n        ) : (\n          <div></div> // Empty div to maintain grid layout\n        )}\n      </div>\n\n      <div className=\"flex\">\n        {next ? (\n          <Link to={next.slug} className=\"w-full\">\n            <Card className=\"h-full hover:shadow-md transition-shadow\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"flex-1 min-w-0 text-right\">\n                    <div className=\"text-xs text-muted-foreground uppercase tracking-wide font-medium mb-1\">\n                      Next Post\n                    </div>\n                    <div className=\"text-sm font-medium text-foreground hover:text-primary transition-colors line-clamp-2\">\n                      {next.title}\n                    </div>\n                  </div>\n                  <div className=\"flex-shrink-0\">\n                    <Button variant=\"outline\" size=\"icon\" className=\"h-8 w-8\">\n                      <svg\n                        className=\"h-4 w-4\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M9 5l7 7-7 7\"\n                        />\n                      </svg>\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </Link>\n        ) : (\n          <div></div> // Empty div to maintain grid layout\n        )}\n      </div>\n    </nav>\n  );\n}\n\nexport default PostNavigation;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/PostTags/PostTags.tsx","messages":[{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/badge\"","line":4,"column":23,"nodeType":"Literal","endLine":4,"endColumn":46}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Link } from \"gatsby\";\nimport kebabCase from \"lodash.kebabcase\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface PostTagsProps {\n  tags: string[];\n}\n\nfunction PostTags({ tags }: PostTagsProps): React.ReactElement {\n  return (\n    <div className=\"flex flex-wrap gap-1.5 sm:gap-2\">\n      {tags &&\n        tags.map((tag) => (\n          <Link\n            key={tag}\n            to={`/tags/${kebabCase(tag)}`}\n            className=\"no-underline\"\n          >\n            <Badge \n              variant=\"secondary\" \n              className=\"hover:bg-primary hover:text-primary-foreground transition-colors cursor-pointer\"\n            >\n              {tag}\n            </Badge>\n          </Link>\n        ))}\n    </div>\n  );\n}\n\nexport default PostTags;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ProjectListing/ProjectListing.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'CardContent' is defined but never used.","line":4,"column":56,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":67}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport GitHubButton from \"../GitHubButton/GitHubButton\";\nimport { Project } from \"../../models\";\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from \"../ui/card\";\n\ninterface ProjectListingProps {\n  projects: Project[];\n}\n\nfunction ProjectListing({ projects }: ProjectListingProps): React.ReactElement {\n  return (\n    <div className=\"grid gap-4 sm:gap-6 sm:grid-cols-1 lg:grid-cols-2\">\n      {projects.map((project) => (\n        <Card key={project.title}>\n          <CardHeader>\n            <CardTitle className=\"text-xl\">\n              <a\n                className=\"flex items-center gap-3 text-foreground hover:text-primary transition-colors\"\n                href={project.path}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <span className=\"text-2xl\">{project.icon}</span>\n                <span>{project.title}</span>\n              </a>\n            </CardTitle>\n            <CardDescription className=\"leading-relaxed\">\n              {project.description}\n            </CardDescription>\n          </CardHeader>\n          <CardFooter>\n            <div className=\"flex gap-3\">\n              <GitHubButton\n                href={project.source}\n                data-size=\"large\"\n                data-show-count=\"true\"\n                className=\"bg-secondary text-secondary-foreground hover:bg-secondary/80 transition-colors px-4 py-2 rounded-md border border-input\"\n              >\n                Source\n              </GitHubButton>\n              {project.path && (\n                <a\n                  className=\"bg-primary text-primary-foreground hover:bg-primary/90 transition-colors px-4 py-2 rounded-md font-medium\"\n                  href={project.path}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  View\n                </a>\n              )}\n            </div>\n          </CardFooter>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default ProjectListing;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ReadingExperience/ReadingExperience.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":15,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Palette' is defined but never used.","line":14,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":10},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/button\"","line":16,"column":24,"nodeType":"Literal","endLine":16,"endColumn":48},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/tooltip\"","line":21,"column":8,"nodeType":"Literal","endLine":21,"endColumn":33},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/sheet\"","line":28,"column":8,"nodeType":"Literal","endLine":28,"endColumn":31},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":29,"column":20,"nodeType":"Literal","endLine":29,"endColumn":33},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":85,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":85,"endColumn":19,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[2125,2184],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":19,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[2637,2696],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":320,"column":17,"nodeType":"JSXOpeningElement","endLine":320,"endColumn":67},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":348,"column":17,"nodeType":"JSXOpeningElement","endLine":348,"endColumn":67},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":376,"column":17,"nodeType":"JSXOpeningElement","endLine":376,"endColumn":67},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":395,"column":17,"nodeType":"JSXOpeningElement","endLine":395,"endColumn":67},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'jsx' found","line":432,"column":14,"nodeType":"JSXAttribute","messageId":"unknownProp","endLine":432,"endColumn":17},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'global' found","line":432,"column":18,"nodeType":"JSXAttribute","messageId":"unknownProp","endLine":432,"endColumn":24}],"suppressedMessages":[],"errorCount":12,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback } from \"react\";\nimport { \n  BookOpen,\n  Type, \n  Volume2,\n  VolumeX,\n  Printer,\n  Download,\n  Eye,\n  EyeOff,\n  Settings,\n  Minus,\n  Plus,\n  Palette\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { \n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger\n} from \"@/components/ui/sheet\";\nimport { cn } from \"@/lib/utils\";\nimport { useTheme } from \"../../context/ThemeContext\";\n\ninterface ReadingPreferences {\n  fontSize: number;\n  lineHeight: number;\n  fontFamily: string;\n  readingWidth: 'narrow' | 'normal' | 'wide';\n  readingMode: boolean;\n  dyslexicFont: boolean;\n}\n\ninterface ReadingExperienceProps {\n  articleId?: string;\n  className?: string;\n}\n\nconst fontFamilies = [\n  { name: 'Inter', value: 'font-sans', label: 'Sans Serif' },\n  { name: 'Georgia', value: 'font-serif', label: 'Serif' },\n  { name: 'JetBrains Mono', value: 'font-mono', label: 'Monospace' },\n];\n\nconst widthOptions = [\n  { name: 'narrow', label: 'Narrow', maxWidth: '65ch' },\n  { name: 'normal', label: 'Normal', maxWidth: '75ch' },\n  { name: 'wide', label: 'Wide', maxWidth: '100ch' },\n] as const;\n\nexport function ReadingExperience({ \n  articleId,\n  className \n}: ReadingExperienceProps): React.ReactElement {\n  const [preferences, setPreferences] = useState<ReadingPreferences>({\n    fontSize: 16,\n    lineHeight: 1.6,\n    fontFamily: 'font-sans',\n    readingWidth: 'normal',\n    readingMode: false,\n    dyslexicFont: false,\n  });\n  \n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isPreferencesOpen, setIsPreferencesOpen] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const { resolvedTheme } = useTheme();\n\n  // Load preferences from localStorage on mount\n  useEffect(() => {\n    try {\n      const saved = localStorage.getItem('reading-preferences');\n      if (saved) {\n        const parsed = JSON.parse(saved);\n        setPreferences(prev => ({ ...prev, ...parsed }));\n      }\n    } catch (error) {\n      console.warn('Failed to load reading preferences:', error);\n    }\n\n    // Check speech synthesis support\n    setSpeechSupported('speechSynthesis' in window);\n  }, []);\n\n  // Save preferences to localStorage\n  const updatePreferences = useCallback((updates: Partial<ReadingPreferences>) => {\n    const newPreferences = { ...preferences, ...updates };\n    setPreferences(newPreferences);\n    \n    try {\n      localStorage.setItem('reading-preferences', JSON.stringify(newPreferences));\n    } catch (error) {\n      console.warn('Failed to save reading preferences:', error);\n    }\n  }, [preferences]);\n\n  // Apply CSS custom properties for reading preferences\n  useEffect(() => {\n    const root = document.documentElement;\n    \n    root.style.setProperty('--reading-font-size', `${preferences.fontSize}px`);\n    root.style.setProperty('--reading-line-height', `${preferences.lineHeight}`);\n    root.style.setProperty('--reading-width', widthOptions.find(w => w.name === preferences.readingWidth)?.maxWidth || '75ch');\n    \n    // Toggle reading mode class\n    if (preferences.readingMode) {\n      document.body.classList.add('reading-mode');\n    } else {\n      document.body.classList.remove('reading-mode');\n    }\n    \n    // Apply font family to article content\n    const articleContent = articleId ? document.getElementById(articleId) : null;\n    if (articleContent) {\n      articleContent.className = cn(\n        articleContent.className,\n        preferences.fontFamily,\n        preferences.dyslexicFont && 'dyslexic-font'\n      );\n    }\n  }, [preferences, articleId]);\n\n  // Text-to-speech functionality\n  const handleTextToSpeech = useCallback(() => {\n    if (!speechSupported) return;\n\n    if (isSpeaking) {\n      window.speechSynthesis.cancel();\n      setIsSpeaking(false);\n      return;\n    }\n\n    const content = articleId \n      ? document.getElementById(articleId)?.textContent\n      : document.querySelector('article')?.textContent || document.querySelector('main')?.textContent;\n    \n    if (!content) return;\n\n    const utterance = new SpeechSynthesisUtterance(content);\n    utterance.rate = 0.9;\n    utterance.pitch = 1;\n    \n    utterance.onstart = () => setIsSpeaking(true);\n    utterance.onend = () => setIsSpeaking(false);\n    utterance.onerror = () => setIsSpeaking(false);\n\n    window.speechSynthesis.speak(utterance);\n  }, [speechSupported, isSpeaking, articleId]);\n\n  // Print functionality\n  const handlePrint = useCallback(() => {\n    // Apply print-friendly styles temporarily\n    document.body.classList.add('print-mode');\n    \n    setTimeout(() => {\n      window.print();\n      document.body.classList.remove('print-mode');\n    }, 100);\n  }, []);\n\n  // Export functionality (simplified - could be enhanced for different formats)\n  const handleExport = useCallback(() => {\n    const content = articleId \n      ? document.getElementById(articleId)?.innerHTML\n      : document.querySelector('article')?.innerHTML || '';\n    \n    if (!content) return;\n\n    const blob = new Blob([`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Exported Article</title>\n          <style>\n            body { font-family: system-ui, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; line-height: 1.6; }\n            h1, h2, h3, h4, h5, h6 { margin-top: 2em; margin-bottom: 1em; }\n            p { margin-bottom: 1em; }\n            code { background: #f4f4f4; padding: 2px 4px; border-radius: 3px; }\n            pre { background: #f4f4f4; padding: 1em; border-radius: 6px; overflow-x: auto; }\n          </style>\n        </head>\n        <body>\n          ${content}\n        </body>\n      </html>\n    `], { type: 'text/html' });\n    \n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'article.html';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [articleId]);\n\n  return (\n    <>\n      <div className={cn(\"flex items-center gap-1\", className)}>\n        {/* Reading Mode Toggle */}\n        <Tooltip>\n          <TooltipTrigger asChild>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => updatePreferences({ readingMode: !preferences.readingMode })}\n              className={cn(\n                \"h-8 w-8 p-0\",\n                preferences.readingMode && \"bg-accent\"\n              )}\n              aria-label=\"Toggle reading mode\"\n            >\n              {preferences.readingMode ? (\n                <EyeOff className=\"h-4 w-4\" />\n              ) : (\n                <Eye className=\"h-4 w-4\" />\n              )}\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent>\n            {preferences.readingMode ? \"Exit reading mode\" : \"Enter reading mode\"}\n          </TooltipContent>\n        </Tooltip>\n\n        {/* Text-to-Speech */}\n        {speechSupported && (\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={handleTextToSpeech}\n                className={cn(\n                  \"h-8 w-8 p-0\",\n                  isSpeaking && \"bg-accent\"\n                )}\n                aria-label={isSpeaking ? \"Stop reading\" : \"Read aloud\"}\n              >\n                {isSpeaking ? (\n                  <VolumeX className=\"h-4 w-4\" />\n                ) : (\n                  <Volume2 className=\"h-4 w-4\" />\n                )}\n              </Button>\n            </TooltipTrigger>\n            <TooltipContent>\n              {isSpeaking ? \"Stop reading\" : \"Read aloud\"}\n            </TooltipContent>\n          </Tooltip>\n        )}\n\n        {/* Print */}\n        <Tooltip>\n          <TooltipTrigger asChild>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handlePrint}\n              className=\"h-8 w-8 p-0\"\n              aria-label=\"Print article\"\n            >\n              <Printer className=\"h-4 w-4\" />\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent>Print article</TooltipContent>\n        </Tooltip>\n\n        {/* Export */}\n        <Tooltip>\n          <TooltipTrigger asChild>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleExport}\n              className=\"h-8 w-8 p-0\"\n              aria-label=\"Export article\"\n            >\n              <Download className=\"h-4 w-4\" />\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent>Export article</TooltipContent>\n        </Tooltip>\n\n        {/* Reading Preferences */}\n        <Sheet open={isPreferencesOpen} onOpenChange={setIsPreferencesOpen}>\n          <SheetTrigger asChild>\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"h-8 w-8 p-0\"\n                  aria-label=\"Reading preferences\"\n                >\n                  <Settings className=\"h-4 w-4\" />\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent>Reading preferences</TooltipContent>\n            </Tooltip>\n          </SheetTrigger>\n          <SheetContent>\n            <SheetHeader>\n              <SheetTitle className=\"flex items-center gap-2\">\n                <BookOpen className=\"h-5 w-5\" />\n                Reading Preferences\n              </SheetTitle>\n            </SheetHeader>\n            \n            <div className=\"mt-6 space-y-6\">\n              {/* Font Size */}\n              <div>\n                <label className=\"text-sm font-medium mb-3 block\">Font Size</label>\n                <div className=\"flex items-center gap-3\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => updatePreferences({ fontSize: Math.max(12, preferences.fontSize - 2) })}\n                    disabled={preferences.fontSize <= 12}\n                    className=\"h-8 w-8 p-0\"\n                  >\n                    <Minus className=\"h-4 w-4\" />\n                  </Button>\n                  <span className=\"min-w-[3rem] text-center text-sm\">\n                    {preferences.fontSize}px\n                  </span>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => updatePreferences({ fontSize: Math.min(24, preferences.fontSize + 2) })}\n                    disabled={preferences.fontSize >= 24}\n                    className=\"h-8 w-8 p-0\"\n                  >\n                    <Plus className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              {/* Line Height */}\n              <div>\n                <label className=\"text-sm font-medium mb-3 block\">Line Height</label>\n                <div className=\"flex items-center gap-3\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => updatePreferences({ lineHeight: Math.max(1.2, preferences.lineHeight - 0.1) })}\n                    disabled={preferences.lineHeight <= 1.2}\n                    className=\"h-8 w-8 p-0\"\n                  >\n                    <Minus className=\"h-4 w-4\" />\n                  </Button>\n                  <span className=\"min-w-[3rem] text-center text-sm\">\n                    {preferences.lineHeight.toFixed(1)}\n                  </span>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => updatePreferences({ lineHeight: Math.min(2.0, preferences.lineHeight + 0.1) })}\n                    disabled={preferences.lineHeight >= 2.0}\n                    className=\"h-8 w-8 p-0\"\n                  >\n                    <Plus className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              {/* Font Family */}\n              <div>\n                <label className=\"text-sm font-medium mb-3 block\">Font Family</label>\n                <div className=\"grid grid-cols-1 gap-2\">\n                  {fontFamilies.map(font => (\n                    <Button\n                      key={font.value}\n                      variant={preferences.fontFamily === font.value ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      onClick={() => updatePreferences({ fontFamily: font.value })}\n                      className=\"justify-start\"\n                    >\n                      <Type className=\"h-4 w-4 mr-2\" />\n                      {font.label}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Reading Width */}\n              <div>\n                <label className=\"text-sm font-medium mb-3 block\">Reading Width</label>\n                <div className=\"grid grid-cols-1 gap-2\">\n                  {widthOptions.map(width => (\n                    <Button\n                      key={width.name}\n                      variant={preferences.readingWidth === width.name ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      onClick={() => updatePreferences({ readingWidth: width.name })}\n                      className=\"justify-start\"\n                    >\n                      {width.label}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Reset to Defaults */}\n              <Button\n                variant=\"outline\"\n                onClick={() => updatePreferences({\n                  fontSize: 16,\n                  lineHeight: 1.6,\n                  fontFamily: 'font-sans',\n                  readingWidth: 'normal',\n                  readingMode: false,\n                  dyslexicFont: false,\n                })}\n                className=\"w-full\"\n              >\n                Reset to Defaults\n              </Button>\n            </div>\n          </SheetContent>\n        </Sheet>\n      </div>\n\n      {/* Global styles for reading mode */}\n      <style jsx global>{`\n        .reading-mode {\n          --tw-bg-opacity: 1 !important;\n          background-color: ${resolvedTheme === 'dark' ? '#1a1a1a' : '#fafafa'} !important;\n        }\n        \n        .reading-mode .navbar,\n        .reading-mode .sidebar,\n        .reading-mode .footer,\n        .reading-mode .reading-mode-hide {\n          display: none !important;\n        }\n        \n        .reading-mode main {\n          max-width: var(--reading-width) !important;\n          margin: 0 auto !important;\n          padding: 2rem !important;\n        }\n        \n        .reading-mode article {\n          font-size: var(--reading-font-size) !important;\n          line-height: var(--reading-line-height) !important;\n        }\n        \n        .print-mode * {\n          color: black !important;\n          background: white !important;\n        }\n        \n        .print-mode .navbar,\n        .print-mode .sidebar,\n        .print-mode .footer,\n        .print-mode .reading-controls {\n          display: none !important;\n        }\n      `}</style>\n    </>\n  );\n}\n\nexport default ReadingExperience;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ReadingProgress/ReadingProgress.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/RelatedContentSidebar/RelatedContentSidebar.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":8,"endColumn":23},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/button\"","line":9,"column":24,"nodeType":"Literal","endLine":9,"endColumn":48},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/badge\"","line":10,"column":23,"nodeType":"Literal","endLine":10,"endColumn":46},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":11,"column":20,"nodeType":"Literal","endLine":11,"endColumn":33},{"ruleId":"import/order","severity":2,"message":"`gatsby` import should occur before import of `@/components/ui/button`","line":12,"column":1,"nodeType":"ImportDeclaration","endLine":12,"endColumn":60,"fix":{"range":[132,322],"text":"import { useStaticQuery, graphql, navigate } from \"gatsby\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { cn } from \"@/lib/utils\";\n"}},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","line":88,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSingleBlock","endLine":93,"endColumn":4,"fix":{"range":[2230,2388],"text":"data.posts.edges\n      .map(({ node }: any) => node)\n      .filter((post: any) => post.fields.slug !== currentPost?.slug)\n      .slice(0, 5)"}},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":121,"column":15,"nodeType":"JSXOpeningElement","endLine":125,"endColumn":16},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":121,"column":15,"nodeType":"JSXOpeningElement","endLine":125,"endColumn":16},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":152,"column":13,"nodeType":"JSXOpeningElement","endLine":156,"endColumn":14},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":152,"column":13,"nodeType":"JSXOpeningElement","endLine":156,"endColumn":14}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React, { useMemo } from \"react\";\nimport { \n  Sparkles,\n  Clock,\n  TrendingUp,\n  Archive,\n  ArrowRight\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { cn } from \"@/lib/utils\";\nimport { useStaticQuery, graphql, navigate } from \"gatsby\";\n\ninterface RelatedContentSidebarProps {\n  currentPost?: {\n    slug: string;\n    tags: string[];\n    category?: string;\n  };\n  className?: string;\n}\n\nexport function RelatedContentSidebar({ \n  currentPost,\n  className \n}: RelatedContentSidebarProps): React.ReactElement {\n  const data = useStaticQuery(graphql`\n    query RelatedContentQuery {\n      posts: allMarkdownRemark(\n        sort: { fields: { date: DESC } }\n        filter: { frontmatter: { type: { eq: \"post\" } } }\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n              date\n            }\n            frontmatter {\n              title\n              category\n              tags\n            }\n            excerpt(pruneLength: 80)\n            timeToRead\n          }\n        }\n      }\n    }\n  `);\n\n  const relatedPosts = useMemo(() => {\n    if (!currentPost) return [];\n\n    const allPosts = data.posts.edges\n      .map(({ node }: any) => node)\n      .filter((post: any) => post.fields.slug !== currentPost.slug);\n\n    // Calculate similarity scores\n    const postsWithScores = allPosts.map((post: any) => {\n      let score = 0;\n\n      // Category match (high weight)\n      if (post.frontmatter.category && post.frontmatter.category === currentPost.category) {\n        score += 10;\n      }\n\n      // Tag matches (medium weight)\n      const commonTags = post.frontmatter.tags?.filter((tag: string) => \n        currentPost.tags.includes(tag)\n      ) || [];\n      score += commonTags.length * 5;\n\n      // Recency boost (low weight)\n      const daysSincePost = Math.floor(\n        (Date.now() - new Date(post.fields.date).getTime()) / (1000 * 60 * 60 * 24)\n      );\n      score += Math.max(0, 30 - daysSincePost) * 0.1;\n\n      return { ...post, score };\n    });\n\n    return postsWithScores\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n  }, [data, currentPost]);\n\n  const recentPosts = useMemo(() => {\n    return data.posts.edges\n      .map(({ node }: any) => node)\n      .filter((post: any) => post.fields.slug !== currentPost?.slug)\n      .slice(0, 5);\n  }, [data, currentPost]);\n\n  const trendingTags = useMemo(() => {\n    const tagCounts: Record<string, number> = {};\n    \n    data.posts.edges.forEach(({ node }: any) => {\n      node.frontmatter.tags?.forEach((tag: string) => {\n        tagCounts[tag] = (tagCounts[tag] || 0) + 1;\n      });\n    });\n\n    return Object.entries(tagCounts)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 10)\n      .map(([tag, count]) => ({ tag, count }));\n  }, [data]);\n\n  return (\n    <aside className={cn(\"space-y-6\", className)}>\n      {/* Related Posts */}\n      {currentPost && relatedPosts.length > 0 && (\n        <div className=\"bg-card border border-border rounded-lg p-4\">\n          <h3 className=\"font-semibold mb-4 flex items-center gap-2\">\n            <Sparkles className=\"h-4 w-4 text-primary\" />\n            Related Posts\n          </h3>\n          <div className=\"space-y-3\">\n            {relatedPosts.map((post: any) => (\n              <div\n                key={post.fields.slug}\n                className=\"group cursor-pointer\"\n                onClick={() => navigate(post.fields.slug)}\n              >\n                <h4 className=\"font-medium text-sm mb-1 group-hover:text-primary transition-colors line-clamp-2\">\n                  {post.frontmatter.title}\n                </h4>\n                <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                  <Clock className=\"h-3 w-3\" />\n                  {post.timeToRead} min read\n                  <span>•</span>\n                  {new Date(post.fields.date).toLocaleDateString('en-US', {\n                    month: 'short',\n                    day: 'numeric'\n                  })}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Recent Posts */}\n      <div className=\"bg-card border border-border rounded-lg p-4\">\n        <h3 className=\"font-semibold mb-4 flex items-center gap-2\">\n          <Clock className=\"h-4 w-4 text-primary\" />\n          Recent Posts\n        </h3>\n        <div className=\"space-y-3\">\n          {recentPosts.map((post: any) => (\n            <div\n              key={post.fields.slug}\n              className=\"group cursor-pointer\"\n              onClick={() => navigate(post.fields.slug)}\n            >\n              <h4 className=\"font-medium text-sm mb-1 group-hover:text-primary transition-colors line-clamp-2\">\n                {post.frontmatter.title}\n              </h4>\n              <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                <Clock className=\"h-3 w-3\" />\n                {post.timeToRead} min read\n                <span>•</span>\n                {new Date(post.fields.date).toLocaleDateString('en-US', {\n                  month: 'short',\n                  day: 'numeric'\n                })}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Trending Tags */}\n      <div className=\"bg-card border border-border rounded-lg p-4\">\n        <h3 className=\"font-semibold mb-4 flex items-center gap-2\">\n          <TrendingUp className=\"h-4 w-4 text-primary\" />\n          Popular Tags\n        </h3>\n        <div className=\"flex flex-wrap gap-2\">\n          {trendingTags.map(({ tag, count }) => (\n            <Badge\n              key={tag}\n              variant=\"secondary\"\n              className=\"cursor-pointer hover:bg-primary hover:text-primary-foreground transition-colors\"\n              onClick={() => navigate(`/tags/${tag.toLowerCase().replace(/\\s+/g, '-')}`)}\n            >\n              {tag} {count}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Archive Link */}\n      <div className=\"bg-card border border-border rounded-lg p-4\">\n        <h3 className=\"font-semibold mb-3 flex items-center gap-2\">\n          <Archive className=\"h-4 w-4 text-primary\" />\n          Archive\n        </h3>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => navigate('/blog')}\n          className=\"w-full justify-between\"\n        >\n          View All Posts\n          <ArrowRight className=\"h-4 w-4\" />\n        </Button>\n      </div>\n    </aside>\n  );\n}\n\nexport default RelatedContentSidebar;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/RelatedPosts/RelatedPosts.tsx","messages":[{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","line":16,"column":38,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSingleBlock","endLine":18,"endColumn":4,"fix":{"range":[619,683],"text":"findRelatedPosts(currentPost, allPosts, limit)"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useMemo } from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { cn } from \"../../lib/utils\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"../ui/card\";\nimport { Badge } from \"../ui/badge\";\nimport { RelatedPostsProps } from \"../../models\";\nimport { findRelatedPosts, formatReadingTime, formatRelativeDate } from \"../../services/relatedPostsUtils\";\n\nfunction RelatedPosts({\n  currentPost,\n  allPosts,\n  limit = 4,\n  className,\n}: RelatedPostsProps): React.ReactElement | null {\n  const relatedPosts = useMemo(() => {\n    return findRelatedPosts(currentPost, allPosts, limit);\n  }, [currentPost, allPosts, limit]);\n\n  if (relatedPosts.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className={cn(\"space-y-6\", className)}>\n      <div>\n        <h2 className=\"text-2xl font-bold mb-2\">Related Posts</h2>\n        <p className=\"text-muted-foreground\">\n          Discover more content you might find interesting\n        </p>\n      </div>\n      \n      <div className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-1 xl:grid-cols-2\">\n        {relatedPosts.map((post) => {\n          const thumbnail = post.thumbnail ? getImage(post.thumbnail) : null;\n          \n          return (\n            <Link\n              key={post.slug}\n              to={post.slug}\n              className=\"block transition-transform hover:scale-[1.02]\"\n            >\n              <Card className=\"h-full hover:shadow-lg transition-shadow\">\n                <div className=\"flex gap-4 p-4\">\n                  <div className=\"flex-shrink-0\">\n                    {thumbnail ? (\n                      <GatsbyImage\n                        image={thumbnail}\n                        alt=\"\"\n                        className=\"w-16 h-16 object-cover rounded-lg\"\n                      />\n                    ) : (\n                      <div className=\"w-16 h-16 bg-muted rounded-lg flex items-center justify-center\">\n                        <span className=\"text-muted-foreground text-lg\">📄</span>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <div className=\"flex-1 min-w-0\">\n                    <CardHeader className=\"p-0 space-y-1\">\n                      <CardTitle className=\"text-sm font-semibold line-clamp-2 hover:text-primary transition-colors\">\n                        {post.title}\n                      </CardTitle>\n                      <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                        <span>{formatRelativeDate(post.date)}</span>\n                        <span>•</span>\n                        <span>{formatReadingTime(post.timeToRead)}</span>\n                        {post.similarity > 0 && (\n                          <>\n                            <span>•</span>\n                            <Badge variant=\"secondary\" className=\"h-4 px-1 text-xs\">\n                              {Math.round(post.similarity * 100)}% match\n                            </Badge>\n                          </>\n                        )}\n                      </div>\n                    </CardHeader>\n                    \n                    <CardContent className=\"p-0 mt-2\">\n                      <CardDescription className=\"text-xs line-clamp-2\">\n                        {post.excerpt}\n                      </CardDescription>\n                      \n                      {post.tags.length > 0 && (\n                        <div className=\"flex flex-wrap gap-1 mt-2\">\n                          {post.tags.slice(0, 2).map((tag) => (\n                            <Badge\n                              key={tag}\n                              variant=\"outline\"\n                              className=\"h-4 px-1 text-xs\"\n                            >\n                              {tag}\n                            </Badge>\n                          ))}\n                          {post.tags.length > 2 && (\n                            <Badge variant=\"outline\" className=\"h-4 px-1 text-xs\">\n                              +{post.tags.length - 2}\n                            </Badge>\n                          )}\n                        </div>\n                      )}\n                    </CardContent>\n                  </div>\n                </div>\n              </Card>\n            </Link>\n          );\n        })}\n      </div>\n    </section>\n  );\n}\n\nexport default RelatedPosts;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/SEO/SEO.tsx","messages":[{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":136,"column":11,"nodeType":"Property","messageId":"expectedPropertyShorthand","endLine":136,"endColumn":35,"fix":{"range":[3860,3884],"text":"description"}},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":161,"column":11,"nodeType":"Property","messageId":"expectedPropertyShorthand","endLine":161,"endColumn":29,"fix":{"range":[4546,4564],"text":"keywords"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React, { useMemo } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\ninterface PostNode {\n  fields: {\n    date: string;\n  };\n  frontmatter: {\n    title: string;\n    description?: string;\n    cover?: string;\n    tags?: string[];\n    category?: string;\n    date?: string;\n    time?: string;\n    thumbnail?: {\n      childImageSharp: {\n        gatsbyImageData: {\n          images: {\n            fallback: {\n              src: string;\n            };\n          };\n        };\n      };\n    };\n  };\n  excerpt: string;\n  timeToRead?: number;\n}\n\ninterface SEOProps {\n  postNode?: PostNode;\n  postPath?: string;\n  postSEO?: boolean;\n  title?: string;\n  description?: string;\n}\n\nfunction SEO({ postNode, postPath, postSEO, title: customTitle, description: customDescription }: SEOProps): React.ReactElement {\n  const seoData = useMemo(() => {\n    let title: string;\n    let description: string;\n    let image: string;\n    let postURL: string | undefined;\n    let canonicalURL: string;\n    let keywords: string | undefined;\n    let publishedTime: string | undefined;\n    let modifiedTime: string | undefined;\n    let author: string;\n    let readingTime: number | undefined;\n\n    if (postSEO && postNode) {\n      const postMeta = postNode.frontmatter;\n      title = `${postMeta.title} | ${config.siteTitle}`;\n      description = postMeta.description || postNode.excerpt;\n      image = postMeta.cover || \"\";\n      keywords = postMeta.tags ? postMeta.tags.join(\", \") : undefined;\n      publishedTime = postNode.fields.date;\n      modifiedTime = postNode.fields.date; // Use date as modified until we track actual modifications\n      author = config.userName;\n      readingTime = postNode.timeToRead;\n\n      if (postMeta.thumbnail) {\n        image =\n          postMeta.thumbnail.childImageSharp.gatsbyImageData.images.fallback\n            .src;\n      }\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath || \"\");\n      canonicalURL = postURL;\n    } else {\n      title = customTitle || config.siteTitle;\n      description = customDescription || config.siteDescription;\n      image = `${config.siteLogo}/`;\n      canonicalURL = urljoin(config.siteUrl, config.pathPrefix);\n      author = config.userName;\n    }\n\n    image = config.siteUrl + image;\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"WebSite\",\n        \"@id\": `${blogURL}#website`,\n        url: blogURL,\n        name: config.siteTitle,\n        description: config.siteDescription,\n        alternateName: config.siteTitleAlt || \"\",\n        publisher: {\n          \"@type\": \"Person\",\n          \"@id\": `${blogURL}#/schema/person`,\n          name: config.userName,\n          url: blogURL,\n          sameAs: config.userLinks.map(link => link.url)\n        }\n      },\n    ];\n\n    if (postSEO && postNode) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              name: \"Home\",\n              item: blogURL\n            },\n            {\n              \"@type\": \"ListItem\",\n              position: 2,\n              name: \"Blog\",\n              item: urljoin(blogURL, \"/blog/\")\n            },\n            {\n              \"@type\": \"ListItem\",\n              position: 3,\n              name: postNode.frontmatter.title,\n              item: postURL\n            }\n          ],\n        },\n        {\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"BlogPosting\",\n          \"@id\": `${postURL}#article`,\n          url: postURL,\n          headline: postNode.frontmatter.title,\n          name: postNode.frontmatter.title,\n          description: description,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image,\n            width: 1200,\n            height: 630\n          },\n          datePublished: publishedTime,\n          dateModified: modifiedTime,\n          author: {\n            \"@type\": \"Person\",\n            \"@id\": `${blogURL}#/schema/person`,\n            name: author,\n            url: blogURL\n          },\n          publisher: {\n            \"@type\": \"Person\",\n            \"@id\": `${blogURL}#/schema/person`,\n            name: author,\n            url: blogURL\n          },\n          mainEntityOfPage: {\n            \"@type\": \"WebPage\",\n            \"@id\": postURL\n          },\n          keywords: keywords,\n          timeRequired: readingTime ? `PT${readingTime}M` : undefined,\n          inLanguage: \"en-US\",\n          isPartOf: {\n            \"@type\": \"Blog\",\n            \"@id\": `${blogURL}#blog`,\n            name: config.siteTitle,\n            url: blogURL\n          },\n          about: postNode.frontmatter.category ? {\n            \"@type\": \"Thing\",\n            name: postNode.frontmatter.category\n          } : undefined\n        },\n      );\n    }\n\n    return {\n      title,\n      description,\n      image,\n      postURL,\n      blogURL,\n      canonicalURL,\n      keywords,\n      publishedTime,\n      modifiedTime,\n      author,\n      schemaOrgJSONLD,\n    };\n  }, [postNode, postPath, postSEO]);\n\n  return (\n    <Helmet>\n      {/* General tags */}\n      <title>{seoData.title}</title>\n      <meta name=\"description\" content={seoData.description} />\n      <meta name=\"image\" content={seoData.image} />\n      <link rel=\"canonical\" href={seoData.canonicalURL} />\n      {seoData.keywords && <meta name=\"keywords\" content={seoData.keywords} />}\n      <meta name=\"author\" content={seoData.author} />\n      <meta name=\"robots\" content=\"index, follow\" />\n      \n      {/* Article-specific meta tags */}\n      {postSEO && seoData.publishedTime && (\n        <meta property=\"article:published_time\" content={seoData.publishedTime} />\n      )}\n      {postSEO && seoData.modifiedTime && (\n        <meta property=\"article:modified_time\" content={seoData.modifiedTime} />\n      )}\n      {postSEO && postNode?.frontmatter.category && (\n        <meta property=\"article:section\" content={postNode.frontmatter.category} />\n      )}\n      {postSEO && postNode?.frontmatter.tags && \n        postNode.frontmatter.tags.map(tag => (\n          <meta key={tag} property=\"article:tag\" content={tag} />\n        ))\n      }\n\n      {/* Schema.org tags */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify(seoData.schemaOrgJSONLD)}\n      </script>\n\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={postSEO ? seoData.postURL : seoData.blogURL} />\n      <meta property=\"og:type\" content={postSEO ? \"article\" : \"website\"} />\n      <meta property=\"og:title\" content={seoData.title} />\n      <meta property=\"og:description\" content={seoData.description} />\n      <meta property=\"og:image\" content={seoData.image} />\n      <meta property=\"og:image:width\" content=\"1200\" />\n      <meta property=\"og:image:height\" content=\"630\" />\n      <meta property=\"og:site_name\" content={config.siteTitle} />\n      <meta property=\"og:locale\" content=\"en_US\" />\n      {config.siteFBAppID && <meta property=\"fb:app_id\" content={config.siteFBAppID} />}\n\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content={config.userTwitter ? `@${config.userTwitter}` : \"\"} />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? `@${config.userTwitter}` : \"\"} />\n      <meta name=\"twitter:title\" content={seoData.title} />\n      <meta name=\"twitter:description\" content={seoData.description} />\n      <meta name=\"twitter:image\" content={seoData.image} />\n      <meta name=\"twitter:image:alt\" content={postSEO ? postNode?.frontmatter.title : config.siteTitle} />\n    </Helmet>\n  );\n}\n\nexport default SEO;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/SearchDialog/SearchDialog.tsx","messages":[{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/command\"","line":14,"column":8,"nodeType":"Literal","endLine":14,"endColumn":33},{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":15,"column":1,"nodeType":"ImportDeclaration","endLine":31,"endColumn":23},{"ruleId":"import/order","severity":2,"message":"`lucide-react` import should occur before import of `../../context/ThemeContext`","line":15,"column":1,"nodeType":"ImportDeclaration","endLine":31,"endColumn":23,"fix":{"range":[139,540],"text":"import { \n  Search, \n  FileText, \n  FolderOpen, \n  Tag, \n  Home, \n  User, \n  Palette, \n  History, \n  Bookmark, \n  Settings,\n  Sun,\n  Moon,\n  Monitor,\n  Clock,\n  Star\n} from \"lucide-react\";\nimport { useTheme } from \"../../context/ThemeContext\";\nimport {\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n} from \"@/components/ui/command\";\n"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Search' is defined but never used.","line":16,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":9},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Palette' is defined but never used.","line":22,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":22,"endColumn":10},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'History' is defined but never used.","line":23,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":23,"endColumn":10},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Star' is defined but never used.","line":30,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":7},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'theme' is assigned a value but never used.","line":53,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":53,"endColumn":16},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":237,"column":69,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":237,"endColumn":71},{"ruleId":"default-case","severity":2,"message":"Expected a default case.","line":241,"column":5,"nodeType":"SwitchStatement","messageId":"missingDefaultCase","endLine":254,"endColumn":6},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":257,"column":53,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":257,"endColumn":55},{"ruleId":"default-case","severity":2,"message":"Expected a default case.","line":258,"column":5,"nodeType":"SwitchStatement","messageId":"missingDefaultCase","endLine":271,"endColumn":6},{"ruleId":"react/no-array-index-key","severity":2,"message":"Do not use Array index in keys","line":326,"column":24,"nodeType":"TemplateLiteral","messageId":"noArrayIndex","endLine":326,"endColumn":74}],"suppressedMessages":[],"errorCount":13,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"\"use client\"\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useStaticQuery, graphql, navigate } from \"gatsby\";\nimport { useTheme } from \"../../context/ThemeContext\";\nimport {\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n} from \"@/components/ui/command\";\nimport { \n  Search, \n  FileText, \n  FolderOpen, \n  Tag, \n  Home, \n  User, \n  Palette, \n  History, \n  Bookmark, \n  Settings,\n  Sun,\n  Moon,\n  Monitor,\n  Clock,\n  Star\n} from \"lucide-react\";\n\ninterface SearchResult {\n  type: \"post\" | \"category\" | \"tag\" | \"action\" | \"recent\" | \"bookmark\";\n  title: string;\n  slug: string;\n  excerpt?: string;\n  category?: string;\n  date?: string;\n  action?: () => void;\n  icon?: React.ReactNode;\n  shortcut?: string;\n}\n\ninterface SearchDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\nfunction SearchDialog({ open, onOpenChange }: SearchDialogProps): React.ReactElement {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredResults, setFilteredResults] = useState<SearchResult[]>([]);\n  const { theme, setTheme } = useTheme();\n\n  const data = useStaticQuery(graphql`\n    query SearchQuery {\n      posts: allMarkdownRemark(\n        sort: { fields: { date: DESC } }\n        filter: { frontmatter: { type: { eq: \"post\" } } }\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n              date\n            }\n            excerpt(pruneLength: 100)\n            frontmatter {\n              title\n              tags\n              category\n            }\n          }\n        }\n      }\n      categories: allMarkdownRemark {\n        group(field: { frontmatter: { category: SELECT } }) {\n          fieldValue\n          totalCount\n        }\n      }\n      tags: allMarkdownRemark {\n        group(field: { frontmatter: { tags: SELECT } }) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n\n  // Prepare searchable data\n  const searchData = React.useMemo(() => {\n    const results: SearchResult[] = [];\n\n    // Add quick actions first (always visible)\n    const quickActions: SearchResult[] = [\n      {\n        type: \"action\",\n        title: \"Go to Home\",\n        slug: \"/\",\n        icon: <Home className=\"h-4 w-4\" />,\n        action: () => navigate(\"/\"),\n      },\n      {\n        type: \"action\", \n        title: \"View About\",\n        slug: \"/about\",\n        icon: <User className=\"h-4 w-4\" />,\n        action: () => navigate(\"/about\"),\n      },\n      {\n        type: \"action\",\n        title: \"Browse Blog\",\n        slug: \"/blog\", \n        icon: <FileText className=\"h-4 w-4\" />,\n        action: () => navigate(\"/blog\"),\n      },\n      {\n        type: \"action\",\n        title: \"Switch to Light Theme\",\n        slug: \"\",\n        icon: <Sun className=\"h-4 w-4\" />,\n        action: () => setTheme(\"light\"),\n        shortcut: \"⌘⇧T\",\n      },\n      {\n        type: \"action\",\n        title: \"Switch to Dark Theme\", \n        slug: \"\",\n        icon: <Moon className=\"h-4 w-4\" />,\n        action: () => setTheme(\"dark\"),\n        shortcut: \"⌘⇧T\",\n      },\n      {\n        type: \"action\",\n        title: \"Use System Theme\",\n        slug: \"\",\n        icon: <Monitor className=\"h-4 w-4\" />,\n        action: () => setTheme(\"system\"),\n        shortcut: \"⌘⇧T\",\n      },\n    ];\n\n    results.push(...quickActions);\n\n    // Add recent posts (last 5)\n    const recentPosts = data.posts.edges.slice(0, 5);\n    recentPosts.forEach(({ node }: any) => {\n      results.push({\n        type: \"recent\",\n        title: node.frontmatter.title,\n        slug: node.fields.slug,\n        excerpt: node.excerpt,\n        category: node.frontmatter.category,\n        date: node.fields.date,\n        icon: <Clock className=\"h-4 w-4\" />,\n      });\n    });\n\n    // Add posts\n    data.posts.edges.forEach(({ node }: any) => {\n      results.push({\n        type: \"post\",\n        title: node.frontmatter.title,\n        slug: node.fields.slug,\n        excerpt: node.excerpt,\n        category: node.frontmatter.category,\n        date: node.fields.date,\n      });\n    });\n\n    // Add categories\n    data.categories.group.forEach(({ fieldValue, totalCount }: any) => {\n      if (fieldValue) {\n        results.push({\n          type: \"category\",\n          title: `${fieldValue} (${totalCount} posts)`,\n          slug: `/categories/${fieldValue.toLowerCase().replace(/\\s+/g, \"-\")}`,\n        });\n      }\n    });\n\n    // Add tags\n    data.tags.group.forEach(({ fieldValue, totalCount }: any) => {\n      if (fieldValue) {\n        results.push({\n          type: \"tag\",\n          title: `${fieldValue} (${totalCount} posts)`,\n          slug: `/tags/${fieldValue.toLowerCase().replace(/\\s+/g, \"-\")}`,\n        });\n      }\n    });\n\n    return results;\n  }, [data, setTheme]);\n\n  // Filter results based on search term\n  useEffect(() => {\n    if (!searchTerm.trim()) {\n      // Show quick actions and recent posts when no search term\n      const quickActionsAndRecent = searchData.filter(\n        (item) => item.type === \"action\" || item.type === \"recent\"\n      );\n      setFilteredResults(quickActionsAndRecent.slice(0, 15));\n      return;\n    }\n\n    const filtered = searchData.filter((item) => {\n      const searchText = searchTerm.toLowerCase();\n      return (\n        item.title.toLowerCase().includes(searchText) ||\n        (item.excerpt && item.excerpt.toLowerCase().includes(searchText)) ||\n        (item.category && item.category.toLowerCase().includes(searchText))\n      );\n    });\n\n    // Sort results: actions first, then recent, posts, categories, tags\n    const sorted = filtered.sort((a, b) => {\n      const typeOrder = { action: 0, recent: 1, post: 2, category: 3, tag: 4, bookmark: 5 };\n      return typeOrder[a.type] - typeOrder[b.type];\n    });\n\n    setFilteredResults(sorted.slice(0, 20)); // Limit to 20 results\n  }, [searchTerm, searchData]);\n\n  const handleSelect = useCallback((result: SearchResult) => {\n    onOpenChange(false);\n    setSearchTerm(\"\");\n    \n    if (result.action) {\n      result.action();\n    } else if (result.slug) {\n      navigate(result.slug);\n    }\n  }, [onOpenChange]);\n\n  const getIcon = (type: SearchResult[\"type\"], item?: SearchResult) => {\n    // Use custom icon if provided\n    if (item?.icon) return item.icon;\n    \n    switch (type) {\n      case \"post\":\n        return <FileText className=\"h-4 w-4\" />;\n      case \"category\":\n        return <FolderOpen className=\"h-4 w-4\" />;\n      case \"tag\":\n        return <Tag className=\"h-4 w-4\" />;\n      case \"action\":\n        return <Settings className=\"h-4 w-4\" />;\n      case \"recent\":\n        return <Clock className=\"h-4 w-4\" />;\n      case \"bookmark\":\n        return <Bookmark className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getTypeLabel = (type: SearchResult[\"type\"]) => {\n    switch (type) {\n      case \"post\":\n        return \"Posts\";\n      case \"category\":\n        return \"Categories\";\n      case \"tag\":\n        return \"Tags\";\n      case \"action\":\n        return \"Quick Actions\";\n      case \"recent\":\n        return \"Recent Posts\";\n      case \"bookmark\":\n        return \"Bookmarks\";\n    }\n  };\n\n  // Group results by type\n  const groupedResults = filteredResults.reduce((acc, item) => {\n    if (!acc[item.type]) {\n      acc[item.type] = [];\n    }\n    acc[item.type].push(item);\n    return acc;\n  }, {} as Record<SearchResult[\"type\"], SearchResult[]>);\n\n  // Handle keyboard shortcuts\n  useEffect(() => {\n    const handleKeydown = (e: KeyboardEvent) => {\n      if ((e.metaKey || e.ctrlKey) && e.key === \"k\") {\n        e.preventDefault();\n        onOpenChange(!open);\n      }\n      if (e.key === \"Escape\") {\n        onOpenChange(false);\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeydown);\n    return () => document.removeEventListener(\"keydown\", handleKeydown);\n  }, [open, onOpenChange]);\n\n  // Reset search when dialog closes\n  useEffect(() => {\n    if (!open) {\n      setSearchTerm(\"\");\n    }\n  }, [open]);\n\n  return (\n    <CommandDialog open={open} onOpenChange={onOpenChange}>\n      <CommandInput\n        placeholder=\"Search posts, categories, and tags...\"\n        value={searchTerm}\n        onValueChange={setSearchTerm}\n      />\n      <CommandList>\n        <CommandEmpty>\n          {searchTerm ? `No results found for \"${searchTerm}\".` : \"Start typing to search...\"}\n        </CommandEmpty>\n        \n        {([\"action\", \"recent\", \"post\", \"category\", \"tag\", \"bookmark\"] as const).map((type) => {\n          const items = groupedResults[type];\n          if (!items || items.length === 0) return null;\n\n          return (\n            <CommandGroup key={type} heading={getTypeLabel(type)}>\n              {items.map((item, index) => (\n                <CommandItem\n                  key={`${item.type}-${item.slug || item.title}-${index}`}\n                  value={`${item.title} ${item.excerpt || \"\"} ${item.category || \"\"}`}\n                  onSelect={() => handleSelect(item)}\n                  className=\"cursor-pointer\"\n                >\n                  {getIcon(item.type, item)}\n                  <div className=\"flex flex-col flex-1 min-w-0\">\n                    <div className=\"font-medium truncate\">{item.title}</div>\n                    {item.excerpt && (\n                      <div className=\"text-xs text-muted-foreground truncate mt-1\">\n                        {item.excerpt}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    {(item.type === \"post\" || item.type === \"recent\") && item.category && (\n                      <div className=\"text-xs text-muted-foreground\">\n                        {item.category}\n                      </div>\n                    )}\n                    {item.shortcut && (\n                      <CommandShortcut>{item.shortcut}</CommandShortcut>\n                    )}\n                  </div>\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          );\n        })}\n      </CommandList>\n      \n      <div className=\"border-t border-border p-2 text-xs text-muted-foreground\">\n        <div className=\"flex items-center justify-between\">\n          <span>Use ↑ ↓ to navigate</span>\n          <div className=\"flex items-center gap-1\">\n            <CommandShortcut>↵</CommandShortcut>\n            <span>to select</span>\n          </div>\n        </div>\n      </div>\n    </CommandDialog>\n  );\n}\n\nexport default SearchDialog;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/SearchTrigger/SearchTrigger.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":2,"endColumn":39},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/button\"","line":3,"column":24,"nodeType":"Literal","endLine":3,"endColumn":48},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":4,"column":20,"nodeType":"Literal","endLine":4,"endColumn":33}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Search } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\ninterface SearchTriggerProps {\n  onClick: () => void;\n  variant?: \"default\" | \"outline\" | \"ghost\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n  className?: string;\n  showShortcut?: boolean;\n}\n\nfunction SearchTrigger({\n  onClick,\n  variant = \"outline\",\n  size = \"default\",\n  className,\n  showShortcut = true,\n}: SearchTriggerProps): React.ReactElement {\n  return (\n    <Button\n      variant={variant}\n      size={size}\n      onClick={onClick}\n      className={cn(\n        \"relative text-sm text-muted-foreground flex items-center\",\n        size === \"icon\" ? \"justify-center\" : \"justify-center gap-3\",\n        size === \"default\" && \"h-9 px-3\",\n        size === \"sm\" && \"h-9 px-3\",\n        className,\n      )}\n    >\n      {size !== \"icon\" && (\n        <div className=\"flex items-center gap-2\">\n          <Search className=\"h-4 w-4 shrink-0\" />\n          <span className=\"hidden sm:inline-flex truncate\">Search...</span>\n          <span className=\"sm:hidden truncate\">Search</span>\n          {showShortcut && (\n            <kbd className=\"pointer-events-none hidden h-5 select-none items-center rounded border bg-muted px-1 font-mono text-[10px] font-medium opacity-100 sm:flex ml-2\">\n              <span className=\"text-xs\">⌘</span>K\n            </kbd>\n          )}\n        </div>\n      )}\n      {size === \"icon\" && <Search className=\"h-4 w-4\" />}\n    </Button>\n  );\n}\n\nexport default SearchTrigger;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/SocialEngagement/SocialEngagement.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":17,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'MessageCircle' is defined but never used.","line":9,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":16},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/button\"","line":18,"column":24,"nodeType":"Literal","endLine":18,"endColumn":48},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/tooltip\"","line":23,"column":8,"nodeType":"Literal","endLine":23,"endColumn":33},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'SheetTrigger' is defined but never used.","line":29,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":29,"endColumn":15},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/sheet\"","line":30,"column":8,"nodeType":"Literal","endLine":30,"endColumn":31},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":31,"column":20,"nodeType":"Literal","endLine":31,"endColumn":33},{"ruleId":"import/order","severity":2,"message":"`sonner` import should occur before import of `@/components/ui/button`","line":32,"column":1,"nodeType":"ImportDeclaration","endLine":32,"endColumn":32,"fix":{"range":[246,561],"text":"import { toast } from \"sonner\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger\n} from \"@/components/ui/sheet\";\nimport { cn } from \"@/lib/utils\";\n"}},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":79,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":79,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1812,1857],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":94,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":94,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2221,2262],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":248,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":248,"endColumn":19,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[7091,7140],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"@typescript-eslint/no-shadow","severity":2,"message":"'reactions' is already declared in the upper scope on line 48 column 7.","line":253,"column":42,"nodeType":"Identifier","messageId":"noShadow","endLine":253,"endColumn":64},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":257,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":257,"endColumn":19,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[7396,7445],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"no-promise-executor-return","severity":2,"message":"Return values from promise executor functions cannot be read.","line":286,"column":34,"nodeType":"CallExpression","messageId":"returnsValue","endLine":286,"endColumn":58,"suggestions":[{"messageId":"wrapBraces","fix":{"range":[8327,8351],"text":"{setTimeout(resolve, 300)}"},"desc":"Wrap the expression in `{}`."}]},{"ruleId":"no-promise-executor-return","severity":2,"message":"Return values from promise executor functions cannot be read.","line":371,"column":36,"nodeType":"CallExpression","messageId":"returnsValue","endLine":371,"endColumn":61,"suggestions":[{"messageId":"wrapBraces","fix":{"range":[11060,11085],"text":"{setTimeout(resolve, 1000)}"},"desc":"Wrap the expression in `{}`."}]}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback } from \"react\";\nimport { \n  Share2,\n  Twitter,\n  Facebook,\n  Linkedin,\n  Link2,\n  Mail,\n  MessageCircle,\n  Heart,\n  ThumbsUp,\n  Smile,\n  Zap,\n  Copy,\n  Check,\n  ExternalLink\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger\n} from \"@/components/ui/sheet\";\nimport { cn } from \"@/lib/utils\";\nimport { toast } from \"sonner\";\n\ninterface SocialShareProps {\n  title: string;\n  url?: string;\n  description?: string;\n  author?: string;\n  className?: string;\n}\n\ninterface ReactionProps {\n  postId: string;\n  initialCounts?: Record<string, number>;\n  className?: string;\n}\n\nconst reactions = [\n  { name: 'like', icon: ThumbsUp, label: 'Like', color: 'text-blue-500' },\n  { name: 'love', icon: Heart, label: 'Love', color: 'text-red-500' },\n  { name: 'happy', icon: Smile, label: 'Happy', color: 'text-yellow-500' },\n  { name: 'wow', icon: Zap, label: 'Wow', color: 'text-purple-500' },\n];\n\nexport function SocialShare({ \n  title, \n  url, \n  description = \"\",\n  author = \"\",\n  className \n}: SocialShareProps): React.ReactElement {\n  const [copied, setCopied] = useState(false);\n  const [shareUrl, setShareUrl] = useState(url || \"\");\n  const [isShareOpen, setIsShareOpen] = useState(false);\n\n  useEffect(() => {\n    if (!url && typeof window !== \"undefined\") {\n      setShareUrl(window.location.href);\n    }\n  }, [url]);\n\n  const handleCopyLink = useCallback(async () => {\n    try {\n      await navigator.clipboard.writeText(shareUrl);\n      setCopied(true);\n      toast.success(\"Link copied to clipboard!\");\n      setTimeout(() => setCopied(false), 2000);\n    } catch (error) {\n      console.error(\"Failed to copy link:\", error);\n      toast.error(\"Failed to copy link\");\n    }\n  }, [shareUrl]);\n\n  const handleNativeShare = useCallback(async () => {\n    if (navigator.share) {\n      try {\n        await navigator.share({\n          title,\n          text: description,\n          url: shareUrl,\n        });\n      } catch (error) {\n        if ((error as Error).name !== 'AbortError') {\n          console.error(\"Failed to share:\", error);\n        }\n      }\n    } else {\n      setIsShareOpen(true);\n    }\n  }, [title, description, shareUrl]);\n\n  const shareLinks = [\n    {\n      name: \"Twitter\",\n      icon: Twitter,\n      url: `https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(shareUrl)}${author ? `&via=${encodeURIComponent(author)}` : ''}`,\n      color: \"hover:text-blue-400\",\n    },\n    {\n      name: \"Facebook\", \n      icon: Facebook,\n      url: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}`,\n      color: \"hover:text-blue-600\",\n    },\n    {\n      name: \"LinkedIn\",\n      icon: Linkedin,\n      url: `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(shareUrl)}`,\n      color: \"hover:text-blue-700\",\n    },\n    {\n      name: \"Email\",\n      icon: Mail,\n      url: `mailto:?subject=${encodeURIComponent(title)}&body=${encodeURIComponent(`${description}\\n\\n${shareUrl}`)}`,\n      color: \"hover:text-green-600\",\n    },\n  ];\n\n  return (\n    <div className={cn(\"flex items-center gap-2\", className)}>\n      {/* Native Share or Custom Share */}\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleNativeShare}\n            className=\"h-8 px-3\"\n            aria-label=\"Share article\"\n          >\n            <Share2 className=\"h-4 w-4 mr-1\" />\n            Share\n          </Button>\n        </TooltipTrigger>\n        <TooltipContent>Share this article</TooltipContent>\n      </Tooltip>\n\n      {/* Quick Copy Link */}\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={handleCopyLink}\n            className=\"h-8 w-8 p-0\"\n            aria-label=\"Copy link\"\n          >\n            {copied ? (\n              <Check className=\"h-4 w-4 text-green-500\" />\n            ) : (\n              <Link2 className=\"h-4 w-4\" />\n            )}\n          </Button>\n        </TooltipTrigger>\n        <TooltipContent>\n          {copied ? \"Copied!\" : \"Copy link\"}\n        </TooltipContent>\n      </Tooltip>\n\n      {/* Custom Share Sheet */}\n      <Sheet open={isShareOpen} onOpenChange={setIsShareOpen}>\n        <SheetContent>\n          <SheetHeader>\n            <SheetTitle className=\"flex items-center gap-2\">\n              <Share2 className=\"h-5 w-5\" />\n              Share Article\n            </SheetTitle>\n          </SheetHeader>\n          \n          <div className=\"mt-6 space-y-4\">\n            <div className=\"p-3 bg-muted rounded-lg\">\n              <h3 className=\"font-medium text-sm mb-1\">{title}</h3>\n              {description && (\n                <p className=\"text-xs text-muted-foreground\">{description}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <h4 className=\"font-medium text-sm\">Share on social media</h4>\n              {shareLinks.map((platform) => (\n                <Button\n                  key={platform.name}\n                  variant=\"outline\"\n                  className={cn(\"w-full justify-start\", platform.color)}\n                  onClick={() => window.open(platform.url, '_blank', 'noopener,noreferrer')}\n                >\n                  <platform.icon className=\"h-4 w-4 mr-3\" />\n                  Share on {platform.name}\n                  <ExternalLink className=\"h-3 w-3 ml-auto\" />\n                </Button>\n              ))}\n            </div>\n\n            <div className=\"pt-4 border-t\">\n              <h4 className=\"font-medium text-sm mb-3\">Copy link</h4>\n              <div className=\"flex gap-2\">\n                <div className=\"flex-1 p-2 bg-muted rounded text-sm font-mono truncate\">\n                  {shareUrl}\n                </div>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={handleCopyLink}\n                  className=\"shrink-0\"\n                >\n                  {copied ? (\n                    <Check className=\"h-4 w-4\" />\n                  ) : (\n                    <Copy className=\"h-4 w-4\" />\n                  )}\n                </Button>\n              </div>\n            </div>\n          </div>\n        </SheetContent>\n      </Sheet>\n    </div>\n  );\n}\n\nexport function ReactionSystem({ \n  postId, \n  initialCounts = {},\n  className \n}: ReactionProps): React.ReactElement {\n  const [counts, setCounts] = useState<Record<string, number>>(initialCounts);\n  const [userReactions, setUserReactions] = useState<Set<string>>(new Set());\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Load user reactions from localStorage\n  useEffect(() => {\n    try {\n      const saved = localStorage.getItem(`reactions-${postId}`);\n      if (saved) {\n        setUserReactions(new Set(JSON.parse(saved)));\n      }\n    } catch (error) {\n      console.warn(\"Failed to load reactions:\", error);\n    }\n  }, [postId]);\n\n  // Save user reactions to localStorage\n  const saveUserReactions = useCallback((reactions: Set<string>) => {\n    try {\n      localStorage.setItem(`reactions-${postId}`, JSON.stringify([...reactions]));\n    } catch (error) {\n      console.warn(\"Failed to save reactions:\", error);\n    }\n  }, [postId]);\n\n  const handleReaction = useCallback(async (reactionName: string) => {\n    if (isLoading) return;\n\n    setIsLoading(true);\n    const hasReacted = userReactions.has(reactionName);\n    const newReactions = new Set(userReactions);\n    const newCounts = { ...counts };\n\n    if (hasReacted) {\n      // Remove reaction\n      newReactions.delete(reactionName);\n      newCounts[reactionName] = Math.max(0, (newCounts[reactionName] || 0) - 1);\n    } else {\n      // Add reaction\n      newReactions.add(reactionName);\n      newCounts[reactionName] = (newCounts[reactionName] || 0) + 1;\n    }\n\n    // Update state optimistically\n    setUserReactions(newReactions);\n    setCounts(newCounts);\n    saveUserReactions(newReactions);\n\n    // Here you could make an API call to persist to a backend\n    // For now, we'll just simulate a delay\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    setIsLoading(false);\n    \n    // Show feedback\n    const reaction = reactions.find(r => r.name === reactionName);\n    if (reaction) {\n      toast.success(hasReacted ? `Removed ${reaction.label}` : `Added ${reaction.label}!`);\n    }\n  }, [isLoading, userReactions, counts, saveUserReactions]);\n\n  const totalReactions = Object.values(counts).reduce((sum, count) => sum + count, 0);\n\n  return (\n    <div className={cn(\"flex items-center gap-1\", className)}>\n      <div className=\"flex items-center gap-1 bg-muted/50 rounded-full p-1\">\n        {reactions.map((reaction) => {\n          const count = counts[reaction.name] || 0;\n          const hasReacted = userReactions.has(reaction.name);\n          const Icon = reaction.icon;\n\n          return (\n            <Tooltip key={reaction.name}>\n              <TooltipTrigger asChild>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => handleReaction(reaction.name)}\n                  disabled={isLoading}\n                  className={cn(\n                    \"h-8 px-2 transition-all duration-200\",\n                    hasReacted && [\n                      \"bg-background shadow-sm scale-105\",\n                      reaction.color\n                    ]\n                  )}\n                  aria-label={`${reaction.label} (${count})`}\n                >\n                  <Icon className=\"h-4 w-4\" />\n                  {count > 0 && (\n                    <span className=\"ml-1 text-xs font-medium\">\n                      {count}\n                    </span>\n                  )}\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent>\n                {reaction.label} {count > 0 && `(${count})`}\n              </TooltipContent>\n            </Tooltip>\n          );\n        })}\n      </div>\n\n      {totalReactions > 0 && (\n        <span className=\"text-xs text-muted-foreground ml-2\">\n          {totalReactions} reaction{totalReactions !== 1 ? 's' : ''}\n        </span>\n      )}\n    </div>\n  );\n}\n\n// Newsletter signup component\ninterface NewsletterSignupProps {\n  className?: string;\n  compact?: boolean;\n}\n\nexport function NewsletterSignup({ \n  className, \n  compact = false \n}: NewsletterSignupProps): React.ReactElement {\n  const [email, setEmail] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleSubmit = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email || isSubmitting) return;\n\n    setIsSubmitting(true);\n    \n    // Simulate API call - replace with your newsletter service\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      setIsSubmitted(true);\n      setEmail(\"\");\n      toast.success(\"Thanks for subscribing!\");\n      \n      // Reset after 3 seconds\n      setTimeout(() => setIsSubmitted(false), 3000);\n    } catch (error) {\n      toast.error(\"Failed to subscribe. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [email, isSubmitting]);\n\n  if (isSubmitted) {\n    return (\n      <div className={cn(\n        \"flex items-center justify-center p-4 bg-green-50 dark:bg-green-950/30 border border-green-200 dark:border-green-800/30 rounded-lg text-green-700 dark:text-green-300\",\n        className\n      )}>\n        <Check className=\"h-5 w-5 mr-2\" />\n        <span className=\"font-medium\">Successfully subscribed!</span>\n      </div>\n    );\n  }\n\n  return (\n    <form \n      onSubmit={handleSubmit} \n      className={cn(\n        compact \n          ? \"flex gap-2 items-center\"\n          : \"space-y-4 p-6 bg-muted/30 rounded-lg border\",\n        className\n      )}\n    >\n      {!compact && (\n        <div className=\"text-center\">\n          <h3 className=\"font-semibold text-lg mb-2\">Stay Updated</h3>\n          <p className=\"text-muted-foreground text-sm\">\n            Get the latest posts and updates delivered to your inbox.\n          </p>\n        </div>\n      )}\n\n      <div className={compact ? \"flex-1\" : \"\"}>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Enter your email\"\n          required\n          className={cn(\n            \"w-full px-3 py-2 bg-background border border-border rounded-md\",\n            \"focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n            \"placeholder:text-muted-foreground\"\n          )}\n        />\n      </div>\n\n      <Button \n        type=\"submit\" \n        disabled={!email || isSubmitting}\n        className={compact ? \"shrink-0\" : \"w-full\"}\n      >\n        {isSubmitting ? (\n          <>\n            <div className=\"h-4 w-4 mr-2 animate-spin rounded-full border-2 border-current border-t-transparent\" />\n            Subscribing...\n          </>\n        ) : (\n          <>\n            <Mail className=\"h-4 w-4 mr-2\" />\n            Subscribe\n          </>\n        )}\n      </Button>\n    </form>\n  );\n}\n\nexport default { SocialShare, ReactionSystem, NewsletterSignup };","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/SocialLinks/SocialLinks.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/TableOfContents/TableOfContents.tsx","messages":[{"ruleId":"react/button-has-type","severity":2,"message":"Missing an explicit type attribute for button","line":60,"column":7,"nodeType":"JSXElement","messageId":"missingType","endLine":71,"endColumn":16}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport { cn } from \"../../lib/utils\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"../ui/card\";\nimport { TableOfContentsProps, TableOfContentsHeading } from \"../../models\";\n\nfunction TableOfContents({ headings, className }: TableOfContentsProps): React.ReactElement | null {\n  const [activeId, setActiveId] = useState<string>(\"\");\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActiveId(entry.target.id);\n          }\n        });\n      },\n      {\n        rootMargin: \"-80px 0px -80px 0px\",\n        threshold: 0.1,\n      }\n    );\n\n    // Observe all headings\n    const headingElements = headings.flatMap((heading) => {\n      const elements = [document.getElementById(heading.id)];\n      if (heading.children) {\n        elements.push(...heading.children.map(child => document.getElementById(child.id)));\n      }\n      return elements.filter(Boolean);\n    });\n\n    headingElements.forEach((element) => {\n      if (element) observer.observe(element);\n    });\n\n    return () => {\n      headingElements.forEach((element) => {\n        if (element) observer.unobserve(element);\n      });\n    };\n  }, [headings]);\n\n  const scrollToHeading = (id: string) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n      });\n    }\n  };\n\n  if (headings.length === 0) {\n    return null;\n  }\n\n  const renderHeading = (heading: TableOfContentsHeading) => (\n    <li key={heading.id}>\n      <button\n        onClick={() => scrollToHeading(heading.id)}\n        className={cn(\n          \"block w-full text-left py-1 px-2 rounded text-sm transition-colors hover:bg-muted\",\n          heading.level === 2 && \"font-medium\",\n          heading.level === 3 && \"ml-3 text-muted-foreground\",\n          heading.level === 4 && \"ml-6 text-muted-foreground text-xs\",\n          activeId === heading.id && \"text-primary bg-primary/10 font-medium\"\n        )}\n      >\n        {heading.title}\n      </button>\n      {heading.children && heading.children.length > 0 && (\n        <ul className=\"space-y-1 mt-1\">\n          {heading.children.map(renderHeading)}\n        </ul>\n      )}\n    </li>\n  );\n\n  return (\n    <Card className={cn(\"sticky top-24 max-h-[calc(100vh-120px)] overflow-y-auto\", className)}>\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"text-sm font-semibold\">Table of Contents</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <nav>\n          <ul className=\"space-y-1\">\n            {headings.map(renderHeading)}\n          </ul>\n        </nav>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default TableOfContents;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ThemeToggle/ThemeToggle.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":2,"endColumn":50},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/button\"","line":3,"column":24,"nodeType":"Literal","endLine":3,"endColumn":48},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/tooltip\"","line":8,"column":8,"nodeType":"Literal","endLine":8,"endColumn":33},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":10,"column":20,"nodeType":"Literal","endLine":10,"endColumn":33},{"ruleId":"consistent-return","severity":2,"message":"Arrow function expected no return value.","line":76,"column":5,"nodeType":"ReturnStatement","messageId":"unexpectedReturnValue","endLine":76,"endColumn":72},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":202,"column":34,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":204,"endColumn":2,"fix":{"range":[5988,6116],"text":"function ThemeToggleSimple(props: Omit<ThemeToggleProps, 'showTooltip'>) {\n  return <ThemeToggle {...props} showTooltip={false} />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":203,"column":16,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":203,"endColumn":26},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":206,"column":38,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":208,"endColumn":2,"fix":{"range":[6125,6279],"text":"function ThemeToggleNoKeyboard(props: Omit<ThemeToggleProps, 'enableKeyboardShortcut'>) {\n  return <ThemeToggle {...props} enableKeyboardShortcut={false} />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":207,"column":16,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":207,"endColumn":26},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":210,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":212,"endColumn":2,"fix":{"range":[6288,6473],"text":"function ThemeToggleBasic(props: Omit<ThemeToggleProps, 'showTooltip' | 'enableKeyboardShortcut'>) {\n  return <ThemeToggle {...props} showTooltip={false} enableKeyboardShortcut={false} />\n}"}},{"ruleId":"react/jsx-props-no-spreading","severity":2,"message":"Prop spreading is forbidden","line":211,"column":16,"nodeType":"JSXSpreadAttribute","messageId":"noSpreading","endLine":211,"endColumn":26}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import * as React from \"react\"\nimport { Moon, Sun, Monitor } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\nimport { useTheme } from \"../../context/ThemeContext\"\nimport { cn } from \"@/lib/utils\"\nimport \"./ThemeToggle.css\"\n\nexport interface ThemeToggleProps {\n  className?: string\n  showTooltip?: boolean\n  enableKeyboardShortcut?: boolean\n}\n\nexport function ThemeToggle({ \n  className, \n  showTooltip = true, \n  enableKeyboardShortcut = true \n}: ThemeToggleProps) {\n  const { theme, toggleTheme, resolvedTheme, isLoading } = useTheme()\n  const [isAnimating, setIsAnimating] = React.useState(false)\n  const [isHovered, setIsHovered] = React.useState(false)\n  const [isMac, setIsMac] = React.useState(false)\n\n  // Detect platform for keyboard shortcut display\n  React.useEffect(() => {\n    setIsMac(typeof navigator !== 'undefined' && navigator.platform.includes('Mac'))\n  }, [])\n\n  // Get the next theme in the cycle for tooltip\n  const getNextTheme = () => {\n    const themeOrder = [\"light\", \"dark\", \"system\"]\n    const currentIndex = themeOrder.indexOf(theme)\n    const nextIndex = (currentIndex + 1) % themeOrder.length\n    return themeOrder[nextIndex]\n  }\n\n  // Get theme description for accessibility\n  const getThemeDescription = (themeType: string) => {\n    switch (themeType) {\n      case \"light\": return \"Light mode\"\n      case \"dark\": return \"Dark mode\" \n      case \"system\": return \"System preference\"\n      default: return \"Light mode\"\n    }\n  }\n\n  // Handle theme toggle with animation\n  const handleToggle = () => {\n    setIsAnimating(true)\n    toggleTheme()\n    \n    // Reset animation state after transition\n    setTimeout(() => {\n      setIsAnimating(false)\n    }, 200)\n  }\n\n  // Keyboard shortcut handler\n  React.useEffect(() => {\n    if (!enableKeyboardShortcut) return\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      // Ctrl/Cmd + Shift + T to toggle theme\n      if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'T') {\n        event.preventDefault()\n        handleToggle()\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [enableKeyboardShortcut])\n\n  // Get the appropriate icon with enhanced animations\n  const getIcon = () => {\n    const iconClasses = cn(\n      \"h-[1.2rem] w-[1.2rem] theme-toggle-icon drop-shadow-sm\",\n      isAnimating && \"scale-95 rotate-12\",\n      isHovered && \"scale-110\"\n    )\n\n    switch (theme) {\n      case \"light\":\n        return (\n          <Sun \n            className={cn(iconClasses, \"theme-icon-sun\")} \n            aria-hidden=\"true\"\n          />\n        )\n      case \"dark\":\n        return (\n          <Moon \n            className={cn(iconClasses, \"theme-icon-moon\")} \n            aria-hidden=\"true\"\n          />\n        )\n      case \"system\":\n        return (\n          <Monitor \n            className={cn(iconClasses, \"theme-icon-monitor\")} \n            aria-hidden=\"true\"\n          />\n        )\n      default:\n        return (\n          <Sun \n            className={cn(iconClasses, \"theme-icon-sun\")} \n            aria-hidden=\"true\"\n          />\n        )\n    }\n  }\n\n  const tooltipContent = showTooltip ? (\n    <div className=\"text-center theme-toggle-tooltip\">\n      <div className=\"font-medium text-xs\">\n        {getThemeDescription(theme)}\n        {theme === \"system\" && (\n          <span className=\"text-muted-foreground\"> ({resolvedTheme})</span>\n        )}\n      </div>\n      <div className=\"text-xs text-muted-foreground mt-0.5\">\n        Click for {getThemeDescription(getNextTheme())}\n      </div>\n      {enableKeyboardShortcut && (\n        <div className=\"text-xs text-muted-foreground mt-1 border-t border-border/50 pt-1\">\n          <kbd className=\"px-1 py-0.5 text-xs bg-muted rounded\">\n            {isMac ? '⌘' : 'Ctrl'}\n          </kbd>\n          {' + '}\n          <kbd className=\"px-1 py-0.5 text-xs bg-muted rounded\">\n            Shift\n          </kbd>\n          {' + '}\n          <kbd className=\"px-1 py-0.5 text-xs bg-muted rounded\">\n            T\n          </kbd>\n        </div>\n      )}\n    </div>\n  ) : null\n\n  const buttonElement = (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={handleToggle}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      disabled={isLoading}\n      className={cn(\n        \"relative theme-toggle-button\",\n        \"hover:bg-accent/50 transition-colors duration-200\",\n        \"focus:ring-2 focus:ring-ring focus:ring-offset-2 focus-visible:outline-none\",\n        \"active:scale-95 transition-transform duration-100\",\n        \"disabled:opacity-50 disabled:cursor-wait\",\n        isAnimating && \"theme-toggle-switching\",\n        isLoading && \"theme-toggle-loading\",\n        className\n      )}\n      aria-label={`Current theme: ${getThemeDescription(theme)}${theme === \"system\" ? ` (${resolvedTheme})` : \"\"}. Click to switch to ${getThemeDescription(getNextTheme())}.`}\n    >\n      {getIcon()}\n      \n      {/* Visual indicator for current theme */}\n      <div \n        className={cn(\n          \"absolute -bottom-1 left-1/2 transform -translate-x-1/2 w-1 h-1 rounded-full theme-indicator-dot\",\n          theme === \"light\" && \"bg-amber-500 theme-icon-sun\",\n          theme === \"dark\" && \"bg-blue-600 theme-icon-moon\", \n          theme === \"system\" && \"bg-violet-600 theme-icon-monitor\",\n          isHovered && !isLoading ? \"scale-125\" : \"scale-100\",\n          isAnimating && \"switching\"\n        )}\n        aria-hidden=\"true\"\n      />\n    </Button>\n  )\n\n  if (!showTooltip) {\n    return buttonElement\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>\n        {buttonElement}\n      </TooltipTrigger>\n      <TooltipContent side=\"bottom\" sideOffset={8}>\n        {tooltipContent}\n      </TooltipContent>\n    </Tooltip>\n  )\n}\n\n// Export variants for different use cases\nexport const ThemeToggleSimple = (props: Omit<ThemeToggleProps, 'showTooltip'>) => (\n  <ThemeToggle {...props} showTooltip={false} />\n)\n\nexport const ThemeToggleNoKeyboard = (props: Omit<ThemeToggleProps, 'enableKeyboardShortcut'>) => (\n  <ThemeToggle {...props} enableKeyboardShortcut={false} />\n)\n\nexport const ThemeToggleBasic = (props: Omit<ThemeToggleProps, 'showTooltip' | 'enableKeyboardShortcut'>) => (\n  <ThemeToggle {...props} showTooltip={false} enableKeyboardShortcut={false} />\n)","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/ThemeToggle/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/TimelineView/TimelineView.tsx","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":5,"endColumn":23},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/components/ui/badge\"","line":6,"column":23,"nodeType":"Literal","endLine":6,"endColumn":46},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"@/lib/utils\"","line":7,"column":20,"nodeType":"Literal","endLine":7,"endColumn":33},{"ruleId":"import/order","severity":2,"message":"`gatsby` import should occur before import of `@/components/ui/badge`","line":8,"column":1,"nodeType":"ImportDeclaration","endLine":8,"endColumn":60,"fix":{"range":[93,234],"text":"import { useStaticQuery, graphql, navigate } from \"gatsby\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { cn } from \"@/lib/utils\";\n"}},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":56,"column":57,"nodeType":"CallExpression","messageId":"missingRadix","endLine":56,"endColumn":68,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[1315,1315],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":56,"column":71,"nodeType":"CallExpression","messageId":"missingRadix","endLine":56,"endColumn":82,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[1329,1329],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'index' is defined but never used.","line":75,"column":48,"nodeType":"Identifier","messageId":"unusedVar","endLine":75,"endColumn":61},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":76,"column":15,"nodeType":"JSXOpeningElement","endLine":80,"endColumn":16},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":76,"column":15,"nodeType":"JSXOpeningElement","endLine":80,"endColumn":16}],"suppressedMessages":[],"errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useMemo } from \"react\";\nimport { \n  Calendar,\n  Clock\n} from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { cn } from \"@/lib/utils\";\nimport { useStaticQuery, graphql, navigate } from \"gatsby\";\n\ninterface TimelineViewProps {\n  className?: string;\n}\n\nexport function TimelineView({ \n  className \n}: TimelineViewProps): React.ReactElement {\n  const data = useStaticQuery(graphql`\n    query TimelineQuery {\n      posts: allMarkdownRemark(\n        sort: { fields: { date: DESC } }\n        filter: { frontmatter: { type: { eq: \"post\" } } }\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n              date\n            }\n            frontmatter {\n              title\n              category\n              tags\n            }\n            excerpt(pruneLength: 100)\n            timeToRead\n          }\n        }\n      }\n    }\n  `);\n\n  const postsByYear = useMemo(() => {\n    const grouped: Record<string, any[]> = {};\n    \n    data.posts.edges.forEach(({ node }: any) => {\n      const year = new Date(node.fields.date).getFullYear().toString();\n      if (!grouped[year]) {\n        grouped[year] = [];\n      }\n      grouped[year].push(node);\n    });\n\n    return grouped;\n  }, [data]);\n\n  const years = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a));\n\n  return (\n    <div className={cn(\"space-y-8\", className)}>\n      {years.map(year => (\n        <div key={year} className=\"relative\">\n          {/* Year Header */}\n          <div className=\"sticky top-4 z-10 mb-6\">\n            <div className=\"flex items-center gap-3 bg-background/80 backdrop-blur-sm border border-border rounded-full px-4 py-2 w-fit\">\n              <Calendar className=\"h-4 w-4 text-primary\" />\n              <span className=\"font-semibold text-lg\">{year}</span>\n              <Badge variant=\"secondary\" className=\"text-xs\">\n                {postsByYear[year].length} posts\n              </Badge>\n            </div>\n          </div>\n\n          {/* Posts for Year */}\n          <div className=\"space-y-4 pl-6\">\n            {postsByYear[year].map((post: any, index: number) => (\n              <div\n                key={post.fields.slug}\n                className=\"relative group cursor-pointer\"\n                onClick={() => navigate(post.fields.slug)}\n              >\n                {/* Timeline Line */}\n                <div className=\"absolute -left-6 top-6 w-px h-full bg-border group-last:hidden\" />\n                \n                {/* Timeline Dot */}\n                <div className=\"absolute -left-8 top-6 w-3 h-3 bg-primary rounded-full border-2 border-background shadow-md\" />\n                \n                {/* Post Card */}\n                <div className=\"bg-card border border-border rounded-lg p-4 hover:shadow-md transition-all duration-200 hover:border-primary/50\">\n                  <div className=\"flex items-start justify-between gap-4\">\n                    <div className=\"flex-1 min-w-0\">\n                      <h3 className=\"font-semibold text-base mb-2 group-hover:text-primary transition-colors\">\n                        {post.frontmatter.title}\n                      </h3>\n                      <p className=\"text-sm text-muted-foreground mb-3 line-clamp-2\">\n                        {post.excerpt}\n                      </p>\n                      <div className=\"flex flex-wrap items-center gap-2\">\n                        <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                          <Clock className=\"h-3 w-3\" />\n                          {post.timeToRead} min read\n                        </div>\n                        {post.frontmatter.category && (\n                          <Badge variant=\"secondary\" className=\"text-xs\">\n                            {post.frontmatter.category}\n                          </Badge>\n                        )}\n                        {post.frontmatter.tags?.slice(0, 2).map((tag: string) => (\n                          <Badge key={tag} variant=\"outline\" className=\"text-xs\">\n                            {tag}\n                          </Badge>\n                        ))}\n                        {post.frontmatter.tags?.length > 2 && (\n                          <span className=\"text-xs text-muted-foreground\">\n                            +{post.frontmatter.tags.length - 2} more\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"text-sm text-muted-foreground whitespace-nowrap\">\n                      {new Date(post.fields.date).toLocaleDateString('en-US', {\n                        month: 'short',\n                        day: 'numeric'\n                      })}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default TimelineView;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/UXShowcase/UXShowcase.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'motion' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":16},{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'lucide-react' should be listed in the project's dependencies, not devDependencies.","line":3,"column":1,"nodeType":"ImportDeclaration","endLine":3,"endColumn":89},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Search' is defined but never used.","line":3,"column":47,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":53},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ParallaxImage' is defined but never used.","line":10,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":47},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'FloatingActionButton' is defined but never used.","line":11,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'SharedElement' is defined but never used.","line":13,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'LayoutAnimator' is defined but never used.","line":13,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":39},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'GridItemAnimator' is defined but never used.","line":13,"column":41,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":57},{"ruleId":"react/function-component-definition","severity":2,"message":"Function component is not a function declaration","line":16,"column":30,"nodeType":"ArrowFunctionExpression","messageId":"function-declaration","endLine":325,"endColumn":2},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'selectedCard' is assigned a value but never used.","line":17,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'demoCards' is assigned a value but never used.","line":25,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":25,"endColumn":18}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Share2, Heart, Bookmark, Copy, Plus, Search, Mail, Phone } from 'lucide-react';\n\n// Import all our enhanced components\nimport { Button } from '../ui/button';\nimport { Card, CardHeader, CardTitle, CardContent, MagneticCard, GlassCard, GradientCard, RevealCard, StackedCard } from '../ui/card';\nimport ScrollReveal from '../ui/scroll-reveal';\nimport { Skeleton, SkeletonCard, SkeletonText, SkeletonGroup } from '../ui/skeleton';\nimport Parallax, { ParallaxText, ParallaxImage } from '../ui/parallax';\nimport FloatingActionButton, { ExpandableFloatingActionButton } from '../ui/floating-action-button';\nimport EnhancedInput, { EnhancedTextarea } from '../ui/enhanced-input';\nimport { SharedElement, LayoutAnimator, GridItemAnimator } from '../ui/flip-animation';\nimport { showToast } from '../ui/toast';\n\nconst UXShowcase: React.FC = () => {\n  const [selectedCard, setSelectedCard] = useState<number | null>(null);\n  const [showSkeletons, setShowSkeletons] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n\n  const demoCards = [\n    { id: 1, title: 'Interactive Card', description: 'Hover to see lift effect' },\n    { id: 2, title: 'Magnetic Card', description: 'Follow your mouse movement' },\n    { id: 3, title: 'Glass Card', description: 'Beautiful glassmorphism' },\n    { id: 4, title: 'Gradient Card', description: 'Animated gradient border' },\n  ];\n\n  const handleCardClick = (id: number) => {\n    setSelectedCard(id);\n    showToast.success(`Selected card ${id}!`);\n  };\n\n  const handleCopyLink = () => {\n    navigator.clipboard.writeText(window.location.href);\n    showToast.copySuccess();\n  };\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: 'UX Showcase',\n        text: 'Check out these amazing micro-interactions!',\n        url: window.location.href\n      });\n    } else {\n      showToast.linkShared();\n    }\n  };\n\n  const fabActions = [\n    {\n      icon: <Copy size={16} />,\n      label: 'Copy Link',\n      onClick: handleCopyLink\n    },\n    {\n      icon: <Share2 size={16} />,\n      label: 'Share',\n      onClick: handleShare\n    },\n    {\n      icon: <Heart size={16} />,\n      label: 'Like',\n      onClick: () => showToast.success('Thanks for the love! ❤️')\n    },\n    {\n      icon: <Bookmark size={16} />,\n      label: 'Bookmark',\n      onClick: () => showToast.success('Bookmarked!')\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen space-y-16 p-8\">\n      {/* Hero Section with Parallax */}\n      <section className=\"relative h-screen flex items-center justify-center overflow-hidden\">\n        <Parallax speed={0.5} className=\"absolute inset-0\">\n          <div className=\"w-full h-full bg-gradient-to-br from-primary/20 via-secondary/20 to-accent/20 opacity-30\" />\n        </Parallax>\n        \n        <div className=\"relative z-10 text-center space-y-6\">\n          <ScrollReveal direction=\"up\" duration={0.8}>\n            <h1 className=\"text-6xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n              Advanced UX Showcase\n            </h1>\n          </ScrollReveal>\n          \n          <ScrollReveal direction=\"up\" delay={0.2} duration={0.8}>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Sophisticated micro-interactions, smooth animations, and delightful user experiences\n              built with Framer Motion and modern web technologies.\n            </p>\n          </ScrollReveal>\n          \n          <ScrollReveal direction=\"up\" delay={0.4} duration={0.8}>\n            <div className=\"flex gap-4 justify-center\">\n              <Button \n                variant=\"gradient\" \n                animation=\"bounce\"\n                onClick={() => showToast.success('Welcome to the showcase!')}\n              >\n                Explore Features\n              </Button>\n              <Button \n                variant=\"outline\" \n                animation=\"magnetic\"\n                onClick={() => setShowSkeletons(!showSkeletons)}\n              >\n                Toggle Skeletons\n              </Button>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Button Showcase */}\n      <ScrollReveal>\n        <section className=\"space-y-8\">\n          <h2 className=\"text-3xl font-bold text-center\">Enhanced Button Interactions</h2>\n          <div className=\"flex flex-wrap gap-4 justify-center\">\n            <Button animation=\"subtle\">Subtle Animation</Button>\n            <Button animation=\"bounce\" variant=\"secondary\">Bounce Effect</Button>\n            <Button animation=\"magnetic\" variant=\"outline\">Magnetic Hover</Button>\n            <Button animation=\"ripple\" variant=\"gradient\">Ripple Effect</Button>\n            <Button animation=\"none\" variant=\"ghost\">No Animation</Button>\n          </div>\n        </section>\n      </ScrollReveal>\n\n      {/* Card Showcase */}\n      <ScrollReveal direction=\"right\">\n        <section className=\"space-y-8\">\n          <h2 className=\"text-3xl font-bold text-center\">Interactive Cards</h2>\n          \n          {/* Standard Cards Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <Card variant=\"hover-lift\" animation=\"fade-in\" onClick={() => handleCardClick(1)}>\n              <CardHeader>\n                <CardTitle>Lift Effect</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">Hover to see the smooth lift animation with enhanced shadow.</p>\n              </CardContent>\n            </Card>\n\n            <MagneticCard onClick={() => handleCardClick(2)}>\n              <CardHeader>\n                <CardTitle>Magnetic</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">Move your mouse around to see the magnetic effect.</p>\n              </CardContent>\n            </MagneticCard>\n\n            <GlassCard onClick={() => handleCardClick(3)}>\n              <CardHeader>\n                <CardTitle>Glassmorphism</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">Beautiful frosted glass effect with backdrop blur.</p>\n              </CardContent>\n            </GlassCard>\n\n            <GradientCard \n              gradientFrom=\"from-purple-500\" \n              gradientTo=\"to-pink-500\"\n              onClick={() => handleCardClick(4)}\n            >\n              <CardHeader>\n                <CardTitle>Gradient Border</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">Animated gradient border with scale interaction.</p>\n              </CardContent>\n            </GradientCard>\n          </div>\n\n          {/* Special Effect Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mt-12\">\n            <RevealCard revealDirection=\"left\">\n              <CardHeader>\n                <CardTitle>Reveal Animation</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">Scroll to see the reveal effect in action.</p>\n              </CardContent>\n            </RevealCard>\n\n            <StackedCard stackCount={3}>\n              <CardHeader>\n                <CardTitle>Stacked Cards</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">Multiple layers creating depth and dimension.</p>\n              </CardContent>\n            </StackedCard>\n\n            <Card variant=\"tilt\" animation=\"scale-in\">\n              <CardHeader>\n                <CardTitle>3D Tilt Effect</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">3D perspective transforms on hover.</p>\n              </CardContent>\n            </Card>\n          </div>\n        </section>\n      </ScrollReveal>\n\n      {/* Form Components */}\n      <ScrollReveal direction=\"left\">\n        <section className=\"space-y-8 max-w-2xl mx-auto\">\n          <h2 className=\"text-3xl font-bold text-center\">Enhanced Form Interactions</h2>\n          \n          <Card variant=\"hover-glow\" className=\"p-8\">\n            <div className=\"space-y-6\">\n              <EnhancedInput\n                label=\"Full Name\"\n                variant=\"floating\"\n                icon={<span>👤</span>}\n                value={formData.name}\n                onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                required\n                helperText=\"Enter your full name\"\n              />\n              \n              <EnhancedInput\n                label=\"Email Address\"\n                type=\"email\"\n                variant=\"outlined\"\n                icon={<Mail size={16} />}\n                value={formData.email}\n                onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n                required\n              />\n              \n              <EnhancedInput\n                label=\"Phone Number\"\n                type=\"tel\"\n                variant=\"underlined\"\n                icon={<Phone size={16} />}\n                helperText=\"Optional: for urgent matters\"\n              />\n              \n              <EnhancedTextarea\n                label=\"Message\"\n                variant=\"floating\"\n                rows={4}\n                value={formData.message}\n                onChange={(e) => setFormData(prev => ({ ...prev, message: e.target.value }))}\n                helperText=\"Tell us about your project\"\n                required\n              />\n              \n              <Button \n                variant=\"gradient\" \n                animation=\"ripple\" \n                className=\"w-full\"\n                onClick={() => showToast.success('Form submitted successfully!')}\n              >\n                Send Message\n              </Button>\n            </div>\n          </Card>\n        </section>\n      </ScrollReveal>\n\n      {/* Skeleton Loading States */}\n      {showSkeletons && (\n        <ScrollReveal direction=\"up\">\n          <section className=\"space-y-8\">\n            <h2 className=\"text-3xl font-bold text-center\">Loading States</h2>\n            \n            <SkeletonGroup className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <SkeletonCard />\n              <div className=\"space-y-4\">\n                <Skeleton variant=\"wave\" className=\"h-12 w-12 rounded-full\" />\n                <SkeletonText lines={4} />\n                <Skeleton variant=\"shimmer\" className=\"h-10 w-24\" />\n              </div>\n              <div className=\"space-y-4\">\n                <Skeleton variant=\"glow\" className=\"h-48 w-full\" />\n                <SkeletonText lines={2} />\n              </div>\n            </SkeletonGroup>\n          </section>\n        </ScrollReveal>\n      )}\n\n      {/* Parallax Text Section */}\n      <section className=\"relative min-h-screen flex items-center justify-center bg-muted/20\">\n        <ParallaxText speed={0.3} className=\"text-center\">\n          <h2 className=\"text-8xl font-bold opacity-10 select-none\">PARALLAX</h2>\n        </ParallaxText>\n        \n        <div className=\"relative z-10 text-center space-y-4\">\n          <ScrollReveal direction=\"scale\" cascade>\n            <h3 className=\"text-4xl font-bold\">Smooth Parallax Effects</h3>\n            <p className=\"text-muted-foreground text-lg\">\n              Background elements move at different speeds to create depth\n            </p>\n            <Button \n              variant=\"outline\" \n              animation=\"magnetic\"\n              onClick={() => showToast.info('Scroll to see more parallax effects!')}\n            >\n              Keep Scrolling\n            </Button>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Floating Action Button */}\n      <ExpandableFloatingActionButton\n        mainIcon={<Plus size={20} />}\n        actions={fabActions}\n        position=\"bottom-right\"\n      />\n    </div>\n  );\n};\n\nexport default UXShowcase;","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/components/UserInfo/UserInfo.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'expanded' is defined but never used.","line":9,"column":29,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":37}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Config } from \"../../models\";\n\ninterface UserInfoProps {\n  config: Config;\n  expanded?: boolean;\n}\n\nfunction UserInfo({ config, expanded }: UserInfoProps): React.ReactElement {\n  return (\n    <div className=\"user-info\">\n      <p>{config.userDescription}</p>\n    </div>\n  );\n}\n\nexport default UserInfo;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/context/ThemeContext.tsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":85,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":85,"endColumn":21,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[2317,2373],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":114,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":114,"endColumn":19,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[3215,3271],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"consistent-return","severity":2,"message":"Arrow function expected no return value.","line":145,"column":5,"nodeType":"ReturnStatement","messageId":"unexpectedReturnValue","endLine":149,"endColumn":7}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode,\n} from \"react\";\n\n// Types\nexport type Theme = \"light\" | \"dark\" | \"system\";\nexport type ResolvedTheme = \"light\" | \"dark\";\n\ninterface ThemeContextType {\n  theme: Theme;\n  resolvedTheme: ResolvedTheme;\n  setTheme: (theme: Theme) => void;\n  toggleTheme: () => void;\n  isLoading: boolean;\n}\n\n// Context\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\n// Theme provider component\ninterface ThemeProviderProps {\n  children: ReactNode;\n  defaultTheme?: Theme;\n}\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"system\",\n}: ThemeProviderProps): React.ReactElement {\n  const [theme, setThemeState] = useState<Theme>(defaultTheme);\n  const [resolvedTheme, setResolvedTheme] = useState<ResolvedTheme>(\"light\");\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  // Get system preference\n  const getSystemTheme = (): ResolvedTheme => {\n    if (typeof window === \"undefined\") return \"light\";\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? \"dark\"\n      : \"light\";\n  };\n\n  // Resolve theme to actual light/dark value\n  const resolveTheme = (currentTheme: Theme): ResolvedTheme => {\n    if (currentTheme === \"system\") {\n      return getSystemTheme();\n    }\n    return currentTheme;\n  };\n\n  // Update DOM and resolved theme\n  const updateTheme = (newTheme: Theme) => {\n    const resolved = resolveTheme(newTheme);\n    setResolvedTheme(resolved);\n\n    if (typeof document !== \"undefined\") {\n      const root = document.documentElement;\n      \n      if (newTheme === \"system\") {\n        // Remove explicit dark class and let CSS media query handle it\n        root.classList.remove(\"dark\", \"light\");\n        root.setAttribute(\"data-theme\", \"system\");\n      } else {\n        // Set explicit theme class\n        root.classList.remove(\"dark\", \"light\");\n        root.classList.add(resolved);\n        root.setAttribute(\"data-theme\", resolved);\n      }\n    }\n  };\n\n  // Set theme with persistence\n  const setTheme = (newTheme: Theme) => {\n    setThemeState(newTheme);\n    updateTheme(newTheme);\n\n    // Persist to localStorage\n    if (typeof window !== \"undefined\") {\n      try {\n        localStorage.setItem(\"theme-preference\", newTheme);\n      } catch (error) {\n        console.warn(\"Failed to save theme preference:\", error);\n      }\n    }\n  };\n\n  // Toggle between light, dark, and system\n  const toggleTheme = () => {\n    const themeOrder: Theme[] = [\"light\", \"dark\", \"system\"];\n    const currentIndex = themeOrder.indexOf(theme);\n    const nextIndex = (currentIndex + 1) % themeOrder.length;\n    setTheme(themeOrder[nextIndex]);\n  };\n\n  // Initialize theme on mount\n  useEffect(() => {\n    if (typeof window === \"undefined\") return;\n\n    // Prevent FOUC by temporarily disabling transitions\n    const root = document.documentElement;\n    root.classList.add(\"no-transitions\");\n\n    // Get saved theme preference\n    let savedTheme: Theme = defaultTheme;\n    try {\n      const saved = localStorage.getItem(\"theme-preference\") as Theme;\n      if (saved && [\"light\", \"dark\", \"system\"].includes(saved)) {\n        savedTheme = saved;\n      }\n    } catch (error) {\n      console.warn(\"Failed to load theme preference:\", error);\n    }\n\n    setThemeState(savedTheme);\n    updateTheme(savedTheme);\n\n    // Re-enable transitions after a short delay\n    const enableTransitions = () => {\n      root.classList.remove(\"no-transitions\");\n      setIsLoading(false);\n    };\n    \n    // Use requestAnimationFrame to ensure DOM is updated first\n    requestAnimationFrame(() => {\n      setTimeout(enableTransitions, 50);\n    });\n\n    // Listen for system theme changes\n    const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    const handleChange = () => {\n      if (theme === \"system\") {\n        const newResolved = getSystemTheme();\n        setResolvedTheme(newResolved);\n        // Update DOM to reflect system preference change\n        const docRoot = document.documentElement;\n        docRoot.classList.remove(\"dark\", \"light\");\n        docRoot.setAttribute(\"data-theme\", \"system\");\n      }\n    };\n\n    mediaQuery.addEventListener(\"change\", handleChange);\n    return () => {\n      mediaQuery.removeEventListener(\"change\", handleChange);\n      // Cleanup: ensure transitions are enabled if component unmounts\n      root.classList.remove(\"no-transitions\");\n    };\n  }, [defaultTheme]);\n\n  const value: ThemeContextType = React.useMemo(\n    () => ({\n      theme,\n      resolvedTheme,\n      setTheme,\n      toggleTheme,\n      isLoading,\n    }),\n    [theme, resolvedTheme, setTheme, toggleTheme, isLoading]\n  );\n\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n\n// Custom hook to use theme context\nexport function useTheme(): ThemeContextType {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n}\n\n// Helper hook for theme-aware styles\nexport function useThemeAware() {\n  const { resolvedTheme } = useTheme();\n\n  return {\n    isDark: resolvedTheme === \"dark\",\n    isLight: resolvedTheme === \"light\",\n    resolvedTheme,\n  };\n}\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/hooks/use-mobile.ts","messages":[{"ruleId":"import/prefer-default-export","severity":2,"message":"Prefer default export on a file with single export.","line":5,"column":1,"nodeType":"ExportNamedDeclaration","endLine":22,"endColumn":2}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = useState<boolean>(false)\n\n  useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    \n    // Set initial value\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    \n    mql.addEventListener(\"change\", onChange)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return isMobile\n}","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/layout/index.tsx","messages":[{"ruleId":"import/no-named-as-default","severity":2,"message":"Using exported name 'AppSidebar' as identifier for default import.","line":12,"column":8,"nodeType":"ImportDefaultSpecifier","endLine":12,"endColumn":18},{"ruleId":"react/jsx-boolean-value","severity":2,"message":"Value must be omitted for boolean attribute `smoothAnimation`","line":121,"column":51,"nodeType":"JSXAttribute","messageId":"omitBoolean","endLine":121,"endColumn":73,"fix":{"range":[4454,4461],"text":""}},{"ruleId":"react/jsx-boolean-value","severity":2,"message":"Value must be omitted for boolean attribute `collapsed`","line":147,"column":11,"nodeType":"JSXAttribute","messageId":"omitBoolean","endLine":147,"endColumn":27,"fix":{"range":[5303,5310],"text":""}}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.css\";\nimport \"../styles/globals.css\";\n\n// Modern self-hosted fonts via Fontsource\nimport \"@fontsource-variable/inter\";\nimport \"@fontsource-variable/jetbrains-mono\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport AppSidebar from \"../components/AppSidebar/AppSidebar\";\nimport { SidebarProvider, SidebarInset } from \"../components/ui/sidebar\";\nimport PerformanceMonitor from \"../components/PerformanceMonitor/PerformanceMonitor\";\nimport PerformanceDashboard from \"../components/PerformanceDashboard/PerformanceDashboard\";\n\n// Enhanced UX components\nimport { Toaster } from \"../components/ui/toast\";\nimport PageTransition from \"../components/ui/page-transition\";\nimport ScrollProgress from \"../components/ui/scroll-progress\";\nimport { ThemeProvider } from \"../context/ThemeContext\";\n\ninterface MainLayoutProps {\n  children: React.ReactNode;\n}\n\nfunction MainLayout({ children }: MainLayoutProps): React.ReactElement {\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n\n  useEffect(() => {\n    // Read sidebar state from cookie after hydration\n    const getSidebarStateFromCookie = () => {\n      if (typeof document !== \"undefined\") {\n        const cookies = document.cookie.split(\";\");\n        const sidebarCookie = cookies.find((cookie) =>\n          cookie.trim().startsWith(\"sidebar_state=\"),\n        );\n        if (sidebarCookie) {\n          const value = sidebarCookie.split(\"=\")[1];\n          return value === \"true\";\n        }\n      }\n      return true; // default open if not found\n    };\n\n    setSidebarOpen(getSidebarStateFromCookie());\n\n    // Remove no-transitions class after initial paint\n    const timer = setTimeout(() => {\n      document.body.classList.remove(\"no-transitions\");\n    }, 100);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Handle sidebar state changes and persist to cookie\n  const handleSidebarChange = (open: boolean) => {\n    setSidebarOpen(open);\n    if (typeof document !== \"undefined\") {\n      document.cookie = `sidebar_state=${open}; path=/; max-age=${60 * 60 * 24 * 7}`;\n    }\n  };\n\n  // Critical CSS for above-the-fold content\n  const criticalCSS = `\n    /* Critical layout styles */\n    .min-h-screen{min-height:100vh}\n    .bg-background{background-color:hsl(var(--background))}\n    .pt-20{padding-top:5rem}\n    .pb-16{padding-bottom:4rem}\n    /* Font loading optimization */\n    @font-face{font-family:'Inter Variable';font-style:normal;font-weight:100 900;font-display:swap;src:url('/fonts/inter-variable.woff2') format('woff2')}\n    @font-face{font-family:'JetBrains Mono Variable';font-style:normal;font-weight:100 800;font-display:swap;src:url('/fonts/jetbrains-mono-variable.woff2') format('woff2')}\n  `;\n\n  return (\n    <ThemeProvider>\n      <Helmet>\n        <meta name=\"description\" content={config.siteDescription} />\n        <html lang=\"en\" />\n\n        {/* Critical CSS inlined */}\n        <style>{criticalCSS}</style>\n\n        {/* Font preloading for performance */}\n        <link\n          rel=\"preload\"\n          as=\"font\"\n          type=\"font/woff2\"\n          href=\"/fonts/inter-variable.woff2\"\n          crossOrigin=\"anonymous\"\n        />\n        <link\n          rel=\"preload\"\n          as=\"font\"\n          type=\"font/woff2\"\n          href=\"/fonts/jetbrains-mono-variable.woff2\"\n          crossOrigin=\"anonymous\"\n        />\n\n        {/* Enhanced resource hints */}\n        <link rel=\"dns-prefetch\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"dns-prefetch\" href=\"https://fonts.gstatic.com\" />\n        <link rel=\"dns-prefetch\" href=\"https://cdn.jsdelivr.net\" />\n        <link rel=\"preconnect\" href=\"https://cdn.jsdelivr.net\" />\n\n        {/* Performance optimization headers */}\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover\"\n        />\n        <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\n        <meta name=\"format-detection\" content=\"telephone=no\" />\n\n        {/* Reduced motion support */}\n        <meta name=\"theme-color\" content=\"hsl(var(--background))\" />\n      </Helmet>\n\n      <SidebarProvider open={sidebarOpen} onOpenChange={handleSidebarChange}>\n        {/* Global scroll progress indicator */}\n        <ScrollProgress height={3} position=\"top\" smoothAnimation={true} />\n\n        {/* Skip navigation link for accessibility */}\n        <a href=\"#main-content\" className=\"skip-nav\">\n          Skip to main content\n        </a>\n\n        <AppSidebar />\n        <SidebarInset>\n          <Navbar menuLinks={config.menuLinks} />\n\n          <main id=\"main-content\" className=\"min-h-[calc(100vh-5rem)] pt-20\">\n            <PageTransition className=\"min-h-full\">{children}</PageTransition>\n          </main>\n\n          <Footer />\n        </SidebarInset>\n\n        {/* Performance monitoring components */}\n        <PerformanceMonitor\n          enableAnalytics={process.env.NODE_ENV === \"production\"}\n          reportToConsole={process.env.NODE_ENV === \"development\"}\n        />\n        <PerformanceDashboard\n          enabled={process.env.NODE_ENV === \"development\"}\n          position=\"bottom-right\"\n          collapsed={true}\n        />\n\n        {/* Toast notification system */}\n        <Toaster />\n      </SidebarProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default MainLayout;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/lib/utils.ts","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'clsx' should be listed in the project's dependencies, not devDependencies.","line":1,"column":1,"nodeType":"ImportDeclaration","endLine":1,"endColumn":45},{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'tailwind-merge' should be listed in the project's dependencies, not devDependencies.","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":2,"endColumn":41},{"ruleId":"import/prefer-default-export","severity":2,"message":"Prefer default export on a file with single export.","line":4,"column":1,"nodeType":"ExportNamedDeclaration","endLine":6,"endColumn":2}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/models/content.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/models/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/models/projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/models/siteconfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/pages/about.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/pages/blog.tsx","messages":[{"ruleId":"react/button-has-type","severity":2,"message":"Missing an explicit type attribute for button","line":112,"column":17,"nodeType":"JSXElement","messageId":"missingType","endLine":125,"endColumn":26}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\ninterface BlogPageProps {\n  data: {\n    posts: {\n      edges: Array<{\n        node: {\n          fields: {\n            slug: string;\n            date: string;\n          };\n          excerpt: string;\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            tags: string[];\n            categories?: string[];\n            date: string;\n            thumbnail?: {\n              childImageSharp: {\n                gatsbyImageData: any;\n              };\n            };\n          };\n        };\n      }>;\n    };\n    categories: {\n      group: Array<{\n        fieldValue: string;\n        totalCount: number;\n      }>;\n    };\n  };\n}\n\nfunction BlogPage({ data }: BlogPageProps): React.ReactElement {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentCategories, setCurrentCategories] = useState<string[]>([]);\n  const [posts] = useState(data.posts.edges);\n  const [filteredPosts, setFilteredPosts] = useState(data.posts.edges);\n\n  const categories = data.categories.group;\n  const filterCount = filteredPosts.length;\n\n  const filterPosts = () => {\n    let filtered = posts.filter((post) =>\n      post.node.frontmatter.title\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase()),\n    );\n\n    if (currentCategories.length > 0) {\n      filtered = filtered.filter(\n        (post) =>\n          post.node.frontmatter.categories &&\n          currentCategories.every((cat) =>\n            post.node.frontmatter.categories!.includes(cat),\n          ),\n      );\n    }\n\n    setFilteredPosts(filtered);\n  };\n\n  useEffect(() => {\n    filterPosts();\n  }, [searchTerm, currentCategories]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const updateCategories = (category: string) => {\n    if (!currentCategories.includes(category)) {\n      setCurrentCategories([...currentCategories, category]);\n    } else {\n      setCurrentCategories(currentCategories.filter((cat) => category !== cat));\n    }\n  };\n\n  const handleCategoryClick = (categoryValue: string) => {\n    updateCategories(categoryValue);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, categoryValue: string) => {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      event.preventDefault();\n      handleCategoryClick(categoryValue);\n    }\n  };\n\n  return (\n    <Layout>\n      <Helmet title={`Articles – ${config.siteTitle}`} />\n      <SEO />\n      <div className=\"container mx-auto px-4 py-6 max-w-4xl\">\n        <div className=\"max-w-2xl mx-auto\">\n          <h1 className=\"text-5xl font-bold mb-4\">Articles</h1>\n\n          <div className=\"flex flex-wrap gap-2 mb-6\">\n            {categories.map((category) => {\n              const active = currentCategories.includes(category.fieldValue);\n\n              return (\n                <button\n                  key={category.fieldValue}\n                  className={`px-3 py-1 rounded-full text-sm transition-colors ${\n                    active\n                      ? \"bg-primary text-primary-foreground\"\n                      : \"bg-secondary text-secondary-foreground hover:bg-secondary/80\"\n                  }`}\n                  onClick={() => handleCategoryClick(category.fieldValue)}\n                  onKeyDown={(event) =>\n                    handleKeyDown(event, category.fieldValue)\n                  }\n                >\n                  {category.fieldValue}\n                </button>\n              );\n            })}\n          </div>\n\n          <div className=\"flex items-center gap-4 mb-6\">\n            <input\n              className=\"flex-1 px-3 py-2 bg-background border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring focus:border-transparent\"\n              type=\"text\"\n              name=\"searchTerm\"\n              value={searchTerm}\n              placeholder=\"Type here to filter posts...\"\n              onChange={handleChange}\n            />\n            <div className=\"px-3 py-2 bg-muted rounded-md font-medium\">\n              {filterCount}\n            </div>\n          </div>\n\n          <PostListing postEdges={filteredPosts} expanded />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  query BlogQuery {\n    posts: allMarkdownRemark(\n      limit: 2000\n      sort: { fields: { date: DESC } }\n      filter: { frontmatter: { type: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt(pruneLength: 180)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(layout: FIXED, width: 70, height: 70)\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n    categories: allMarkdownRemark(limit: 2000) {\n      group(field: { frontmatter: { categories: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/pages/index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/services/appConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/services/relatedPostsUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/services/tableOfContentsUtils.ts","messages":[{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":22,"column":21,"nodeType":"CallExpression","messageId":"missingRadix","endLine":22,"endColumn":56,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[734,734],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'heading'.","line":28,"column":9,"nodeType":"Identifier","messageId":"assignmentToFunctionParamProp","endLine":28,"endColumn":16},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":34,"column":16,"nodeType":"CallExpression","messageId":"missingRadix","endLine":34,"endColumn":51,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[1161,1161],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'heading'.","line":89,"column":7,"nodeType":"Identifier","messageId":"assignmentToFunctionParamProp","endLine":89,"endColumn":14}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { TableOfContentsHeading } from \"../models\";\n\n/**\n * Extract headings from HTML content and create a hierarchical structure\n */\nexport function extractHeadings(html: string, maxDepth: number = 4): TableOfContentsHeading[] {\n  if (typeof window === \"undefined\") {\n    return []; // Return empty array during SSR\n  }\n\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, \"text/html\");\n  \n  // Find all headings (h1-h6)\n  const headingElements = Array.from(\n    doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\")\n  ) as HTMLHeadingElement[];\n\n  // Filter by max depth and ensure IDs exist\n  const validHeadings = headingElements\n    .filter((heading) => {\n      const level = parseInt(heading.tagName.charAt(1));\n      return level <= maxDepth;\n    })\n    .map((heading, index) => {\n      // Ensure heading has an ID\n      if (!heading.id) {\n        heading.id = `heading-${index}-${heading.textContent?.toLowerCase().replace(/\\s+/g, \"-\").replace(/[^\\w-]/g, \"\")}`;\n      }\n      return {\n        element: heading,\n        id: heading.id,\n        title: heading.textContent?.trim() || \"\",\n        level: parseInt(heading.tagName.charAt(1)),\n      };\n    });\n\n  // Build hierarchical structure\n  const result: TableOfContentsHeading[] = [];\n  const stack: TableOfContentsHeading[] = [];\n\n  validHeadings.forEach((heading) => {\n    const tocHeading: TableOfContentsHeading = {\n      id: heading.id,\n      title: heading.title,\n      level: heading.level,\n      children: [],\n    };\n\n    // Find the correct parent in the stack\n    while (stack.length > 0 && stack[stack.length - 1].level >= heading.level) {\n      stack.pop();\n    }\n\n    if (stack.length === 0) {\n      // This is a root-level heading\n      result.push(tocHeading);\n    } else {\n      // This is a child heading\n      const parent = stack[stack.length - 1];\n      parent.children = parent.children || [];\n      parent.children.push(tocHeading);\n    }\n\n    stack.push(tocHeading);\n  });\n\n  return result;\n}\n\n/**\n * Generate IDs for headings in HTML content if they don't exist\n */\nexport function ensureHeadingIds(html: string): string {\n  if (typeof window === \"undefined\") {\n    return html; // Return unchanged during SSR\n  }\n\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, \"text/html\");\n  \n  const headingElements = Array.from(\n    doc.querySelectorAll(\"h1, h2, h3, h4, h5, h6\")\n  ) as HTMLHeadingElement[];\n\n  headingElements.forEach((heading, index) => {\n    if (!heading.id) {\n      const id = `heading-${index}-${heading.textContent?.toLowerCase().replace(/\\s+/g, \"-\").replace(/[^\\w-]/g, \"\")}`;\n      heading.id = id;\n    }\n  });\n\n  return doc.body.innerHTML;\n}\n\n/**\n * Calculate reading time based on content\n */\nexport function calculateReadingTime(html: string, wordsPerMinute: number = 200): number {\n  if (typeof window === \"undefined\") {\n    return 0; // Return 0 during SSR\n  }\n\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, \"text/html\");\n  const text = doc.body.textContent || \"\";\n  const wordCount = text.trim().split(/\\s+/).length;\n  \n  return Math.ceil(wordCount / wordsPerMinute);\n}","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/templates/category.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'CardDescription' is defined but never used.","line":7,"column":29,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":44},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'CardHeader' is defined but never used.","line":7,"column":46,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":56},{"ruleId":"react/jsx-boolean-value","severity":2,"message":"Value must be omitted for boolean attribute `showReadingTime`","line":164,"column":13,"nodeType":"JSXAttribute","messageId":"omitBoolean","endLine":164,"endColumn":35,"fix":{"range":[5833,5840],"text":""}}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport DynamicBreadcrumb from \"../components/Breadcrumb/Breadcrumb\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"../components/ui/card\";\nimport { Badge } from \"../components/ui/badge\";\nimport { Button } from \"../components/ui/button\";\nimport config from \"../../data/SiteConfig\";\n\ninterface CategoryTemplateProps {\n  pageContext: {\n    category: string;\n  };\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          fields: {\n            slug: string;\n            date: string;\n          };\n          excerpt: string;\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            tags: string[];\n            cover?: string;\n            date: string;\n          };\n        };\n      }>;\n    };\n  };\n}\n\nfunction CategoryTemplate({\n  pageContext,\n  data,\n}: CategoryTemplateProps): React.ReactElement {\n  const { category } = pageContext;\n  const { edges: postEdges } = data.allMarkdownRemark;\n  const [viewMode, setViewMode] = useState<'cards' | 'simple'>('cards');\n\n  // Create breadcrumb items\n  const breadcrumbItems = [\n    { label: \"Blog\", href: \"/blog\" },\n    { label: `Category: ${category}` }\n  ];\n\n  // Get unique tags from all posts in this category\n  const allTags = Array.from(\n    new Set(\n      postEdges.flatMap(edge => edge.node.frontmatter.tags || [])\n    )\n  ).sort();\n\n  return (\n    <Layout>\n      <div className=\"category-container\">\n        <Helmet\n          title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n        />\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          {/* Breadcrumb Navigation */}\n          <DynamicBreadcrumb items={breadcrumbItems} className=\"mb-6\" />\n          \n          {/* Category Header */}\n          <div className=\"mb-8\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div>\n                <h1 className=\"text-4xl font-bold mb-2\">\n                  <Badge variant=\"outline\" className=\"mr-3 text-sm\">\n                    Category\n                  </Badge>\n                  {category}\n                </h1>\n                <p className=\"text-lg text-muted-foreground\">\n                  {data.allMarkdownRemark.totalCount} post{data.allMarkdownRemark.totalCount !== 1 ? 's' : ''} in this category\n                </p>\n              </div>\n              \n              <div className=\"flex items-center gap-2\">\n                <Button\n                  variant={viewMode === 'cards' ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setViewMode('cards')}\n                >\n                  Cards\n                </Button>\n                <Button\n                  variant={viewMode === 'simple' ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setViewMode('simple')}\n                >\n                  List\n                </Button>\n              </div>\n            </div>\n\n            {/* Category Stats */}\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div>\n                    <CardTitle className=\"text-sm font-medium text-muted-foreground mb-1\">\n                      TOTAL POSTS\n                    </CardTitle>\n                    <div className=\"text-2xl font-bold\">{data.allMarkdownRemark.totalCount}</div>\n                  </div>\n                  \n                  <div>\n                    <CardTitle className=\"text-sm font-medium text-muted-foreground mb-1\">\n                      RELATED TAGS\n                    </CardTitle>\n                    <div className=\"text-2xl font-bold\">{allTags.length}</div>\n                  </div>\n                  \n                  <div>\n                    <CardTitle className=\"text-sm font-medium text-muted-foreground mb-1\">\n                      READING TIME\n                    </CardTitle>\n                    <div className=\"text-2xl font-bold\">\n                      {Math.round(postEdges.reduce((total, edge) => total + edge.node.timeToRead, 0))} min\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Related Tags */}\n                {allTags.length > 0 && (\n                  <div className=\"mt-6 pt-6 border-t\">\n                    <CardTitle className=\"text-sm font-medium text-muted-foreground mb-3\">\n                      RELATED TAGS\n                    </CardTitle>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {allTags.slice(0, 12).map((tag) => (\n                        <Badge key={tag} variant=\"secondary\" className=\"hover:bg-primary/20 transition-colors\">\n                          <a href={`/tags/${tag.toLowerCase()}`} className=\"text-inherit no-underline\">\n                            {tag}\n                          </a>\n                        </Badge>\n                      ))}\n                      {allTags.length > 12 && (\n                        <Badge variant=\"outline\">\n                          +{allTags.length - 12} more\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n          \n          {/* Posts Listing */}\n          <PostListing \n            postEdges={postEdges} \n            simple={viewMode === 'simple'}\n            expanded={viewMode === 'cards'}\n            showExcerpt={viewMode === 'cards'}\n            showTags={viewMode === 'cards'}\n            showReadingTime={true}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default CategoryTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: { date: DESC } }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/templates/post.tsx","messages":[{"ruleId":"react/no-danger","severity":1,"message":"Dangerous property 'dangerouslySetInnerHTML' found","line":196,"column":21,"nodeType":"JSXAttribute","messageId":"dangerousProp","endLine":196,"endColumn":72}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport Layout from \"../layout\";\nimport UserInfo from \"../components/UserInfo/UserInfo\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\nimport SEO from \"../components/SEO/SEO\";\nimport DynamicBreadcrumb from \"../components/Breadcrumb/Breadcrumb\";\nimport BreadcrumbSEO from \"../components/BreadcrumbSEO/BreadcrumbSEO\";\nimport TableOfContents from \"../components/TableOfContents/TableOfContents\";\nimport RelatedPosts from \"../components/RelatedPosts/RelatedPosts\";\nimport PostNavigation from \"../components/PostNavigation/PostNavigation\";\nimport ReadingProgress from \"../components/ReadingProgress/ReadingProgress\";\nimport BackToTop from \"../components/BackToTop/BackToTop\";\nimport config from \"../../data/SiteConfig\";\nimport { formatDate, editOnGithub } from \"../services/appConstants\";\nimport { extractHeadings, ensureHeadingIds } from \"../services/tableOfContentsUtils\";\nimport { PostEdge } from \"../models\";\nimport \"./post.css\";\n\ninterface PostTemplateProps {\n  data: {\n    markdownRemark: {\n      html: string;\n      timeToRead: number;\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        tags: string[];\n        time: string;\n        thumbnail?: any;\n        category?: string;\n        id?: string;\n        category_id?: string;\n      };\n      fields: {\n        slug: string;\n        date: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: PostEdge[];\n    };\n    previous?: {\n      frontmatter: {\n        title: string;\n      };\n      fields: {\n        slug: string;\n      };\n    };\n    next?: {\n      frontmatter: {\n        title: string;\n      };\n      fields: {\n        slug: string;\n      };\n    };\n  };\n  pageContext: {\n    slug: string;\n  };\n}\n\nfunction PostTemplate({\n  data,\n  pageContext,\n}: PostTemplateProps): React.ReactElement {\n  const { slug } = pageContext;\n  const postNode = data.markdownRemark;\n  const post = postNode.frontmatter;\n  const [processedHtml, setProcessedHtml] = useState(postNode.html);\n  const [headings, setHeadings] = useState([]);\n  let thumbnail;\n  const date = formatDate(post.date);\n\n  const githubLink = editOnGithub(post);\n\n  if (!post.id) {\n    post.id = slug;\n  }\n  if (!post.category_id) {\n    post.category_id = config.postDefaultCategoryID;\n  }\n  if (post.thumbnail) {\n    thumbnail = getImage(post.thumbnail);\n  }\n\n  // Process HTML and extract headings for TOC\n  useEffect(() => {\n    const htmlWithIds = ensureHeadingIds(postNode.html);\n    setProcessedHtml(htmlWithIds);\n    \n    // Extract headings for TOC\n    const extractedHeadings = extractHeadings(htmlWithIds, 4);\n    setHeadings(extractedHeadings);\n  }, [postNode.html]);\n\n  // Navigation data\n  const navigation = {\n    previous: data.previous ? {\n      slug: data.previous.fields.slug,\n      title: data.previous.frontmatter.title,\n    } : undefined,\n    next: data.next ? {\n      slug: data.next.fields.slug,\n      title: data.next.frontmatter.title,\n    } : undefined,\n  };\n\n  // Current post data for related posts\n  const currentPost = {\n    slug: postNode.fields.slug,\n    tags: post.tags || [],\n    category: post.category,\n  };\n\n  // Create breadcrumb items\n  const breadcrumbItems = [\n    { label: \"Blog\", href: \"/blog\" },\n    ...(post.category ? [{ label: post.category, href: `/categories/${post.category.toLowerCase().replace(/\\s+/g, \"-\")}` }] : []),\n    { label: post.title }\n  ];\n\n  // Create SEO breadcrumb items\n  const breadcrumbSEOItems = [\n    { name: \"Home\", item: `${config.siteUrl}` },\n    { name: \"Blog\", item: `${config.siteUrl}/blog` },\n    ...(post.category ? [{ name: post.category, item: `${config.siteUrl}/categories/${post.category.toLowerCase().replace(/\\s+/g, \"-\")}` }] : []),\n    { name: post.title, item: `${config.siteUrl}${slug}` }\n  ];\n\n  return (\n    <Layout>\n      <div>\n        <Helmet>\n          <title>{`${post.title} | ${config.siteTitle}`}</title>\n        </Helmet>\n        <SEO postPath={slug} postNode={postNode} postSEO />\n        <BreadcrumbSEO items={breadcrumbSEOItems} />\n        \n        {/* Reading Progress Bar */}\n        <ReadingProgress />\n\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"max-w-6xl mx-auto\">\n            {/* Breadcrumb Navigation */}\n            <DynamicBreadcrumb items={breadcrumbItems} className=\"mb-6\" />\n            \n            <div className=\"grid grid-cols-1 xl:grid-cols-4 gap-8\">\n              {/* Main Content Area */}\n              <div className=\"xl:col-span-3\">\n                <article>\n                  <header className=\"mb-8\">\n                    <div className=\"flex items-start gap-8 mb-6\">\n                      <div className=\"flex-shrink-0\">\n                        {thumbnail ? (\n                          <GatsbyImage \n                            image={thumbnail} \n                            alt=\"\"\n                            className=\"w-28 h-28 rounded-lg object-cover\"\n                          />\n                        ) : (\n                          <div className=\"w-28 h-28 bg-muted rounded-lg flex items-center justify-center\">\n                            <span className=\"text-muted-foreground text-2xl\">📄</span>\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <h1 className=\"text-3xl font-bold mb-4 text-foreground\">{post.title}</h1>\n                        <div className=\"text-sm text-muted-foreground mb-4 space-y-1\">\n                          <div>\n                            By <strong>Sai Nimmagadda</strong> on {date} | {post.time}\n                          </div>\n                          <a\n                            className=\"text-primary hover:text-primary/80 transition-colors\"\n                            href={githubLink}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                          >\n                            Edit on Github ✍️\n                          </a>\n                        </div>\n                        <PostTags tags={post.tags} />\n                      </div>\n                    </div>\n                  </header>\n                  \n                  {/* Article Content */}\n                  <div\n                    className=\"prose prose-lg max-w-none dark:prose-invert font-serif\"\n                    dangerouslySetInnerHTML={{ __html: processedHtml }}\n                  />\n                  \n                  {/* Post Footer */}\n                  <div className=\"mt-12 pt-8 border-t border-border space-y-8\">\n                    <PostTags tags={post.tags} />\n                    <SocialLinks postPath={slug} postNode={postNode} />\n                  </div>\n                </article>\n\n                {/* Post Navigation */}\n                <PostNavigation \n                  previous={navigation.previous}\n                  next={navigation.next}\n                  className=\"mt-12\"\n                />\n\n                {/* Related Posts */}\n                <RelatedPosts \n                  currentPost={currentPost}\n                  allPosts={data.allMarkdownRemark.edges}\n                  limit={4}\n                  className=\"mt-12\"\n                />\n\n                {/* Author Info */}\n                <div className=\"mt-12\">\n                  <UserInfo config={config} />\n                </div>\n              </div>\n\n              {/* Sidebar */}\n              <div className=\"xl:col-span-1\">\n                <div className=\"space-y-8\">\n                  {/* Table of Contents */}\n                  {headings.length > 0 && (\n                    <TableOfContents \n                      headings={headings}\n                      className=\"hidden xl:block\"\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Back to Top Button */}\n        <BackToTop />\n      </div>\n    </Layout>\n  );\n}\n\nexport default PostTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!, $previousSlug: String, $nextSlug: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(layout: FIXED, width: 150, height: 140)\n          }\n        }\n        slug\n        cover\n        date\n        category\n        tags\n        time\n      }\n      fields {\n        slug\n        date\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: { date: DESC } }\n      filter: { frontmatter: { type: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            category\n            cover\n            date\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(layout: FIXED, width: 50, height: 50)\n              }\n            }\n          }\n        }\n      }\n    }\n    previous: markdownRemark(fields: { slug: { eq: $previousSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/src/templates/tag.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'CardDescription' is defined but never used.","line":7,"column":29,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":44},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'CardHeader' is defined but never used.","line":7,"column":46,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":56},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":95,"column":124,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&quot;"},"fix":{"range":[2830,2844],"text":" tagged with &quot;"},"desc":"Replace with `&quot;`."},{"messageId":"replaceWithAlt","data":{"alt":"&ldquo;"},"fix":{"range":[2830,2844],"text":" tagged with &ldquo;"},"desc":"Replace with `&ldquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#34;"},"fix":{"range":[2830,2844],"text":" tagged with &#34;"},"desc":"Replace with `&#34;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rdquo;"},"fix":{"range":[2830,2844],"text":" tagged with &rdquo;"},"desc":"Replace with `&rdquo;`."}]},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":95,"column":130,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&quot;"},"fix":{"range":[2849,2867],"text":"&quot;\n                "},"desc":"Replace with `&quot;`."},{"messageId":"replaceWithAlt","data":{"alt":"&ldquo;"},"fix":{"range":[2849,2867],"text":"&ldquo;\n                "},"desc":"Replace with `&ldquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#34;"},"fix":{"range":[2849,2867],"text":"&#34;\n                "},"desc":"Replace with `&#34;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rdquo;"},"fix":{"range":[2849,2867],"text":"&rdquo;\n                "},"desc":"Replace with `&rdquo;`."}]},{"ruleId":"react/jsx-boolean-value","severity":2,"message":"Value must be omitted for boolean attribute `showReadingTime`","line":199,"column":13,"nodeType":"JSXAttribute","messageId":"omitBoolean","endLine":199,"endColumn":35,"fix":{"range":[7172,7179],"text":""}}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport DynamicBreadcrumb from \"../components/Breadcrumb/Breadcrumb\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"../components/ui/card\";\nimport { Badge } from \"../components/ui/badge\";\nimport { Button } from \"../components/ui/button\";\nimport config from \"../../data/SiteConfig\";\n\ninterface TagTemplateProps {\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          fields: {\n            slug: string;\n            date: string;\n          };\n          excerpt: string;\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            tags: string[];\n            cover?: string;\n            date: string;\n            thumbnail?: {\n              childImageSharp: {\n                gatsbyImageData: any;\n              };\n            };\n          };\n        };\n      }>;\n    };\n  };\n}\n\nfunction TagTemplate({\n  pageContext,\n  data,\n}: TagTemplateProps): React.ReactElement {\n  const { tag } = pageContext;\n  const postEdges = data.allMarkdownRemark.edges;\n  const [viewMode, setViewMode] = useState<'cards' | 'simple'>('cards');\n\n  // Create breadcrumb items\n  const breadcrumbItems = [\n    { label: \"Blog\", href: \"/blog\" },\n    { label: `Tag: ${tag}` }\n  ];\n\n  // Get unique categories from all posts with this tag\n  const allCategories = Array.from(\n    new Set(\n      postEdges\n        .map(edge => edge.node.frontmatter.category)\n        .filter(Boolean)\n    )\n  ).sort();\n\n  // Get related tags (tags that appear with this tag)\n  const relatedTags = Array.from(\n    new Set(\n      postEdges.flatMap(edge => \n        (edge.node.frontmatter.tags || []).filter(t => t !== tag)\n      )\n    )\n  ).sort();\n\n  return (\n    <Layout>\n      <div className=\"tag-container\">\n        <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n          {/* Breadcrumb Navigation */}\n          <DynamicBreadcrumb items={breadcrumbItems} className=\"mb-6\" />\n          \n          {/* Tag Header */}\n          <div className=\"mb-8\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div>\n                <h1 className=\"text-4xl font-bold mb-2\">\n                  <Badge variant=\"outline\" className=\"mr-3 text-sm\">\n                    Tag\n                  </Badge>\n                  {tag}\n                </h1>\n                <p className=\"text-lg text-muted-foreground\">\n                  {data.allMarkdownRemark.totalCount} post{data.allMarkdownRemark.totalCount !== 1 ? 's' : ''} tagged with \"{tag}\"\n                </p>\n              </div>\n              \n              <div className=\"flex items-center gap-2\">\n                <Button\n                  variant={viewMode === 'cards' ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setViewMode('cards')}\n                >\n                  Cards\n                </Button>\n                <Button\n                  variant={viewMode === 'simple' ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setViewMode('simple')}\n                >\n                  List\n                </Button>\n              </div>\n            </div>\n\n            {/* Tag Stats */}\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div>\n                    <CardTitle className=\"text-sm font-medium text-muted-foreground mb-1\">\n                      TOTAL POSTS\n                    </CardTitle>\n                    <div className=\"text-2xl font-bold\">{data.allMarkdownRemark.totalCount}</div>\n                  </div>\n                  \n                  <div>\n                    <CardTitle className=\"text-sm font-medium text-muted-foreground mb-1\">\n                      CATEGORIES\n                    </CardTitle>\n                    <div className=\"text-2xl font-bold\">{allCategories.length}</div>\n                  </div>\n                  \n                  <div>\n                    <CardTitle className=\"text-sm font-medium text-muted-foreground mb-1\">\n                      READING TIME\n                    </CardTitle>\n                    <div className=\"text-2xl font-bold\">\n                      {Math.round(postEdges.reduce((total, edge) => total + edge.node.timeToRead, 0))} min\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Related Content */}\n                <div className=\"mt-6 pt-6 border-t space-y-4\">\n                  {/* Categories */}\n                  {allCategories.length > 0 && (\n                    <div>\n                      <CardTitle className=\"text-sm font-medium text-muted-foreground mb-3\">\n                        CATEGORIES\n                      </CardTitle>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {allCategories.map((category) => (\n                          <Badge key={category} variant=\"secondary\" className=\"hover:bg-primary/20 transition-colors\">\n                            <a href={`/categories/${category?.toLowerCase()}`} className=\"text-inherit no-underline\">\n                              {category}\n                            </a>\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Related Tags */}\n                  {relatedTags.length > 0 && (\n                    <div>\n                      <CardTitle className=\"text-sm font-medium text-muted-foreground mb-3\">\n                        RELATED TAGS\n                      </CardTitle>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {relatedTags.slice(0, 10).map((relatedTag) => (\n                          <Badge key={relatedTag} variant=\"outline\" className=\"hover:bg-primary/20 transition-colors\">\n                            <a href={`/tags/${relatedTag.toLowerCase()}`} className=\"text-inherit no-underline\">\n                              {relatedTag}\n                            </a>\n                          </Badge>\n                        ))}\n                        {relatedTags.length > 10 && (\n                          <Badge variant=\"outline\">\n                            +{relatedTags.length - 10} more\n                          </Badge>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n          \n          {/* Posts Listing */}\n          <PostListing \n            postEdges={postEdges} \n            simple={viewMode === 'simple'}\n            expanded={viewMode === 'cards'}\n            showExcerpt={viewMode === 'cards'}\n            showTags={viewMode === 'cards'}\n            showReadingTime={true}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default TagTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(layout: FIXED, width: 50, height: 50)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","usedDeprecatedRules":[{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/saiguy/Documents/programming/snimmagadda1/s11a.com/tailwind.config.js","messages":[{"ruleId":"no-dupe-keys","severity":2,"message":"Duplicate key 'primary-foreground'.","line":70,"column":7,"nodeType":"ObjectExpression","messageId":"unexpected","endLine":70,"endColumn":27},{"ruleId":"no-dupe-keys","severity":2,"message":"Duplicate key 'accent-foreground'.","line":71,"column":7,"nodeType":"ObjectExpression","messageId":"unexpected","endLine":71,"endColumn":26},{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'tailwindcss-animate' should be listed in the project's dependencies, not devDependencies.","line":399,"column":13,"nodeType":"CallExpression","endLine":399,"endColumn":43},{"ruleId":"global-require","severity":2,"message":"Unexpected require().","line":399,"column":13,"nodeType":"CallExpression","messageId":"unexpected","endLine":399,"endColumn":43},{"ruleId":"global-require","severity":2,"message":"Unexpected require().","line":399,"column":45,"nodeType":"CallExpression","messageId":"unexpected","endLine":399,"endColumn":79}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    \"./src/pages/**/*.{js,jsx,ts,tsx}\",\n    \"./src/components/**/*.{js,jsx,ts,tsx}\",\n    \"./src/templates/**/*.{js,jsx,ts,tsx}\",\n    \"./src/layout/**/*.{js,jsx,ts,tsx}\",\n  ],\n  prefix: \"\",\n  theme: {\n  \tcontainer: {\n  \t\tcenter: true,\n  \t\tpadding: '2rem',\n  \t\tscreens: {\n  \t\t\t'2xl': '1400px'\n  \t\t}\n  \t},\n  \textend: {\n  \t\tscreens: {\n  \t\t\txs: '480px',\n  \t\t\tsm: '600px',\n  \t\t\tmd: '800px',\n  \t\t\tlg: '1000px',\n  \t\t\txl: '1200px'\n  \t\t},\n  \t\tcolors: {\n  \t\t\tborder: 'hsl(var(--border))',\n  \t\t\tinput: 'hsl(var(--input))',\n  \t\t\tring: 'hsl(var(--ring))',\n  \t\t\tbackground: 'hsl(var(--background))',\n  \t\t\tforeground: 'hsl(var(--foreground))',\n  \t\t\tprimary: {\n  \t\t\t\tDEFAULT: 'hsl(var(--primary))',\n  \t\t\t\tforeground: 'hsl(var(--primary-foreground))'\n  \t\t\t},\n  \t\t\tsecondary: {\n  \t\t\t\tDEFAULT: 'hsl(var(--secondary))',\n  \t\t\t\tforeground: 'hsl(var(--secondary-foreground))'\n  \t\t\t},\n  \t\t\tdestructive: {\n  \t\t\t\tDEFAULT: 'hsl(var(--destructive))',\n  \t\t\t\tforeground: 'hsl(var(--destructive-foreground))'\n  \t\t\t},\n  \t\t\tmuted: {\n  \t\t\t\tDEFAULT: 'hsl(var(--muted))',\n  \t\t\t\tforeground: 'hsl(var(--muted-foreground))'\n  \t\t\t},\n  \t\t\taccent: {\n  \t\t\t\tDEFAULT: 'hsl(var(--accent))',\n  \t\t\t\tforeground: 'hsl(var(--accent-foreground))'\n  \t\t\t},\n  \t\t\tpopover: {\n  \t\t\t\tDEFAULT: 'hsl(var(--popover))',\n  \t\t\t\tforeground: 'hsl(var(--popover-foreground))'\n  \t\t\t},\n  \t\t\tcard: {\n  \t\t\t\tDEFAULT: 'hsl(var(--card))',\n  \t\t\t\tforeground: 'hsl(var(--card-foreground))'\n  \t\t\t},\n  \t\t\tsidebar: {\n  \t\t\t\tDEFAULT: 'hsl(var(--sidebar-background))',\n  \t\t\t\tforeground: 'hsl(var(--sidebar-foreground))',\n  \t\t\t\tprimary: 'hsl(var(--sidebar-primary))',\n  \t\t\t\t'primary-foreground': 'hsl(var(--sidebar-primary-foreground))',\n  \t\t\t\taccent: 'hsl(var(--sidebar-accent))',\n  \t\t\t\t'accent-foreground': 'hsl(var(--sidebar-accent-foreground))',\n  \t\t\t\tborder: 'hsl(var(--sidebar-border))',\n  \t\t\t\tring: 'hsl(var(--sidebar-ring))',\n  \t\t\t\t'primary-foreground': 'hsl(var(--sidebar-primary-foreground))',\n  \t\t\t\t'accent-foreground': 'hsl(var(--sidebar-accent-foreground))'\n  \t\t\t}\n  \t\t},\n  \t\tborderRadius: {\n  \t\t\tlg: 'var(--radius)',\n  \t\t\tmd: 'calc(var(--radius) - 2px)',\n  \t\t\tsm: 'calc(var(--radius) - 4px)'\n  \t\t},\n  \t\tfontFamily: {\n  \t\t\tsans: [\n  \t\t\t\t'Inter Variable',\n  \t\t\t\t'Inter',\n  \t\t\t\t'-apple-system',\n  \t\t\t\t'BlinkMacSystemFont',\n  \t\t\t\t'Segoe UI',\n  \t\t\t\t'Roboto',\n  \t\t\t\t'Helvetica Neue',\n  \t\t\t\t'Arial',\n  \t\t\t\t'sans-serif'\n  \t\t\t],\n  \t\t\tserif: [\n  \t\t\t\t'Georgia',\n  \t\t\t\t'Times New Roman',\n  \t\t\t\t'Times',\n  \t\t\t\t'serif'\n  \t\t\t],\n  \t\t\tmono: [\n  \t\t\t\t'JetBrains Mono Variable',\n  \t\t\t\t'JetBrains Mono',\n  \t\t\t\t'Menlo',\n  \t\t\t\t'Monaco',\n  \t\t\t\t'Consolas',\n  \t\t\t\t'Liberation Mono',\n  \t\t\t\t'Courier New',\n  \t\t\t\t'monospace'\n  \t\t\t]\n  \t\t},\n  \t\tkeyframes: {\n  \t\t\t'accordion-down': {\n  \t\t\t\tfrom: {\n  \t\t\t\t\theight: '0'\n  \t\t\t\t},\n  \t\t\t\tto: {\n  \t\t\t\t\theight: 'var(--radix-accordion-content-height)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'accordion-up': {\n  \t\t\t\tfrom: {\n  \t\t\t\t\theight: 'var(--radix-accordion-content-height)'\n  \t\t\t\t},\n  \t\t\t\tto: {\n  \t\t\t\t\theight: '0'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'fade-in': {\n  \t\t\t\t'0%': {\n  \t\t\t\t\topacity: '0',\n  \t\t\t\t\ttransform: 'translateY(20px)'\n  \t\t\t\t},\n  \t\t\t\t'100%': {\n  \t\t\t\t\topacity: '1',\n  \t\t\t\t\ttransform: 'translateY(0)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'fade-in-up': {\n  \t\t\t\t'0%': {\n  \t\t\t\t\topacity: '0',\n  \t\t\t\t\ttransform: 'translateY(40px)'\n  \t\t\t\t},\n  \t\t\t\t'100%': {\n  \t\t\t\t\topacity: '1',\n  \t\t\t\t\ttransform: 'translateY(0)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'slide-in-right': {\n  \t\t\t\t'0%': {\n  \t\t\t\t\topacity: '0',\n  \t\t\t\t\ttransform: 'translateX(40px)'\n  \t\t\t\t},\n  \t\t\t\t'100%': {\n  \t\t\t\t\topacity: '1',\n  \t\t\t\t\ttransform: 'translateX(0)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'slide-in-left': {\n  \t\t\t\t'0%': {\n  \t\t\t\t\topacity: '0',\n  \t\t\t\t\ttransform: 'translateX(-40px)'\n  \t\t\t\t},\n  \t\t\t\t'100%': {\n  \t\t\t\t\topacity: '1',\n  \t\t\t\t\ttransform: 'translateX(0)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'scale-in': {\n  \t\t\t\t'0%': {\n  \t\t\t\t\topacity: '0',\n  \t\t\t\t\ttransform: 'scale(0.9)'\n  \t\t\t\t},\n  \t\t\t\t'100%': {\n  \t\t\t\t\topacity: '1',\n  \t\t\t\t\ttransform: 'scale(1)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'bounce-in': {\n  \t\t\t\t'0%': {\n  \t\t\t\t\topacity: '0',\n  \t\t\t\t\ttransform: 'scale(0.3)'\n  \t\t\t\t},\n  \t\t\t\t'50%': {\n  \t\t\t\t\topacity: '0.9',\n  \t\t\t\t\ttransform: 'scale(1.05)'\n  \t\t\t\t},\n  \t\t\t\t'70%': {\n  \t\t\t\t\topacity: '1',\n  \t\t\t\t\ttransform: 'scale(0.98)'\n  \t\t\t\t},\n  \t\t\t\t'100%': {\n  \t\t\t\t\topacity: '1',\n  \t\t\t\t\ttransform: 'scale(1)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'shimmer': {\n  \t\t\t\t'0%': {\n  \t\t\t\t\ttransform: 'translateX(-100%)'\n  \t\t\t\t},\n  \t\t\t\t'100%': {\n  \t\t\t\t\ttransform: 'translateX(100%)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'glow': {\n  \t\t\t\t'0%, 100%': {\n  \t\t\t\t\topacity: '0.6',\n  \t\t\t\t\ttransform: 'scale(1)'\n  \t\t\t\t},\n  \t\t\t\t'50%': {\n  \t\t\t\t\topacity: '1',\n  \t\t\t\t\ttransform: 'scale(1.02)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'float': {\n  \t\t\t\t'0%, 100%': {\n  \t\t\t\t\ttransform: 'translateY(0px)'\n  \t\t\t\t},\n  \t\t\t\t'50%': {\n  \t\t\t\t\ttransform: 'translateY(-6px)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'wobble': {\n  \t\t\t\t'0%, 100%': {\n  \t\t\t\t\ttransform: 'rotate(0deg)'\n  \t\t\t\t},\n  \t\t\t\t'15%': {\n  \t\t\t\t\ttransform: 'rotate(-1deg)'\n  \t\t\t\t},\n  \t\t\t\t'30%': {\n  \t\t\t\t\ttransform: 'rotate(1deg)'\n  \t\t\t\t},\n  \t\t\t\t'45%': {\n  \t\t\t\t\ttransform: 'rotate(-0.5deg)'\n  \t\t\t\t},\n  \t\t\t\t'60%': {\n  \t\t\t\t\ttransform: 'rotate(0.5deg)'\n  \t\t\t\t},\n  \t\t\t\t'75%': {\n  \t\t\t\t\ttransform: 'rotate(-0.25deg)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'ripple': {\n  \t\t\t\t'0%': {\n  \t\t\t\t\ttransform: 'scale(0)',\n  \t\t\t\t\topacity: '1'\n  \t\t\t\t},\n  \t\t\t\t'100%': {\n  \t\t\t\t\ttransform: 'scale(4)',\n  \t\t\t\t\topacity: '0'\n  \t\t\t\t}\n  \t\t\t}\n  \t\t},\n  \t\tanimation: {\n  \t\t\t'accordion-down': 'accordion-down 0.2s ease-out',\n  \t\t\t'accordion-up': 'accordion-up 0.2s ease-out',\n  \t\t\t'fade-in': 'fade-in 0.5s ease-out',\n  \t\t\t'fade-in-up': 'fade-in-up 0.6s ease-out',\n  \t\t\t'slide-in-right': 'slide-in-right 0.5s ease-out',\n  \t\t\t'slide-in-left': 'slide-in-left 0.5s ease-out',\n  \t\t\t'scale-in': 'scale-in 0.3s ease-out',\n  \t\t\t'bounce-in': 'bounce-in 0.6s ease-out',\n  \t\t\t'shimmer': 'shimmer 2s linear infinite',\n  \t\t\t'glow': 'glow 2s ease-in-out infinite',\n  \t\t\t'float': 'float 3s ease-in-out infinite',\n  \t\t\t'wobble': 'wobble 0.8s ease-in-out',\n  \t\t\t'ripple': 'ripple 0.6s linear'\n  \t\t},\n  \t\ttypography: {\n  \t\t\tDEFAULT: {\n  \t\t\t\tcss: {\n  \t\t\t\t\tmaxWidth: 'none',\n  \t\t\t\t\tcolor: 'hsl(var(--foreground))',\n  \t\t\t\t\tfontFamily: 'Georgia\", \"Times New Roman\", \"Times\", serif',\n  \t\t\t\t\tlineHeight: '1.7',\n  \t\t\t\t\t'.lead': {\n  \t\t\t\t\t\tcolor: 'hsl(var(--muted-foreground))'\n  \t\t\t\t\t},\n  \t\t\t\t\ta: {\n  \t\t\t\t\t\tcolor: 'hsl(var(--primary))',\n  \t\t\t\t\t\ttextDecoration: 'underline',\n  \t\t\t\t\t\tfontWeight: '500'\n  \t\t\t\t\t},\n  \t\t\t\t\tstrong: {\n  \t\t\t\t\t\tcolor: 'hsl(var(--foreground))',\n  \t\t\t\t\t\tfontWeight: '600'\n  \t\t\t\t\t},\n  \t\t\t\t\t'li::marker': {\n  \t\t\t\t\t\tcolor: 'hsl(var(--muted-foreground))'\n  \t\t\t\t\t},\n  \t\t\t\t\thr: {\n  \t\t\t\t\t\tborderColor: 'hsl(var(--border))',\n  \t\t\t\t\t\tborderTopWidth: 1\n  \t\t\t\t\t},\n  \t\t\t\t\tblockquote: {\n  \t\t\t\t\t\tfontWeight: '500',\n  \t\t\t\t\t\tfontStyle: 'italic',\n  \t\t\t\t\t\tcolor: 'hsl(var(--foreground))',\n  \t\t\t\t\t\tborderLeftWidth: '0.25rem',\n  \t\t\t\t\t\tborderLeftColor: 'hsl(var(--border))',\n  \t\t\t\t\t\tquotes: '\\\\\\\\201C\"\"\\\\\\\\201D\"\"\\\\\\\\2018\"\"\\\\\\\\2019\"'\n  \t\t\t\t\t},\n  \t\t\t\t\th1: {\n  \t\t\t\t\t\tcolor: 'hsl(var(--foreground))',\n  \t\t\t\t\t\tfontWeight: '800'\n  \t\t\t\t\t},\n  \t\t\t\t\th2: {\n  \t\t\t\t\t\tcolor: 'hsl(var(--foreground))',\n  \t\t\t\t\t\tfontWeight: '700',\n  \t\t\t\t\t\tpaddingBottom: '0.5rem',\n  \t\t\t\t\t\tborderBottomWidth: '1px',\n  \t\t\t\t\t\tborderBottomColor: 'hsl(var(--border))',\n  \t\t\t\t\t\tmarginBottom: '1.5rem'\n  \t\t\t\t\t},\n  \t\t\t\t\th3: {\n  \t\t\t\t\t\tcolor: 'hsl(var(--foreground))',\n  \t\t\t\t\t\tfontWeight: '600',\n  \t\t\t\t\t\tpaddingBottom: '0.5rem',\n  \t\t\t\t\t\tborderBottomWidth: '1px',\n  \t\t\t\t\t\tborderBottomColor: 'hsl(var(--border))',\n  \t\t\t\t\t\tmarginBottom: '1.5rem'\n  \t\t\t\t\t},\n  \t\t\t\t\th4: {\n  \t\t\t\t\t\tcolor: 'hsl(var(--foreground))',\n  \t\t\t\t\t\tfontWeight: '600'\n  \t\t\t\t\t},\n  \t\t\t\t\t'figure figcaption': {\n  \t\t\t\t\t\tcolor: 'hsl(var(--muted-foreground))'\n  \t\t\t\t\t},\n  \t\t\t\t\tcode: {\n  \t\t\t\t\t\tcolor: 'hsl(var(--foreground))',\n  \t\t\t\t\t\tfontWeight: '500',\n  \t\t\t\t\t\tfontSize: '0.875em',\n  \t\t\t\t\t\tbackgroundColor: 'hsl(var(--muted))',\n  \t\t\t\t\t\tpaddingLeft: '0.25rem',\n  \t\t\t\t\t\tpaddingRight: '0.25rem',\n  \t\t\t\t\t\tpaddingTop: '0.125rem',\n  \t\t\t\t\t\tpaddingBottom: '0.125rem',\n  \t\t\t\t\t\tborderRadius: '0.25rem'\n  \t\t\t\t\t},\n  \t\t\t\t\t'a code': {\n  \t\t\t\t\t\tcolor: 'hsl(var(--primary))'\n  \t\t\t\t\t},\n  \t\t\t\t\tp: {\n  \t\t\t\t\t\tmarginBottom: '1.5rem',\n  \t\t\t\t\t\tlineHeight: '1.8'\n  \t\t\t\t\t},\n  \t\t\t\t\tpre: {\n  \t\t\t\t\t\tcolor: 'hsl(var(--foreground))',\n  \t\t\t\t\t\tbackgroundColor: 'hsl(var(--muted))',\n  \t\t\t\t\t\toverflowX: 'auto',\n  \t\t\t\t\t\tfontWeight: '400',\n  \t\t\t\t\t\tborderRadius: '0.5rem',\n  \t\t\t\t\t\tboxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n  \t\t\t\t\t\tborder: '1px solid hsl(var(--border))',\n  \t\t\t\t\t\tmarginBottom: '2rem',\n  \t\t\t\t\t\tmarginTop: '2rem'\n  \t\t\t\t\t},\n  \t\t\t\t\t'pre code': {\n  \t\t\t\t\t\tbackgroundColor: 'transparent',\n  \t\t\t\t\t\tborderWidth: '0',\n  \t\t\t\t\t\tborderRadius: '0',\n  \t\t\t\t\t\tpadding: '0',\n  \t\t\t\t\t\tfontWeight: 'inherit',\n  \t\t\t\t\t\tcolor: 'inherit',\n  \t\t\t\t\t\tfontSize: 'inherit',\n  \t\t\t\t\t\tfontFamily: 'inherit',\n  \t\t\t\t\t\tlineHeight: 'inherit'\n  \t\t\t\t\t},\n  \t\t\t\t\ttable: {\n  \t\t\t\t\t\twidth: '100%',\n  \t\t\t\t\t\ttableLayout: 'auto',\n  \t\t\t\t\t\ttextAlign: 'left',\n  \t\t\t\t\t\tmarginTop: '2em',\n  \t\t\t\t\t\tmarginBottom: '2em',\n  \t\t\t\t\t\tfontSize: '0.875em',\n  \t\t\t\t\t\tlineHeight: '1.7142857'\n  \t\t\t\t\t},\n  \t\t\t\t\tthead: {\n  \t\t\t\t\t\tborderBottomWidth: '1px',\n  \t\t\t\t\t\tborderBottomColor: 'hsl(var(--border))'\n  \t\t\t\t\t},\n  \t\t\t\t\t'thead th': {\n  \t\t\t\t\t\tcolor: 'hsl(var(--foreground))',\n  \t\t\t\t\t\tfontWeight: '600',\n  \t\t\t\t\t\tverticalAlign: 'bottom'\n  \t\t\t\t\t},\n  \t\t\t\t\t'tbody tr': {\n  \t\t\t\t\t\tborderBottomWidth: '1px',\n  \t\t\t\t\t\tborderBottomColor: 'hsl(var(--border))'\n  \t\t\t\t\t},\n  \t\t\t\t\t'tbody tr:last-child': {\n  \t\t\t\t\t\tborderBottomWidth: '0'\n  \t\t\t\t\t},\n  \t\t\t\t\t'tbody td': {\n  \t\t\t\t\t\tverticalAlign: 'baseline'\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n}","usedDeprecatedRules":[{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]}]}]
